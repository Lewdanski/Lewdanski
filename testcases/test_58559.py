# :suit_description: #58559 
# :revision_date: 21.02.2023

@pytest.mark.skip(reason="Template")
def test_46487_29(app, credo_db):
    """
    {#
        :id:                46487_29
        :priority:          Средний
        :module:            Переводы
        :description:       Переводы. Проверка обязательности полей "Имя латинскими буквами" и "Фамилия латинскими буквами". (56634) Проверка установки запрета на использование эл.почты @bgpb.by. (56006) ЕФР Профиль клиента: подключение клиента к ДБО. (57657)Проверка клиента в KYC(Siron), если check_status = inconspic. Форма "Проверка клиента в KYC(Siron)" не отображается. (57737)Проверка передачи данных (КПП, КБК, ОКТМО, УИП) бенефициара (ЮЛ) в АБС Бисквит и МР посредством сервиса CurrencyTransferRequest. (58838) Отправка СМС клиенту с текстом из параметра «textSMS_create_login» на варианте
        :precondition:      Пользователь СКЗ авторизован с параметром seNewCabinet "Использование нового интерфейса" = "да"
        :precondition:      Тестовый клиент не подключен к СДБО
        :precondition:      Статус клиента в Siron KYC равен inconspic
        :precondition:      На продукте\варианте параметр doKyc = Да
        :precondition:      На продукте\варианте параметр checkSoatoFields = да
        :precondition:      На продукте\варианте параметр needPreActualization = нет
        :precondition:      В itwCredo-kyc.properties внесены соответствующие настройки (kyc.url, emails, timeout, workingTimeRole)
        :precondition:      Получатель (ЮЛ) отсутствует в учетной системе
        :precondition:      На варианте параметр textSMS_create_login создан со значением = "Тест1. Скачайте, пожалуйста, приложение https://belgazprombank.by/about/mobile_app/"
        :source_point:      46487, 56006, 56634, 57657, 57737, 58559, 58838
        :comment:           Siron KYC: для установки статусов / получения ответов по Клиенту использовался эмулятор - бот для сайрона @itwAssistantBot, в itwCredo-kyc.properties kyc.url=http://autotest.itworks.brest:8301/siron
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 108 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'Transfers'

    VARIANT = 'SwiftTransfer'


    # :newpage: #######################################################################################################

    # :step: Ввести на форме "Поиск клиента" Личный номер Клиента
    value = '4120776M017PB9'
    # :step: Нажимаем кнопку "Искать"
    # :step: Нажимаем на найденную краткую карточку клиента

    # :newpage: ######################################################################################################

    # :step: В профиле клиента в блоке "ДЕЙСТВИЯ С ПРОДУКТАМИ" выбираем продукт
    value = 'Переводы'
    # :step: выбираем вариант
    value = 'SWIFT-перевод без открытия счета'
    # :step: Нажимаем "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: На параметрах заявки присутствуют параметры doKyc ([KYC] Проверять клиента в KYC) со значением "да"
    # :assert: На заявке установился статус «Ввод параметров заявки»
    # :step: Нажимаем кнопку "Отправитель"

    # :newpage: #######################################################################################################

    # :assert: Переходим на форму актуализации данных отправителя
    # :assert: Поля "Имя латинскими буквами" и "Фамилия латинскими буквами" обязательны для заполнения
    # :step: Вводим фамилию латинскими буквами
    value = 'Petrov'
    # :step: Вводим имя латинскими буквами
    value = 'Petr'
    # :step: Заполняем поле E-mail
    value = 'NOVYI@BGPB.BY'
    # :step: Нажимаем кнопку "Далее"
    # :assert: Выводится ошибка -"На форме имеются ошибки".
    # :step: На форме "Ошибка" Нажимаем кнопку "Закрыть".
    # :assert: Напротив поля E-mail выводится сообщение - "Использование электронной почты ОАО "Белгазпромбанк" не в служебных целях запрещено. Введите иной адрес электронной почты"
    # :assert: Кнопка "Далее" недоступна, отсутствует возможность завершить заявку.
    # :step: Заполняем поле E-mail
    value = 'N_VYI1@local.BY'
    # :step: Нажимаем кнопку "Создать" в блоке "Подключение к ДБО"
    # :step: Нажимаем кнопку "Да" в модальном окне с сообщением "Вы уверены что хотите зарегистрировать клиента в ДБО?"
    # :assert: В поле "Логин в ДБО" отображается номер мобильного телефона клиента
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Вводим Сумму
    value = '1000'
    # :step: Выбираем валюту
    value = 'EUR'
    # :step: Выбираем код банка получателя
    value = 'BELBBY2XXXX'
    # :step: Нажимаем кнопку "Получатель"

    # :newpage: #######################################################################################################

    # :step: Вводим УНП/ИНН (или иной регистрационный код), которое отсутствует в учетной системе
    value = '800111223'
    # :step: Нажимаем кнопку "Поиск получателя перевода"
    # :assert: Отобразилось сообщение "Получатель не найден!"
    # :step: Нажимаем кнопку "Закрыть"
    # :step: Нажимаем кнопку "Заведение карточки получателя перевода"

    # :newpage: #######################################################################################################

    # :step: Устанавливаем радиобаттон ЮЛ
    # :step: Устанавливаем радиобаттон ЮЛ
    # :step: Вводим значение КПП
    value = '123456789'
    # :step: Вводим значение КБК
    value = '01234567891011121314'
    # :step: Вводим значение ОКТМО
    value = '9987654321'
    # :step: Вводим значение УИП
    value = '1'
    # :step: Заполняем блок "Адрес регистрации"
    # :step: Выбираем страну регистрации
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Выбираем Город или населенный пункт из справочника
    value = 'МИНСК Г'
    # :step: Выбираем Улица из справочника
    value = 'ЛЕНИНА УЛ'
    # :step: Выбираем Дом из справочника
    value = '10'
    # :step: Вводим Квартира/офис
    value = '1'
    # :step: Заполняем поле "Прочая информация"
    value = 'Прочая тестовая информация'
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Рассчитать размер комиссии"
    # :step: Выбираем назначение платежа
    value = 'Частный перевод'
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: нажимаем кнопку "Печать документов"
    # :step: Устанавливаем чекбокс Документы подписаны
    # :step: Нажимаем кнопку "Далее"
    # :assert: В истории выполнения процесса после окончания сохранения клиента создались задачи "Проверка KYC", "Запуск процесса KycChecker"
    # :assert: На параметрах заявки присутсвуют параметры kycId ([KYC] ID для проверки в Siron) = EFR228002220_2cc
    # :assert: Результат проверки сохранен в параметрах на заявки kycStatus ([KYC] Статус проверки клиента в KYC) = inconspic, kycDate ([KYC] Время проверки клиента в KYC) = 2022-07-06T09:39:13, kycComment ([KYC] Комментарий к проверке клиента в KYC) = Статус inconspic успешно установлен
    # :assert: На параметрах заявки "Создание логина в ДБО" (create_login_dbo) = "Да"
    # :assert: На параметрах клиента в ЕРК и СКЗ значение Логина СДБО, равное номеру мобильного телефона Клиента, сохраняется на параметре Клиента "Данные СДБО" (sdboData) - тег LoginSDBO
    # :assert: Данные сохранились на параметры клиента в СКЗ
    # :assert: Форма "Проверка клиента в KYC(Siron)" не отображается
    # :assert: Клиенту отправлено смс сообщение с текстом из параметра варианта "textSMS_create_login" ("Тест1. Скачайте, пожалуйста, приложение https://belgazprombank.by/about/mobile_app/")

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Передать выбранные платежи в кассу"
    # :step: Нажимаем кнопку "Проверить статус операции" после подтверждения платежа в кассе (В СОФЛ в таблице SWIFT_TRANSFERS устанавливаем статус заявки PAID)
     # :step: Устанавливаем чекбокс Платежное поручение передано клиенту
    # :step: Нажимаем "Завершить"
    # :assert: Заявка завершается исполнением со статусом "Окончена обработка"
    # :assert: В сервисе CurrencyTransferRequest дополнительно передаются данные: reasonCode (КПП), budgetClassificationCode (КБК), OKTMO (ОКТМО), uniquePaymentIdentifier (УИП); в теге <AccountingSystemAttributes> атрибуты: system="EFR", reference (номер заявки СКЗ), executiveId (ФИО исполнителя)  (см. ibank.log)

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_46487_33(app, credo_db):
    """
    {#
        :id:                46487_33
        :priority:          Средний
        :module:            Переводы
        :description:       Проверка формы актуализации отправителя перевода (существующий клиент). ЕФР Профиль клиента: подключение клиента к ДБО. Проверка клиента в KYC(Siron), если check_status = check, check_status = pending, check_status = release. Проверка доступа к задаче «Проверка клиента в KYC(Siron)». Проверка кнопки "Обновить" на форме «Проверка клиента в KYC(Siron)», если check_status = check. Проверка автоматического обновления результата на форме задачи «Проверка клиента в KYC(Siron)», если check_status = pending. Проверка автоматического обновления результата в нерабочее время на форме задачи «Проверка клиента в KYC(Siron)», если check_status = pending (58550) Видимость задачи "Проверка клиента в KYC(Siron)"
        :precondition:      Пользователь (инициатор заявки) находится в Профиле клиента, авторизован со всеми прами, ролями
        :precondition:      Параметр клиента formPassed = нет
        :precondition:      Клиент (отправитель) не подключен к СДБО
        :precondition:      Отправитель существует в учетной системе банка
        :precondition:      Статус клиента в Siron KYC равен check
        :precondition:      В списке параметров продукта "Transfers" присутствует параметр needPreActualization ("Необходима предварительная актуализация клиента") со значением "нет"
        :precondition:      На варианте параметр doKyc = Да
        :precondition:      Пользователь maslovа только с ролью admins
        :precondition:      Пользователь semenov только с ролью front_office
        :precondition:      У пользователя hominskaya все роли, кроме admins и  front_office
        :precondition:      В файле itwcredo-kyc.properties параметр workingTimeRole=front_office
        :precondition:      Для роли front_office установлено начало рабочего времени = 13:00
        :precondition:      Системное время = 12:30
        :precondition:      В itwCredo-kyc.properties внесены соответствующие настройки (kyc.url, emails=credospam@itworks.by, timeout=300, workingTimeRole=front_office)
        :source_point:      46487, 56006, 57657, 58550, 58559
        :comment:           Siron KYC: для установки статусов / получения ответов по Клиенту использовался эмулятор - бот для сайрона @itwAssistantBot, в itwCredo-kyc.properties kyc.url=http://autotest.itworks.brest:8301/siron
        :comment:           Задача "Проверка клиента в KYC(Siron)"назначается на инициатора заявки, на роли admins и front_office
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 101 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 102 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'Transfers'

    VARIANT = 'SwiftTransfer'


    # :newpage: #######################################################################################################

    # :step: Переходим к форме "Ввод параметров заявки на оформление перевода"
    # :assert: На параметрах заявки присутствуют параметры doKyc ([KYC] Проверять клиента в KYC) со значением "да"
    # :step: На варианте  изменяем значение параметра doKyc ([KYC] Проверять клиента в KYC) = нет
    # :step: Вводим Сумму
    value = '1000'
    # :step: Выбираем валюту
    value = 'ЕВРО'
    # :step: Нажимаем кнопку "Рассчитать размер комиссии"
    # :step: Нажимаем кнопку "Отправитель"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента", изменяем фамилию
    value = 'Петрова'
    # :step: Изменяем имя
    value = 'Инна'
    # :step: Изменяем отчество
    value = 'Петровна'
    # :step: Изменяем пол
    value = 'Женский'
    # :step: Изменяем имя латинскими буквами
    value = 'INNA'
    # :assert: Поле "Имя латинскими буквами" обязательно для заполнения
    # :step: заполняем фамилию латинскими буквами
    value = 'PETROVA'
    # :assert: Поле "Фамилия латинскими буквами" обязательно для заполнения
    # :step: Изменяем гражданство
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Изменяем дату рождения
    value = '15.06.1989'
    # :step: Нажимаем кнопку "Деактивировать"
    # :step: заполняем "Тип докумета"
    value = 'Паспорт'
    # :step: заполняем серия и номер документа
    value = 'UH4567112'
    # :step: заполняем кем выдан документ
    value = 'Ленинский РОВД, г.Брест'
    # :step: заполняем дату выдачи
    value = '14.03.2019'
    # :step: заполняем срок действия документа
    value = '14.03.2029'
    # :step: Изменяем страну рождения
    value = 'BLR РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Изменяем тип населенного пункта
    value = 'Город'
    # :step: Изменяем населенный пункт
    value = 'Брест'
    # :step: Изменяем страну места регистрации
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Изменяем город или населенный пункт
    value = 'БРЕСТ г, БРЕСТСКАЯ обл'
    # :step: Изменяем улицу
    value = 'МОЛОДЕЖНАЯ УЛ'
    # :step: Изменяем дом
    value = '12'
    # :step: Изменяем квартиру
    value = '1'
    # :step: устанавливаем флаг место проживания аналогично месту регистрации
    # :step: Изменяем мобильный телефон
    value = '+375297416952'
    # :step: указываем "Согласие на осуществление рекламных рассылок"
    value = 'Согласие получено'
    # :step: "Логин ДБО" нажимаем кнопку "Создать"
    value = '375297416952'
    # :step: нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форму ввода параметров заявки подтянулись данные отправителя с параметров СКЗ
    # :assert: Клиент был обновлен в СКЗ, в параметрах клиента присутствуют все введенные на форме значения
    # :assert: Вернулись к форме ввода данных заявки, на заявке установлен статус "Ввод параметров заявки на оформление перевода"

    # :newpage: #######################################################################################################

    # :step: Выбираем Код банка-получателя
    value = 'BELBBY2XXXX'
    # :step: Нажимаем кнопку "Получатель"
    # :assert: Заявка переходит в статус "Выбор получателя перевода"

    # :newpage: #######################################################################################################

    # :step: Вводим наименование
    value = 'ИП ИВАНОВ'
    # :step: Выбираем найденную карточку

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Выбираем назначение платежа
    value = 'Частный перевод'
    # :step: Нажимаем Далее

    # :newpage: #######################################################################################################

    # :step: Нажимаем Печать документов
    # :step: Устанавливаем чекбокс "Документы подписаны"
    # :step: Нажимаем "Далее"
    # :assert: В истории выполнения процесса после окончания сохранения клиента создались задачи "Проверка KYC", "Запуск процесса KycChecker"
    # :assert: На параметрах заявки присутствуют параметры kycId ([KYC] ID для проверки в Siron) = EFR2455865_fa986
    # :assert: Результат проверки сохранен в параметрах на заявки kycStatus ([KYC] Статус проверки клиента в KYC) = check, kycDate ([KYC] Время проверки клиента в KYC) = 2022-07-06T16:46:38, kycComment ([KYC] Комментарий к проверке клиента в KYC) = Статус check успешно установлен

    # :newpage: #######################################################################################################

    # :assert: Отобразилась форма «Проверка клиента в KYC(Siron)»
    # :assert: На форме «Проверка клиента в KYC(Siron)» в поле «Результат проверки» получен статус "На проверке УФМ (произошло совпадение)"
    # :assert: Кнопка "Завершить" не доступна для нажатия
    # :step: В Siron KYC устанавливаем статус pending
    # :step: Нажимаем кнопку "Обновить" на форме «Проверка клиента в KYC(Siron)»
    # :assert: В истории выполнения процесса создались задачи "Проверка KYC", "Запуск процесса KycChecker"
    # :assert: На параметрах заявки присутствуют параметры kycId ([KYC] ID для проверки в Siron) = EFR2456099_fce99
    # :assert: Результат проверки сохранен в параметрах на заявки kycStatus ([KYC] Статус проверки клиента в KYC) = pending, kycDate ([KYC] Время проверки клиента в KYC) = 2022-07-06T16:46:38, kycComment ([KYC] Комментарий к проверке клиента в KYC) = Статус pending успешно установлен

    # :newpage: #######################################################################################################

    # :assert: Отобразилась форма «Проверка клиента в KYC(Siron)», в поле «Результат проверки» получен статус "Отложен УФМ"
    # :step: В Siron KYC устанавливаем статус release
    # :step: Ожидаем 300 секунд (timeout=300)
    # :assert: Результат не обновляется на форме автоматически
    # :step: Ожидаем наступления рабочего времени
    # :assert: Результат обновился на форме автоматически, без обновления страницы браузера
    # :assert: В истории выполнения процесса создались задачи "Проверка KYC", "Запуск процесса KycChecker"
    # :assert: На параметрах заявки присутствуют параметры kycId ([KYC] ID для проверки в Siron) = EFR2455829_cc558
    # :assert: Результат проверки сохранен в параметрах на заявки kycStatus ([KYC] Статус проверки клиента в KYC) = release, kycDate ([KYC] Время проверки клиента в KYC) = 2022-07-06T16:46:38, kycComment ([KYC] Комментарий к проверке клиента в KYC) = Статус release успешно установлен

    # :newpage: #######################################################################################################

    # :assert: Отобразилась форма «Проверка клиента в KYC(Siron)»
    # :assert: На форме «Проверка клиента в KYC(Siron)» в поле «Результат проверки» получен статус "Совпадений нет по результатам проверки УФМ"
    # :step: Нажимаем кнопку "Отмена"
    # :assert: заявка доступна инициатору заявки
    # :assert: заявка доступна пользователю с ролью admins (maslova)
    # :assert: заявка доступна пользователю с ролью front_office (semenov)
    # :assert: заявка недоступна пользователю без роли admins или front_office (hominskaya)
    # :step: На форме «Проверка клиента в KYC(Siron)» нажимаем "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Переходим на форму "Выгрузка платежей"
    # :step: Нажимаем кнопку "Передать выбраные платежи в кассу"
    # :step: В СОФЛ в таблице SWIFT_TRANSFERS устанавливаем статус заявки PAID
    # :step: Нажимаем кнопку "Проверить статус операции"
    # :step: Устанавливаем чекбокс Платежное поручение передано клиенту
    # :step: Нажимаем "Завершить"
    # :assert: Заявка завершилась со статусом "Окончена обработка"
    # :assert: Данные клиента отправителя были обновлены в учетной системе банка
    # :assert: На параметрах заявки "Создание логина в ДБО" (create_login_dbo) = "Да"
    # :assert: На параметрах клиента в ЕРК и СКЗ значение Логина СДБО, равное номеру мобильного телефона Клиента, сохраняется на параметре Клиента "Данные СДБО" (sdboData) - тег LoginSDBO

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_49057_5.4(app, credo_db):
    """
    {#
        :id:                49057_5.4
        :priority:          Средний
        :module:            Депозиты
        :description:       Оформление досрочного возврата вклада в наличной форме в кассе Банка. 48202_53 Проверки на форме "Реквизиты клиента": отсутствие возможности ввода неразрешенных символов, включая кириллицу, в начале поля ввода "Имя латинскими буквами" и ввода не более 50-ти символов, отсутствие возможности ввода неразрешенных символов в начале поля ввода "Фамилия латинскими буквами" и ввода не более 70-ти символов. Для обоих полей ввода "Имя латинскими буквами" и "Фамилия латинскими буквами" проверка автоматического перевода введенных символов нижнего регистра в верхний и обрезки лишних пробелов в конце введенной строки. (56006)Проверка блока "Подключение к ДБО" на форме "Реквизиты клиента"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      У пользователя СКЗ параметр useNewCabinet ("Использование нового интерфейса") = "Да"
        :precondition:      у тестового клиента есть вклад со следующими условиями: - Контракт вклада в статусе 'EXECUTE' или 'WORK'; - Дата окончания вклада больше текущей; - На счете вклада нет ареста (ITW_ACCNT.GET_ARREST); Для старых вкладов:(- доп. условие 'PARTIAL_WD' контракта/варианта/продукта имеет значение 'YES'; - доп. условие 'TERM_PRINCIPAL_MODE' контракта/варианта/продукта имеет значение 'YES';); Для новых вкладов (- доп. условие 'TERMINATION_MODE' контракта/варианта/продукта имеет значение 'YES'.). Сумма подоходного налога к возврату равно нулю
        :precondition:      Тестовый Клиент не подключен к ДБО
        :source_point:      48202, 56006, 58559
        :comment:           Вклад  "На 3 года отзывный - выгодный"_3 BYN (досрочное расторжение разрешено, дата завершения больше текущей, т.е. вклад действующий)
        :comment:           Касса 1010
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.04.2021
        :client_env:        Google Chrome 93 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 92 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 93 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'Deposits'

    VARIANT = 'EarlyRepayDep'


    # :newpage: #######################################################################################################

    # :step: ввести на форме "Поиск клиента" Личный номер тестового Клиента
    value = '3061061A063PB0'
    # :step: нажать кнопку "Искать"
    # :step: выбрать Клиента - кликнуть по отображенной карточке тестового Клиента

    # :newpage: #######################################################################################################

    # :assert: У клиента СКЗ сохраняется на параметре Клиента "Данные СДБО" (sdboData) - тег SDBONum из ответа ЕРК
    # :step: выбрать продукт на форме "Профиль клиента"
    value = 'Банковские вклады'
    # :step: выбрать вариант
    value = 'Оформление досрочного возврата вклада'
    # :step: нажать кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента" заполняем поле "Имя латинскими буквами" (спец. символы, цифры, пробел в начале имени, [-] в начале имени, кириллица)
    value = ' -Esta25te%wa Esta_ЙЩФЦГtewa'
    # :assert: Нет возможности в поле ввести спец. символы, цифры, пробел в начале имени, [-] в начале имени, кириллицу
    # :step: Заполняем поле "Фамилия латинскими буквами" (спец. символы, цифры, пробел в начале фамилии, [-] в начале фамилии, кириллица)
    value = ' -Esta25te№wa Esta_teЖЯЧЮЫwa'
    # :assert: Нет возможности в поле ввести спец. символы, цифры, пробел в начале фамилии, [-] в начале фамилии, кириллицу
    # :step: На форме заполняем поле "Имя латинскими буквами" количество вводимых символов больше 50 (51 символ), ввод символов ([-], [ ] между двумя словами), [ ] в конце имени, символы в нижнем регистре
    value = 'Estate-wa Estate-wa Estate-wa Estate-wa Estate-wa '
    # :assert: Нет возможности ввести 51-й символ
    # :assert: Все символы нижнего регистра автоматически переводятся в верхний регистр
    # :step: На форме заполняем поле "Фамилия латинскими буквами" количество вводимых символов больше 70 (71 символ), ввод символов  ([-], [ ] между двумя словами), [ ] в конце фамилии, символы в нижнем регистре
    value = 'Estate-wa Estate-wa Estate-wa Estate-wa Estate-wa Estate-wa Estate-wa '
    # :assert: Нет возможности ввести 71-й символ
    # :assert: Все символы нижнего регистра автоматически переводятся в верхний регистр
    # :step: Нажимаем кнопу "Создать"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Отображается форма "Выбор счета по списанию денежных средств". При переходе на форму "Выбор счета по списанию денежных средств" пробел введенный в конце полей "Имя латинскими буквами" и "Фамилия латинскими буквами" обрезается
    # :step: На форме "Выбор счета по списанию денежных средств" выбираем ранее оформленный вклад для расторжения (см. Предусловие тест-кейса)
    # :step: Нажимаем кнопку "Далее"
    # :assert: Осуществляется переход на форму "Определение способа досрочного возврата вклада"

    # :newpage: #######################################################################################################

    # :step: На форме "Определение способа досрочного возврата вклада" заполняем чекбокс "Заявление на досрочный возврат банковского вклада оформлено"
    # :step: Заполняем чекбокс "В наличной форме в кассе Банка"
    # :step: Заполняем радиобаттон выбранной Кассы
    # :step: Нажимаем кнопку "Далее"
    # :assert: В параметрах заявки сохраняется параметр isNotCash (Форма перечисления (безнал/нал)) = "нет".
    # :assert: Осуществляется переход на форму "Оформление документов при досрочном возврате вклада".

    # :newpage: #######################################################################################################

    # :step: На форме "Оформление документов при досрочном возврате вклада" формируем и проверяем сформированные документы, заполняем чекбокс "Документы оформлены"
    # :assert: Сформированы ожидаемые документы, без ошибок. Документы содержат корректные значения в сответствии с параметрами текущей заявки.
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: В ЕРК у клиента сохранились поля "Имя латинскими буквами" и "Фамилия латинскими буквами" в введенном на форме "Реквизиты клиента" виде, без пробелов и спец. символов, в верхнем регистре.
    # :assert: На параметрах заявки "Создание логина в ДБО" (create_login_dbo) = "Да"
    # :assert: На параметрах клиента в ЕРК и СКЗ значение Логина СДБО, равное номеру мобильного телефона Клиента, сохраняется на параметре Клиента "Данные СДБО" (sdboData) - тег LoginSDBO
    # :step: На форме "Завершение оформления досрочного возврата вклада" нажимаем кнопку "Завершить оформление"
    # :assert: Заявка завершается, статус "Окончена обработка"
    # :assert: В БИС Forpost произошло закрытие контракта вклада, создание акции возврата средств вклада и привязанной к ней транзакции на счет Кассы указанный как способ возврата. После акцептования транзакции по операции через Кассу средства поступают на указанный счет возврата

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_49057_6_1(app, credo_db):
    """
    {#
        :id:                49057_6_1
        :priority:          Средний
        :module:            Депозиты
        :description:       Проверка оформления возврата вклада для вкладов по истечению срока возврата. 48202_54 Проверки на форме "Реквизиты клиента": отсутствие возможности ввода неразрешенных символов, включая кириллицу, в начале поля ввода "Имя латинскими буквами" и ввода не более 50-ти символов, отсутствие возможности ввода неразрешенных символов в начале поля ввода "Фамилия латинскими буквами" и ввода не более 70-ти символов. Для обоих полей ввода "Имя латинскими буквами" и "Фамилия латинскими буквами" проверка автоматического перевода введенных символов нижнего регистра в верхний и обрезки лишних пробелов в конце введенной строки. (56006)Проверка блока "Подключение к ДБО" на форме "Реквизиты клиента"
        :precondition:      Клиент существует в ЕРК и СКЗ
        :precondition:      У пользователя СКЗ параметр useNewCabinet ("Использование нового интерфейса") = "Да"
        :precondition:      На варианте параметр mandatory_login_dbo "Обязательность создания учётной записи в ДБО" = "Да"
        :precondition:      Контракт вклада должен быть в состоянии OVERDUE
        :precondition:      В списке счетов отображаются все счета по вкладам,но кликабельны только счета в состоянии OVERDUE и EXECUTE, у которых дата завершения=текущей дате
        :precondition:      Тестовый Клиент не подключен к ДБО
        :precondition:      На счете вклада нет ареста (ITW_ACCNT.GET_ARREST).
        :source_point:      48202, 56006, 58559
        :comment:           
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.04.2021
        :client_env:        Google Chrome 93 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 92 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 93 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'Deposits'

    VARIANT = 'ReturnDeposit'


    # :newpage: #######################################################################################################

    # :step: ввести на форме "Поиск клиента" Личный номер тестового Клиента
    value = '4220141A056PB5'
    # :step: нажать кнопку "Искать"
    # :step: выбрать Клиента - кликнуть по отображенной карточке тестового Клиента

    # :newpage: #######################################################################################################

    # :assert: У клиента СКЗ сохраняется на параметре Клиента "Данные СДБО" (sdboData) - тег SDBONum из ответа ЕРК
    # :step: выбрать продукт на форме "Профиль клиента"
    value = 'Банковские вклады'
    # :step: выбрать вариант
    value = 'Оформление возврата вклада по истечении срока возврата'
    # :step: нажать кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента" заполняем поле "Имя латинскими буквами" (спец. символы, цифры, пробел в начале имени, [-] в начале имени, кириллица)
    value = ' -Esta25te%wa Esta_ЙЩФЦГtewa'
    # :assert: Нет возможности в поле ввести спец. символы, цифры, пробел в начале имени, [-] в начале имени, кириллицу
    # :step: Заполняем поле "Фамилия латинскими буквами" (спец. символы, цифры, пробел в начале фамилии, [-] в начале фамилии, кириллица)
    value = ' -Esta25te№wa Esta_teЖЯЧЮЫwa'
    # :assert: Нет возможности в поле ввести спец. символы, цифры, пробел в начале фамилии, [-] в начале фамилии, кириллицу
    # :step: На форме заполняем поле "Имя латинскими буквами" количество вводимых символов больше 50 (51 символ), ввод символов ([-], [ ] между двумя словами), [ ] в конце имени, символы в нижнем регистре
    value = 'Estate-wa Estate-wa Estate-wa Estate-wa Estate-wa '
    # :assert: Нет возможности ввести 51-й символ
    # :assert: Все символы нижнего регистра автоматически переводятся в верхний регистр
    # :step: На форме заполняем поле "Фамилия латинскими буквами" количество вводимых символов больше 70 (71 символ), ввод символов  ([-], [ ] между двумя словами), [ ] в конце фамилии, символы в нижнем регистре
    value = 'Estate-wa Estate-wa Estate-wa Estate-wa Estate-wa Estate-wa Estate-wa '
    # :assert: Нет возможности ввести 71-й символ
    # :assert: Все символы нижнего регистра автоматически переводятся в верхний регистр
    # :step: Нажимаем кнопку "Создать"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Отображается форма "Выбор счета, по которому необходимо осуществить возврат вклада по истечении срока возврата вклада". При переходе на форму "Выбор счета, по которому необходимо осуществить возврат вклада по истечении срока возврата вклада" пробел введенный в конце полей "Имя латинскими буквами" и "Фамилия латинскими буквами" обрезается
    # :step: На форме "Выбор счета, по которому необходимо осуществить возврат вклада по истечении срока возврата вклада" выбираем вклад.
    value = 'BY08OLMP34140000000800180244'
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Выбираем способ возврата вклада (чекбокс)
    value = 'В наличной форме в кассе Банка'
    # :step: Выбираем кассу банка (радиобаттон)
    value = 'Касса 1010'
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Заполняем чекбокс "Документы оформлены"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: В ЕРК у клиента сохранились поля "Имя латинскими буквами" и "Фамилия латинскими буквами" в введенном на форме "Реквизиты клиента" виде, без пробелов и спец. символов, в верхнем регистре.
    # :step: Выбираем кнопку "Завершить оформление"
    # :assert: Заявка Оформление возврата вклада по истечении срока возврата находится в статусе "Окончена обработка'
    # :assert: В списке счетов есть возможность выбора счета вклада  в состоянии OVERDUE.
    # :assert: На параметрах заявки "Создание логина в ДБО" (create_login_dbo) = "Да"
    # :assert: На параметрах клиента в ЕРК и СКЗ значение Логина СДБО сохраняется на параметре Клиента "Данные СДБО" (sdboData) - тег LoginSDBO
    # :assert: В БИС "Форпост" контракт перевелся в состояние TO_CLOSE.
    # :assert: При закрытии дня создались акции, после чего контракт перешел в состояние/ статус  - END/CLOSED.

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_49057_7.5(app, credo_db):
    """
    {#
        :id:                49057_7.5
        :priority:          Средний
        :module:            Депозиты
        :description:       Оформление переоформления вклада с пополнением действующего вклада/счета. (48202_55) Проверки на форме "Реквизиты клиента": отсутствие возможности ввода неразрешенных символов, включая кириллицу, в начале поля ввода "Имя латинскими буквами" и ввода не более 50-ти символов, отсутствие возможности ввода неразрешенных символов в начале поля ввода "Фамилия латинскими буквами" и ввода не более 70-ти символов. Для обоих полей ввода "Имя латинскими буквами" и "Фамилия латинскими буквами" проверка автоматического перевода введенных символов нижнего регистра в верхний и обрезки лишних пробелов в конце введенной строки. (56006)Проверка блока "Подключение к ДБО" на форме "Реквизиты клиента". (58838) СМС при создании логина в ДБО не отправляется - отсутствует параметр textSMS_create_login на продукте/варианте
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      У пользователя СКЗ параметр useNewCabinet ("Использование нового интерфейса") = "Да"
        :precondition:      На варианте параметр mandatory_login_dbo "Обязательность создания учётной записи в ДБО" = "Да"
        :precondition:      Находим вклад у которого присутствуют следующие условия: Контракт вклада в одном из состояний 'EXECUTE','WORK','OVERDUE'; На счете вклада нет ареста (ITW_ACCNT.GET_ARREST). Также для вкладов с датой окончания меньше даты филиала: доп. условия 'PARTIAL_WD' и 'TERM_PRINCIPAL_MODE' контракта/варианта/продукта имеют значение 'YES' для старых вкладов; доп. условие 'TERMINATION_MODE' контракта/варианта/продукта имеет значение 'YES' для новых вкладов.
        :precondition:      Тестовый Клиент не подключен к ДБО
        :precondition:      Параметр textSMS_create_login не создан на варианте, на продукте не заполнен
        :source_point:      48202, 56006, 58559, 58838
        :comment:           Вклад "МОЕ БУДУЩЕЕ (10 лет)" (дата завершения не равна текущей дате филиала)
        :comment:           Счет BY04OLMP30140900000600611134 в той же Валюте, что и Вклад
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 108 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'Deposits'

    VARIANT = 'ReopenDeposit'


    # :newpage: #######################################################################################################

    # :step: ввести на форме "Поиск клиента" Личный номер тестового Клиента
    value = '5170262E660GB4'
    # :step: нажать кнопку "Искать"
    # :step: выбрать Клиента - кликнуть по отображенной карточке тестового Клиента

    # :newpage: #######################################################################################################

    # :assert: У клиента СКЗ сохраняется на параметре Клиента "Данные СДБО" (sdboData) - тег SDBONum из ответа ЕРК
    # :step: выбрать продукт на форме "Профиль клиента"
    value = 'Банковские вклады'
    # :step: выбрать вариант
    value = 'Оформление переоформления вклада'
    # :step: нажать кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента" заполняем поле "Имя латинскими буквами" (спец. символы, цифры, пробел в начале имени, [-] в начале имени, кириллица)
    value = ' -Esta25te%wa Esta_ЙЩФЦГtewa'
    # :assert: Нет возможности в поле ввести спец. символы, цифры, пробел в начале имени, [-] в начале имени, кириллицу
    # :step: Заполняем поле "Фамилия латинскими буквами" (спец. символы, цифры, пробел в начале фамилии, [-] в начале фамилии, кириллица)
    value = ' -Esta25te№wa Esta_teЖЯЧЮЫwa'
    # :assert: Нет возможности в поле ввести спец. символы, цифры, пробел в начале фамилии, [-] в начале фамилии, кириллицу
    # :step: На форме заполняем поле "Имя латинскими буквами" количество вводимых символов больше 50 (51 символ), ввод символов ([-], [ ] между двумя словами), [ ] в конце имени, символы в нижнем регистре
    value = 'Estate-wa Estate-wa Estate-wa Estate-wa Estate-wa '
    # :assert: Нет возможности ввести 51-й символ
    # :assert: Все символы нижнего регистра автоматически переводятся в верхний регистр
    # :step: На форме заполняем поле "Фамилия латинскими буквами" количество вводимых символов больше 70 (71 символ), ввод символов  ([-], [ ] между двумя словами), [ ] в конце фамилии, символы в нижнем регистре
    value = 'Estate-wa Estate-wa Estate-wa Estate-wa Estate-wa Estate-wa Estate-wa '
    # :assert: Нет возможности ввести 71-й символ
    # :assert: Все символы нижнего регистра автоматически переводятся в верхний регистр
    # :step: В блоке "Подключение к ДБО" нажимаем кнопу "Создать"
    # :step: Нажимаем "Да" в модальном окне подтверждения (Вы уверены что хотите зарегистрировать клиента в ДБО?)
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Отображается форма "Выбор счета по списанию денежных средств". При переходе на форму "Выбор счета по списанию денежных средств" пробел введенный в конце полей "Имя латинскими буквами" и "Фамилия латинскими буквами" обрезается
    # :step: На форме "Выбор счета по списанию денежных средств" выбираем ранее оформленный вклад для его переоформления (см. Предусловие тест-кейса)
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Условия расторжения договора вклада при переоформлении" отмечаем чекбокс "Заявление на досрочный возврат банковского вклада оформлено"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Определение условий переоформления вклада" заполняем чекбокс "Пополнение действующего вклада/счета" и заполняем радиобаттон выбранного счета в отобразившейся таблие счетов Клиента с параметрами (Наименование, Номер счета, Валюта счета, Курс по валюте счета, Сумма в валюте счета) и столбцом для выбора
    # :step: Нажимаем кнопку "Далее"
    # :assert: Осуществляется переход на форму "Оформление документов при переоформлении вклада"
    # :assert: В параметрах заявки сохраняется параметр isNewDeposit (Способ переоформления вклада (новый вклад/пополнение существующего)) = "нет"

    # :newpage: #######################################################################################################

    # :step: На форме "Оформление документов при переоформлении вклада" формируем и проверяем сформированные документы, заполняем чекбокс "Документы оформлены"
    # :assert: Сформированы ожидаемые документы, без ошибок. Документы содержат корректные значения в сответствии с параметрами текущей заявки.
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: В ЕРК у клиента сохранились поля "Имя латинскими буквами" и "Фамилия латинскими буквами" в введенном на форме "Реквизиты клиента" виде, без пробелов и спец. символов, в верхнем регистре.
    # :assert: На параметрах заявки "Создание логина в ДБО" (create_login_dbo) = "Да"
    # :assert: На параметрах клиента в ЕРК и СКЗ значение Логина СДБО сохраняется на параметре Клиента "Данные СДБО" (sdboData) - тег LoginSDBO
    # :assert: СМС при создании логина в ДБО Клиенту не формируется
    # :step: На форме "Завершение оформления досрочного возврата вклада" заполняем чекбокс"Документы переданы клиенту"
    # :step: Нажимаем кнопку "Завершить оформление"
    # :assert: Заявка завершается, статус "Окончена обработка"
    # :assert: В БИС Forpost произошло закрытие переоформляемого вклада, создание акции пополнения выбранного счета Клиента и привязанной к ней транзакции со счета переоформляемого вклада Клиента на новый вклад.

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_49057_36_2(app, credo_db):
    """
    {#
        :id:                49057_36_2
        :priority:          Средний
        :module:            ЕФР/фронт
        :description:       Перевыпуск основной расчетной карточки с неперсонифицированной на персонифицированную карточку, получатель доверенное лицо. (56006)Проверка блока "Подключение к ДБО" на форме "Реквизиты клиента". (57840) Проверка отсутствия блока "Подключение к ДБО" на форме реквизитов третьего лица
        :precondition:      Клиент СДБО авторизирован и идентифицирован
        :precondition:      Пользователь СКЗ авторизирован
        :precondition:      Клиент существует в ЕРК
        :precondition:      Получатель карточки - неподключенный к СДБО существующий Клиент (третье лицо)
        :precondition:      В СКЗ у пользователя параметр useNewCabinet "Использование нового интерфейса" = "Да".
        :precondition:      В справочнике cart_for_variant на картах настроена возможность перевыпуска для карт
        :precondition:      У клиента есть неперсонифицированная расчетная карточка
        :source_point:      56006, 57840, 58559
        :comment:           
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 106 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 106 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'ClientNewCardInner'

    VARIANT = 'reissue_maincard'


    # :newpage: #######################################################################################################

    # :step: Создаем онлайн-заявку "Заявка на перевыпуск (замену) платежной карточки"
    # :step: Нажимаем кнопку "Продолжить" на форме с ознакомлением

    # :newpage: #######################################################################################################

    # :step: Выбираем карточку для перевыпуска
    value = 'Расчетная карточка "Классическая" Visa Classic'
    # :step: Выбираем новую карточку
    value = 'Расчетная Visa Platinum'
    # :step: Заполняем поле Пароль (например, девичья фамилия матери)
    value = 'CODEWORD'
    # :step: Выбираем способ получения карточки
    value = 'В Банке'
    # :step: Выбираем местонахождение офиса банка
    value = 'Минск'
    # :step: Выбираем офис выдачи карточки
    value = 'Отдел розничных операций / г.Минск ул.Притыцкого 60/2'
    # :assert: Расчет комиссии за перевыпуск составит 22 бел.руб., поэтому внизу появляется сообщение "вознаграждение за перевыпуск составит - 22 белорусских рублей"
    # :step: Заполняем радиобаттон раздела "Информирование по операциям"
    value = 'Отказаться от информирования'
    # :step: Заполняем поле "Сеансовый пароль" полученным при авторизации значением
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Отображается форма завершения перевыпуска платежной карточки
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Отображается форма списка заявок клиента, где появилась заявка на перевыпуск карточки с номером заявки в СКЗ

    # :newpage: #######################################################################################################

    # :step: В бэке на форме "Поиск клиента" заполняем поле "Личный номер"
    value = '6240382K513GB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем карточку клиента

    # :newpage: #######################################################################################################

    # :step: В профиле клиента в списке активных заявок по заявке созданной из ДБО нажимаем "Продолжить"

    # :newpage: #######################################################################################################

    # :step: Выбрать значение "Доверенное лицо"
    # :step: Ввести значение "№ доверенности"
    value = '123УК56-1'
    # :step: Ввести значение "Дата выдачи"
    value = '10.05.2019'
    # :step: Ввести значение "Срок действия"
    value = '10.05.2023'
    # :step: Нажимаем кнопку "Поиск клиента"

    # :newpage: #######################################################################################################

    # :assert: Отображается форма с "Поиск третьего лица в учетной системе Банка"
    # :step: Ввести значение "Личный номер"
    value = '7881160A992PB7'
    # :step: Нажимаем кнопку Поиск
    # :step: Выбираем карточку клиента

    # :newpage: #######################################################################################################

    # :assert: Отображается форма личных данных получателя
    # :assert: На форме отсутствует блок "Подключение к ДБО"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Отображается форма "Выдача платежной карточки"
    # :step: Отмечаем чекбокс
    # :step: Нажимаем кнопку "Завершить" выдачу карточки

    # :newpage: #######################################################################################################

    # :assert: Отображается форма "Подготовка документов к передаче на хранение"
    # :step: Отмечаем чекбокс
    # :step: Нажимаем кнопку "Далее"
    # :assert: Заявка переходит в статус "Карточка выдана"
    # :assert: В ИБ заявка переходит в статус "Одобрена"
    # :assert: На Клиенте (третье лицо) в СКЗ сохраняется параметр "Данные СДБО" (sdboData) - тег SDBONum

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_49057_39.4(app, credo_db):
    """
    {#
        :id:                49057_39.4
        :priority:          Средний
        :module:            ЕФР/фронт
        :description:       Оформление выпуска НЕ персонифицированной доп. карты с отображением на форме ИБ срока действия карты и способа получения пин-кода, c получением карты в Банке Доверенным лицом. (56006)Проверка блока "Подключение к ДБО" на форме "Реквизиты клиента"
        :precondition:      Клиент СДБО авторизирован под клиентом с личным номером 3171172A017PB2 (user00000059) и идентифицирован
        :precondition:      Пользователь СКЗ авторизирован
        :precondition:      В СКЗ у пользователя параметр useNewCabinet "Использование нового интерфейса" = "Да".
        :precondition:      Клиент получатель карточки (третье лицо) существует в ЕРК и не подключен к ДБО.
        :precondition:      У клиента присутствует основная НЕперсонифицированная платежная карточка с типом "Расчетная карточка Классическая MasterCard Standard PayPass".
        :precondition:      В справочнике СКЗ "Варианты продукта" для варианта основной карточки (Расчетная карточка "Классическая") заполняем поле чекбокс "Возможность выпуска доп. карточек" (да) и "Доступность выпуска доп. карточек" значением продукта/варианта "Расчетная карточка Классическая".
        :precondition:      В справочнике СКЗ "Типы карт для вариантов" для типа (дополнительной) карточки "Расчетная карточка "Классическая" MasterCard Standard PayPass Instant Issue" устанавливаем выбор значения "Возможность выпуска дополнительной карты в СДБО (Банк)" в поле "Отображение карточки в процессах", поле "Название для СДБО" не заполнено, в поле "Срок действия карт" выбрано "пять лет"
        :precondition:      На продукте/варианте СКЗ "Онлайн-заявка по ПК"/"Выпуск дополнительной карточки из ИБ" (add_card) заполняем параметр testDate (Тестовая дата) = "09.04.2019". Заполняем параметр "show_pin_delivery_and_card_date_till" = "да"
        :source_point:      56006, 58559
        :comment:           
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.04.2021
        :client_env:        Google Chrome 93 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 92 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 93 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'ClientNewCardInner'

    VARIANT = 'add_card'


    # :newpage: #######################################################################################################

    # :step: Создаем онлайн-заявку "Заявка на выпуск дополнительной карточки"
    # :step: Нажимаем кнопку "Продолжить" на форме с ознакомлением

    # :newpage: #######################################################################################################

    # :assert: Осуществляется переход на форму параметров выпуска карточки
    # :step: На форме параметров выпуска карточки заполняем поле "Выберите карточный счет" (см. основная карта в Предусловие)
    value = 'Расчетная карточка Классическая MasterCard Standard PayPass'
    # :step: Заполняем поле "Тип карточки" (см. доп. карта в Предусловие)
    value = 'Расчетная карточка Классическая MasterCard Standard PayPass Instant Issue'
    # :assert: Поля "Срок действия карточки" и "Способ доставки пин-кода" ниже поля "Пароль" отображаются, не редактируются и предзаполнены значениями по умолчанию: "Срок действия карточки" имеет срок равный сроку основной карточки, "Способ доставки пин-кода" = "SMS-сообщение"
    # :step: Заполняем поле "Пароль"
    value = 'password'
    # :step: Нажимаем кнопку способа получения карточки "В Банке"
    # :step: Заполняем поле "Местонахождение офиса банка"
    value = 'Минск'
    # :step: Заполняем поле "Офис выдачи карточки"
    value = 'Отдел розничных операций / г.Минск ул.Притыцкого 60/2'
    # :step: В блоке "Информирование по операциям" на сервисе «SMS-информирование» выбираем радиобаттон "Отказаться от информирования"
    # :step: Заполняем поле "Сеансовый пароль" полученным при авторизации значением
    # :step: Нажимаем кнопку "Завершить"
    # :assert: Осуществляется переход на форму принятия заявки на рассмотрение банком

    # :newpage: #######################################################################################################

    # :assert: На форме принятия заявки на рассмотрение банком с текстом вверху "Благодарим Вас за использование услуг нашего банка. Ваша заявка принята на рассмотрение. В случае принятия положительного решения будет произведена процедура выпуска дополнительной банковской платежной карты. Информация о текущем статусе заявки доступна к просмотру в разделе «Мои заявки»"
    # :step: Нажимаем кнопку "Завершить"
    # :assert: В СКЗ создается заявка продукта/варианта "Онлайн-заявка по ПК"/"Выпуск дополнительной карточки из ИБ" (add_card), заявка находится в статусе "Карточка готова к выдаче"

    # :newpage: #######################################################################################################

    # :step: В бэке на форме "Поиск клиента" заполняем поле "Личный номер"
    value = '6240382K513GB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем карточку клиента

    # :newpage: #######################################################################################################

    # :step: В профиле клиента в списке активных заявок по заявке созданной из ДБО нажимаем "Продолжить"

    # :newpage: #######################################################################################################

    # :step: На форме "Выбор получателя платежной карточки" заполняем поле "Получатель"
    value = 'Доверенное лицо'
    # :step: Заполняем поле "№ доверенности"
    value = '123564'
    # :step: Нажимаем кнопку "Поиск клиента"
    # :assert: Осуществляется переход на форму "Поиск третьего лица в учетной системе Банка"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск третьего лица в учетной системе Банка" заполняем поле "Личный номер"
    value = '3061061A063PB0'
    # :step: Нажимаем кнопку "Поиск карточки клиента"
    # :step: Выбираем карточку найденного клиента

    # :newpage: #######################################################################################################

    # :assert: Осуществляется переход на форму "Реквизиты клиента"
    # :step: В блоке "Подключение к ДБО" нажимаем кнопу "Создать"
    # :step: Нажимаем кнопу "Далее"

    # :newpage: #######################################################################################################

    # :assert: Осуществляется переход на форму "Выдача платежной карточки"
    # :assert: На параметрах заявки СКЗ "Создание логина в ДБО" (create_login_dbo) = "Да"
    # :assert: На параметрах подключаемого к СДБО клиента (третье лицо) в ЕРК и СКЗ сохранился "Данные СДБО" (sdboData) - тег LoginSDBO
    # :step: На форме "Выдача платежной карточки" заполняем чекбокс "Копия нотариальной доверенности изготовлена"
    # :step: Формируем документ расписку в получении платежной карточки
    # :step: Заполняем чекбокс "Расписка оформлена"
    # :step: Нажимаем кнопку "Завершить выдачу карточки"

    # :newpage: #######################################################################################################

    # :assert: Осуществляется переход на форму "Подготовка документов к передаче на хранение"
    # :step: На форме "Подготовка документов к передаче на хранение" заполняем чекбокс "Документы по заявке подготовлены"
    # :step: Нажимаем кнопку "Далее"
    # :assert: Заявка завершается, статус заявки "Заявка обработана"
    # :assert: В Forpost по контракту основной карты создан доп. контракт на доп. карточку со сроком действия равным сроку основной карты. "Способ доставки пин" на карте установлен по умолчанию: смс-сообщение (доп. условие на контракте карты в Forpost CRD_PIN_id_карточки = YES). Данные клиента корректно сохранены в ЕРК.

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_53610_54(app, credo_db):
    """
    {#
        :id:                53610_54
        :priority:          Средний
        :module:            Пенсии (пособия)
        :description:       Проверка сохранения получателя пенсии (пособия) в ерк. Вывод ошибки сохранения и установки статуса "Ошибка сохранения клиента". (56006) Подключение к ДБО. (56634) Проверка установки запрета на использование эл.почты @bgpb.by. (58838) Параметр «textSMS_create_login» на продукте/варианте удален - СМС клиенту не отправляется
        :precondition:      Клиент отсутствует в учетной системе банка
        :precondition:      У пользователя параметр  useNewCabinet "Использование нового интерфейса" = да.
        :precondition:      Инициатор заявки не имеет роли admins
        :precondition:      Пользователь admin имеет роль admins
        :precondition:      Пользователь gulevich не имеет роли admins
        :precondition:      На варианте параметр mandatory_login_dbo "Обязательность создания учётной записи в ДБО" = "Нет"
        :precondition:      Параметр «textSMS_create_login» удален на продукте, на варианте
        :source_point:      53610, 56006, 56634, 58559, 58838
        :comment:           В эмуляторе Smartvista в таблице pensioners присутствует новый тестовый клиент
        :comment:           Для возможности завершения заявки (активации карточки) выполняется апдейт карточки по номеру crd_code с установкой  crd_embossed = 'YES' и  crd_prod_status = 'M'
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 108 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'Pension'

    VARIANT = 'pensionApplicationRequest'


    # :newpage: #######################################################################################################

    # :step: На форме поиска клиента вводим "Личный номер"
    value = '7950680A648PB7'
    # :step: Нажмаем кнопку "Искать"
    # :step: Вводим Фамилию
    value = 'Пуговкина'
    # :step: Вводим Имя
    value = 'Ирина'
    # :step: Вводим Отчество
    value = 'Анатольевна'
    # :step: Вводим Мобильный телефон
    value = '+375296587931'
    # :step: Нажимаем кнопку "Создать клиента"

    # :newpage: #######################################################################################################

    # :step: Создаем заявку "Пенсии"/"Оформление заявления о перечислении пенсии (пособия)"

    # :newpage: #######################################################################################################

    # :assert: На форме "Ввод параметров заявки" заполнены поля "Идентификационный номер", "Фамилия", "Имя", "Отчество (при наличии)" значениями со страницы поиска Профиля клиента
    # :step: Заполняем поле "Дата рождения"
    value = '07.05.1956'
    # :step: Устанавливаем значение радиобаттонна "Пол"
    value = 'Ж'
    # :step: Нажимаем кнопку "Поиск назначений"
    # :step: Отмечаем радиобаттоном значение "Пенсионер"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #####################################################################################################

    # :step: На форме "Поиск карточки клиента – получателя пенсии (пособия)" выбираем найденную пенсионную карточку клиента

    # :newpage: #####################################################################################################

    # :assert: На форме "Ввод параметров заявки" заполнены поля "Фамилия", "Имя", "Отчество (при наличии)", "Пол", "Дата рождения", "Личный номер" значениями со страницы поиска Профиля клиента
    # :step: указываем Гражданство
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: заполняем "Тип докумета"
    value = 'Паспорт'
    # :step: указываем Серия и номер документа
    value = 'AB0031177'
    # :step: указываем Кем выдан документ
    value = 'СЫН МАМИНОЙ ПОДРУГИ'
    # :step: указываем Дата выдачи
    value = '20.01.2000'
    # :step: указываем Срок действия документа
    value = '20.10.2029'
    # :step: указываем Страна рождения(Блок Место рождения)
    value = 'BLR РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: указываем Область(Блок Место рождения)
    value = 'ОБЛАСТЬ'
    # :step: указываем Район(Блок Место рождения)
    value = 'РАЙОН'
    # :step: указываем Тип населенного пункта(Блок Место рождения)
    value = 'Город'
    # :step: указываем Населенный пункт(Блок Место рождения)
    value = 'БРЕСТ'
    # :step: указываем Страна(Блок Место регистрации)
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: указываем Город или населенный пункт(Блок Место регистрации)
    value = 'МИНСК Г'
    # :step: указываем Улица(Блок Место регистрации)
    value = 'ЛЕНИНА УЛ'
    # :step: указываем Дом(Блок Место регистрации)
    value = '10'
    # :step: указываем Квартира(Блок Место регистрации)
    value = '18'
    # :step: снимаем отметку с чекбокса Аналогично месту регистрации
    # :step: указываем Страна(Блок Место проживания)
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: указываем Город или населенный пункт(Блок Место проживания)
    value = 'БРЕСТ г, БРЕСТСКАЯ обл'
    # :step: указываем Улица(Блок Место проживания)
    value = 'ЛЕНИНА УЛ'
    # :step: указываем Дом(Блок Место проживания)
    value = '11'
    # :step: указываем Квартира(Блок Место проживания)
    value = '33'
    # :step: указываем Домашний  телефон
    value = '+375162434316'
    # :step: указываем Иной телефон
    value = '+375251231236'
    # :step: указываем Иной телефон
    value = '+375251231237'
    # :step: указываем Номер факса
    value = '+375162434318'
    # :step: указываем E-mail
    value = 'NOVYI@BGPB.BY'
    # :step: указываем Место работы
    value = 'библиотека пушкина'
    # :step: указываем Занимаемая должность
    value = 'Бухгалтер'
    # :step: указываем Адрес места работы
    value = 'кривошеина 13'
    # :step: Нажимаем "Добавить место работы
    # :step: Выбираем "Согласие на осуществление рекламных рассылок"
    value = 'Согласие получено'
    # :step: В блоке "Подключение к ДБО" нажимаем кнопу "Создать"
    # :step: Нажимаем "Да" в модальном окне подтверждения
    # :step: Нажимаем "Далее"
    # :assert: Выводится ошибка -"На форме имеются ошибки".
    # :step: На форме "Ошибка" Нажимаем кнопку "Закрыть".
    # :assert: Напротив поля E-mail выводится сообщение - "Использование электронной почты ОАО "Белгазпромбанк" не в служебных целях запрещено. Введите иной адрес электронной почты"
    # :assert: Кнопка "Далее" недоступна, отсутствует возможность завершить заявку.
    # :step: Заполняем поле E-mail
    value = 'N_VYI25@local.BY'
    # :step: нажимаем кнопку "Далее"

    # :newpage: #####################################################################################################

    # :assert: На параметрах заявки "Создание логина в ДБО" (create_login_dbo) = "Да"
    # :assert: На параметрах клиента в ЕРК и СКЗ значение Логина СДБО, равное номеру мобильного телефона Клиента, сохраняется на параметре Клиента "Данные СДБО" (sdboData) - тег LoginSDBO
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #####################################################################################################

    # :step: Нажимаем кнопку "Оформить базовый счет"

    # :newpage: #####################################оформление базового счета и карточки################################################################

    # :step: Продолжаем заявку с задачей "Выбор операции с базовым счётом"
    # :step: Выбираем "Тип операции"
    value = 'Открытие базового счета'
    # :step: Нажимаем "Далее"
    # :step: Выбираем "Тип карточки"
    value = 'Белкарт-премиум Базовая'
    # :step: Выбираем "Способ получения ПИН-кода"
    value = 'SMS-сообщение'
    # :step: Выбираем "Регион выдачи" совпадающий с точкой продаж пользователя
    value = 'Минск'
    # :step: Выбираем "Точка выдачи"
    value = 'Отдел розничных операций / г.Минск ул.Притыцкого 60/2'
    # :step: Нажимаем "Рассчитать стоимость оформления"
    # :step: Нажимаем "Далее"
    # :step: Вводим "Имя латинскими буквами"
    value = 'IRINA'
    # :step: Вводим "Фамилия латинскими буквами"
    value = 'PUGOVKINA'
    # :step: Вводим "Кодовое слово клиента"
    value = 'КАРТАМОЯ'
    # :step: Выбираем "Источник получения информации о продукте"
    value = 'Сайт банка'
    # :step: Нажимаем "Далее"
    # :step: на форме  Краткая FATCA*-идентификация клиента отмечаем "Отказываюсь от ответа"
    # :step: Нажимаем "Далее"
    # :step: на форме  Оформление заявления-анкеты отмечаем "Копия документа, удостоверяющего личность владельца счета, изготовлена"
    # :step: отмечаем "Заявления оформлены"
    # :step: Нажимаем "Подтвердить"
    # :step: отмечаем "Заявление оформлено" на форме "Печать уведомления"
    # :step: Нажимаем "Далее"
    # :step: Продолжаем заявку с задачей "Выбор получателя платежной карточки"
    # :step: Нажимаем "Далее" на форме "Выбор получателя платежной карточки"
    # :step: отмечаем "Копия документа, удостоверяющего личность владельца счета, изготовлена"
    # :step: отмечаем "Анкета оформлена"
    # :step: отмечаем "Выдача платежной карточки оформлена в заявлении-анкете"
    # :step: Нажимаем "Завершить выдачу карточки"
    # :step: отмечаем "Документы по заявке подготовлены"
    # :step: Нажимаем "Далее"

    # :newpage: #####################################################################################################

    # :step: Продолжаем задачу "Выбор счета для оформления заявления о перечислении пенсии (пособия)"
    # :step: Выбираем карточку для перечисления пенсии
    value = 'Расчетная карточка "Пенсионная" БЕЛКАРТ-ПРЕМИУМ'
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #####################################################################################################

    # :step: Нажимаем "Печать документов"
    # :step: Устанавливаем чек-бок "Документы подписаны, отметки мною проставлены"
    # :step: Редактируем xsl Сохранение в ЕРК (standalone\configuration\xsl\SaveClientForEFRToERK_in.xsl)
    # :step: Нажимаем "Завершить"
    # :assert: Переходим к задаче сохранение данных

    # :newpage: #####################################################################################################

    # :assert: На форму вывелся текст ошибки сохранения клиента в ЕРК
    # :assert: На заявке установился статус "Ошибка сохранения клиента"
    # :assert: Инициатор заявки и admin имеют доступ к задаче
    # :assert: Пользователь gulevich не имет доступа к задаче
    # :assert: Пользователям с ролью admins отправлен email с темой "Ошибка сохранения клиента по заявке <#> <текст ошибки>"
    # :step: Восcтанавливаем xsl
    # :step: Нажимаем "Завершить"
    # :assert: Данные клиента успешно сохранились в ерк
    # :assert: На параметрах клиента в ЕРК и СКЗ значение Логина СДБО, равное номеру мобильного телефона Клиента, сохраняется на параметре Клиента "Данные СДБО" (sdboData) - тег LoginSDBO
    # :assert: На мобильный номер клиента с <Priority> = 0 не отправляется СМС
    # :assert: Переходим к задаче "Регистрация заявления" (см. Историю выполнения процесса)

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_54353_7(app, credo_db):
    """
    {#
        :id:                54353_7
        :priority:          Средний
        :module:            Ядро
        :description:       "Описание параметров клиентов": проверка удаления параметров «DocTypeCode», «DocTypeCode_Img», и других параметров с мнемоникой по маске %Scan%; проверка создания параметров «Необходимость экспорта ДУЛ», «GUID ДУЛ», «Необходимость экспорта сопроводительного документа», «GUID сопроводительных документов». Проверка создания параметров PagesScannedSuccessfully и Sopr_PagesScannedSuccessfully. (56006) Параметр "sou_id" (Код СОУ). (58162) Установка отрицательного приоритета в списке "Описание параметров клиентов" по partner_surname, partner_givnames, partner_lastname, partner_birthday, partner_company, partner_profession, partner_avg_month_amount, otherphone_comment, otherphone, total_debt, links.
        :precondition:      У пользователя СКЗ параметр useNewCabinet ("Использование нового интерфейса") = "нет"
        :precondition:      Пользователя авторизован со всеми правами
        :source_point:      52812, 54353, 56006, 58162, 58559
        :comment:           
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 101 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 102 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = ''

    VARIANT = ''


    # :newpage: #######################################################################################################

    # :step: В СКЗ заходим в "Меню" \ "Клиенты" \ "Описание параметров клиентов"

    # :newpage: #######################################################################################################

    # :assert: В списке параметров отсутствует параметр «DocTypeCode»
    # :assert: В списке параметров отсутствует параметр «DocTypeCode_Img»
    # :assert: В списке параметров отсутствуют параметры с мнемоникой которая совпадает с маской %Scan%;
    # :assert: В списке параметров содержится параметр «Необходимость экспорта ДУЛ» со значением = "нет"
    # :assert: В списке параметров содержится параметр «GUID ДУЛ» с пустым значением
    # :assert: В списке параметров содержится параметр «Необходимость экспорта сопроводительного документа» со значением = "нет"
    # :assert: В списке параметров содержится параметр «GUID сопроводительных документов» с пустым значением и типом "строка"
    # :assert: В списке параметров содержится параметр с "Мнемоника" = "PagesScannedSuccessfully", "Наименование параметра" = "Количество успешно отсканированных страниц документа удостоверяющего личность", "Тип параметра" = "Число".
    # :assert: В списке параметров содержится параметр с "Мнемоника" = "Sopr_PagesScannedSuccessfully", "Наименование параметра" = "Количество успешно отсканированных страниц сопроводительного документа", "Тип параметра" = "Строка".
    # :assert: В "Описание параметров клиентов" существует параметр "sdboData" (Данные СДБО), тип "Строка"
    # :assert: по параметру "partner_surname" установлен отрицательный приоритет
    # :assert: по параметру "partner_givnames" установлен отрицательный приоритет
    # :assert: по параметру "partner_lastname" установлен отрицательный приоритет
    # :assert: по параметру "partner_birthday" установлен отрицательный приоритет
    # :assert: по параметру "partner_birthday" установлен отрицательный приоритет
    # :assert: по параметру "partner_profession" установлен отрицательный приоритет
    # :assert: по параметру "partner_avg_month_amount" установлен отрицательный приоритет
    # :assert: по параметру "otherphone_comment" установлен отрицательный приоритет
    # :assert: по параметру "otherphone" установлен отрицательный приоритет
    # :assert: по параметру "total_debt " установлен отрицательный приоритет
    # :assert: по параметру "links" установлен отрицательный приоритет

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_54557_1(app, credo_db):
    """
    {#
        :id:                54557_1
        :priority:          Средний
        :module:            Депозиты
        :description:       Оформление доп. взноса на "TERM%" вклад, наличными через Кассу третьим лицом, если сумма взноса больше 1000 б. в. с проверкой формирования приходного кассового ордера. (56006)Проверка блока "Подключение к ДБО" на форме "Реквизиты клиента". (56634) Проверка установки запрета на использование эл.почты @bgpb.by. (57840) Проверка отсутствия блока "Подключение к ДБО" на форме реквизитов третьего лица
        :precondition:      Пользователь авторизирован в СКЗ.
        :precondition:      В справочнике base_economic_parameters (Базовые экономические параметры) устанавливаем значение параметра base_value (Базовая величина) = 27
        :precondition:      У пользователя СКЗ параметр useNewCabinet ("Использование нового интерфейса") = "Да"
        :precondition:      Владелец вклада - подключенный к ДБО Клиент
        :precondition:      Вноситель денежных средств (третье лицо) - неподключенный к ДБО существующий Клиент со всеми обязательными параметрами (для заполнения формы Реквизиты клиента)
        :precondition:      На Продукте\Варианте "Банковские вклады"\"Оформление дополнительного взноса" заполняем значение параметра cashOrderText (Шаблон приходного кассового ордера для поля "Назначение платежа") = "Приходной кассовый ордер. Дополнительный взнос во вклад согласно договору № <depositCrtMnemo> от <depositDtFrom>"
        :precondition:      Для формирования отчета "Приходный кассовый ордер" на Продукте\Варианте "Банковские вклады"\"Оформление дополнительного взноса" заполняем параметр "cashOrderReportMnemo" = "DP_CASH_ORDER"
        :precondition:      На тестового клиента оформлены вклады в национальной валюте и соответствующие следующим условиям: - Контракт вклада в статусе 'EXECUTE' или 'WORK'; - Возможно пополнение вклада (ITW_EFR_DP.REPLENISHABLE_DEP): для новых вкладов TERM% (- доп. условие 'REPLENISHABLE_MODE' контракта/варианта/продукта имеет значение 'YES' или 'MANUAL'; - не наступила дата с которой пополнение запрещено согласно доп. условия 'ADD_END_FROM_MONTHS' контракта/варианта/продукта (текущая дата + ADD_END_FROM_MONTHS < даты окончания вклада)).
        :precondition:      На варианте параметр needPreActualization ("Необходима предварительная актуализация клиента") = "нет"
        :precondition:      На варианте параметр mandatory_login_dbo = да
        :precondition:      На варианте параметр doKYC= нет
        :source_point:      54557, 56006, 56634, 57840, 58559
        :comment:           Касса 1030
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 106 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 106 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'Deposits'

    VARIANT = 'RefillDeposit'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный (идентификационный) номер"
    value = '5151161M990GB7'
    # :step: нажать кнопку "Искать"
    # :step: выбрать Клиента - кликнуть по отображенной карточке тестового Клиента

    # :newpage: #######################################################################################################

    # :step: выбрать продукт на форме "Профиль клиента"
    value = 'Банковские вклады'
    # :step: выбрать вариант
    value = 'Оформление дополнительного взноса'
    # :step: нажать кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: на форме "Реквизиты клиента" отображается блок "Подключение к ДБО" - заполненное поле "Логин в ДБО", кнопка "Отправить пароль повторно"
    # :step: заполняем поле E-mail
    value = 'NOVYI@BGPB.BY'
    # :step: нажимаем кнопку "Далее"
    # :assert: Выводится ошибка -"На форме имеются ошибки".
    # :step: На форме "Ошибка" Нажимаем кнопку "Закрыть".
    # :assert: Напротив поля E-mail выводится сообщение - "Использование электронной почты ОАО "Белгазпромбанк" не в служебных целях запрещено. Введите иной адрес электронной почты"
    # :assert: Кнопка "Далее" недоступна, отсутствует возможность завершить заявку.
    # :step: Заполняем поле E-mail
    value = 'C1R_E-DOSPAM@local.BY'
    # :step: нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На параметрах Клиента Владельца вклада сохраняется на параметре Клиента "Данные СДБО" (sdboData) - тег SDBONum из ответа ЕРК
    # :step: Выбираем вклад (радиобатон), который необходимо пополнить на форме "ВЫБОР СЧЕТА ДЛЯ ЗАЧИСЛЕНИЯ ДЕНЕЖНЫХ СРЕДСТВ"
    value = 'BY94OLMP34140000000800324099'
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Заполняем поле "Сумма дополнительного взноса" на форме "ОПРЕДЕЛЕНИЕ УСЛОВИЙ ОСУЩЕСТВЛЕНИЯ ДОПОЛНИТЕЛЬНОГО ВЗНОСА"
    value = '95485'
    # :step: Заполняем радиобаттон выбранной Кассы
    value = '1030'
    # :step: отметить чекбокс "Документ, удостоверяющий личность, предоставлен"
    # :step: отметить чекбокс "Третьим лицом:" на форме "Вноситель денежных средств является:"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Осуществляется переход на форму "ПОИСК ТРЕТЬЕГО ЛИЦА В УЧЕТНОЙ СИСТЕМЕ БАНКА".
    # :step: вводим личный номер тестового Клиента
    value = '7695519A870PB9'
    # :step: нажать кнопку "Поиск карточки клиента"
    # :step: выбрать Клиента - кликнуть по отображенной карточке тестового Клиента

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента" отсутствует блок "Подключение к ДБО"
    # :step: Нажимаем кнопу "Далее"

    # :newpage: #######################################################################################################

    # :assert: Поле "Дополнить назначение платежа" заполнено значением из параметра cashOrderText (Шаблон приходного кассового ордера для поля "Назначение платежа") Продукта\Варианта (см. Предусловие). Теги, если есть, заполнены данными вклада.
    # :step: Нажимаем копку "Далее" на форме "НАЗНАЧЕНИЕ ПЛАТЕЖА"

    # :newpage: #######################################################################################################

    # :assert: На форме "Оформление документов при дополнительном взносе" над кнопками формирования документов отображается текст "Распечатайте необходимые документы, передайте Клиенту на проверку и подпись, затем оформите и передайте на дополнительный контроль:"
    # :assert: На форме над чекбоксом "Документы оформлены" отображается текст "Подтвердите оформление документов и осуществление дополнительного контроля:"
    # :assert: На форме отображается кнопка для формирования отчета "Печать приходного кассового ордера"
    # :step: Формируем (по нажатию кнопок) и проверяем сформированные документы: по кнопке "Печать приходного кассового ордера"
    # :assert: Сформированы ожидаемые документы, без ошибок. Документы содержат корректные значения в соответствии с параметрами текущей заявки.
    # :assert: Данные отчета "ПРИХОДНЫЙ КАССОВЫЙ ОРДЕР" корректны и совпадают с введенными ранее: содержат ФИО третьего лица (вносителя средств) (поле "От кого:") и назначение платежа с формы "НАЗНАЧЕНИЕ ПЛАТЕЖА", дату формирования отчета - дату филиала Forpost, счет Дебет - счет кассы выбранный ранее, счет Кредит - счет вклада для пополнения, номер договора вклада и сумму взноса (в т.ч. и прописью)
    # :step: Заполняем чекбокс "Документы оформлены"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Завершение оформления дополнительного взноса" вверху формы отображается текст "Передайте Клиенту документ, удостоверяющий личность, направьте его в кассу Банка для внесения суммы дополнительного взноса и передайте в кассу Банка оба экземпляра приходного кассового/валютного ордера."
    # :assert: Над кнопками навигации отображается текст "Завершите оформление операции:"
    # :step: Нажимаем кнопку "Завершить оформление"

    # :newpage: #######################################################################################################

    # :assert: заявка завершается, переход на форму "Профиль клиента"
    # :assert: В БИС Forpost присутствует не акцептованная приходная кассовая операция на сумму взноса в валюте вклада указанной ранее на форме "Определение условий осуществления дополнительного взноса". Сумма взноса отражена в «BOOK остатке».
    # :step: Акцептуем кассовую операцию.
    # :assert: Пополнение успешно произведено, остаток по вкладу увеличен на сумму взноса. По контракту вклада создались акция пополнения вклада «PRINCIPAL_IN» на сумму взноса и привязанная к ней транзакция со счета выбранной в заявке СКЗ Кассы. Сумма и валюта пополнения корректны.
    # :assert: В параметрах заявки СКЗ присутствуют корректные основные данные осуществленной операции пополнения (тип клиента пополнения, параметры вносителя, параметры пополняемого вклада, параметры перечисления (тип, сумма, валюта, счет списания, назначение платежа)) - параметры isClientOwner, depositAccountNumber, depositCrtMnemo, depositDtFrom, depositDtTill, isNotCash, refillAccntOrCassa, depositRefillAmount, depositCurrency, isDocProvided, isUndefinedPayer, thirdPersonCustCode, paymentPurpose, third_face, fromCabinet

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_54557_2(app, credo_db):
    """
    {#
        :id:                54557_2
        :priority:          Средний
        :module:            Депозиты
        :description:       (54557, 55008)Оформление НЕ "TERM%" вклада, наличными через Кассу третьим лицом (существующий клиент), в наличной форме пополнения, в иностранной валюте. (56006) Проверка блока "Подключение к ДБО" на форме "Реквизиты клиента". (56634) Проверка установки запрета на использование эл.почты @bgpb.by. (57567) Проверка клиента в KYC(Siron) (check - pending - release). (57840) Проверка отсутствия блока "Подключение к ДБО" на форме реквизитов третьего лица. (58550) Видимость задачи "Проверка клиента в KYC(Siron)"
        :precondition:      Пользователь авторизирован в СКЗ со всеми правами, ролями
        :precondition:      У пользователя СКЗ параметр useNewCabinet ("Использование нового интерфейса") = "Да"
        :precondition:      Владелец вклада - подключенный к ДБО Клиент. Клиент не числится в списках Siron (статус = inconspic (Совпадений нет после проверки)
        :precondition:      Клиент третье лицо - неподключенный к ДБО существующий Клиент. Клиент числится в списках Siron (статус = check (На проверке УФМ (произошло совпадение))
        :precondition:      На продукте\варианте параметр needPreActualization ("Необходима предварительная актуализация клиента") = "нет"
        :precondition:      На продукте\варианте параметр doKyc ([KYC] Проверять клиента в KYC) = "да"
        :precondition:      На продукте\варианте параметр mandatory_login_dbo = да
        :precondition:      Справочник "Варианты вкладов" заполнен, в справочнике присутствуют вклады в иностранной валюте с параметром "Оформление договора вклада на имя третьего лица" = Да
        :precondition:      В itwCredo-kyc.properties внесены настройки: kyc.url, emails=credospam@itworks.by, timeout=300
        :precondition:      Значение параметра kycEmailTemplate на варианте OpenDeposit - "ТЕСТ - Произошло совпадение в ЕФР со списками [ФИО] (ID [ kycId]]) при оформлении заявки [№заявки] по варианту [(Продукт) Вариант]. Вклад: [depositVariants] ([depositCurrency]) Работник банка: [ФИО сотрудника, оформлявшего заявку]. Телефон: [телефон сотрудника]"
        :precondition:      Текст записи "Уведомления о совпадении со списками в Siron KYC" из справочника «Информационные блоки ЕФР» - "ТЕСТ - Ожидайте результат проверки УФМ. Режим работы УФМ: Пн-Чт: 08:30 – 17:30* Пт: 08:30 – 16:15*. Сб-Вскр – выходные. *в предпраздничные дни режим работы сокращен на 1 час."
        :source_point:      54557, 55008, 56006, 56634, 57657, 57840, 58550, 58559
        :comment:           Вклад "На 3 года безотзывный-стабильный" USD
        :comment:           Siron KYC: для установки статусов / получения ответов по Клиенту использовался эмулятор - бот для сайрона @itwAssistantBot, в itwCredo-kyc.properties kyc.url=http://autotest.itworks.brest:8301/siron
        :comment:           Задача "Проверка клиента в KYC(Siron)"назначается на инициатора заявки, на роли admins
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 106 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 106 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'Deposits'

    VARIANT = 'OpenDeposit'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный (идентификационный) номер" тестового Клиента
    value = '5151161M990GB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Нажимаем на найденную краткую карточку клиента

    # :newpage: #######################################################################################################

    # :step: В профиле клиента в разделе "Действия с продуктами" заполняем поле "Продукт"
    value = 'Банковские вклады'
    # :step: В профиле клиента в разделе "Действия с продуктами" заполняем поле "Вариант"
    value = 'Оформление вклада'
    # :step: Нажимаем кнопку "Выполнить"
    # :assert: На заявке создан параметр doKyc = "да"
    # :step: На варианте "Оформление вклада" продукта "Банковские вклады" параметр doKyc устанавливаем = "нет"

    # :newpage: #######################################################################################################

    # :step: на форме "Реквизиты клиента" заполняем поле E-mail
    value = 'NOVYI@BGPB.BY'
    # :step: нажимаем кнопку "Далее"
    # :assert: Выводится ошибка -"На форме имеются ошибки".
    # :step: На форме "Ошибка" Нажимаем кнопку "Закрыть".
    # :assert: Напротив поля E-mail выводится сообщение - "Использование электронной почты ОАО "Белгазпромбанк" не в служебных целях запрещено. Введите иной адрес электронной почты"
    # :assert: Кнопка "Далее" недоступна, отсутствует возможность завершить заявку.
    # :step: Заполняем поле E-mail
    value = 'N1_V-YI@local.BY'
    # :step: нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На параметрах Клиента Владельца вклада сохраняется на параметре Клиента "Данные СДБО" (sdboData) - тег SDBONum из ответа ЕРК
    # :step: На форме "Подбор вклада" выставляем фильтр подбора "Оформление договора вклада на имя третьего лица"
    value = 'Да'
    # :step: Нажимаем кнопку "Подобрать"
    # :step: В таблице "Перечень вкладов" выбираем активный вклад (См. комментарий)
    # :step: Заполняем поле "Источник информирования"
    value = 'Радиореклама'
    # :step: Заполняем чекбокс "Клиент является Вносителем денежных средств на имя третьего лица"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск третьего лица в учетной системе Банка" заполняем поле "Личный номер" тестового Клиента
    value = '7689438A748PB0'
    # :step: Нажимаем кнопку "Поиск карточки клиента"
    # :step: Нажимаем на найденную краткую карточку клиента

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента" отсутствует блок "Подключение к ДБО"
    # :step: Нажимаем кнопу "Далее"

    # :newpage: #######################################################################################################

    # :assert: Осуществляется переход на форму "Определение способа внесения первоначального взноса на вклад"
    # :step: На форме "Определение способа внесения первоначального взноса на вклад" из списка касс выбираем радиобаттон кассы Банка
    value = '1010'
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Переходим на форму "Проверка клиента в KYC(Siron)"
    # :assert: При оформлении заявки используется значение параметра doKyc на заявке
    # :assert: На форме выводитсян ИД заявки, Результат проверки - Клиент ГУПОЛОВИЧ ЗАРДАР ВАЛЕРЬЕВИЧ На проверке УФМ (произошло совпадение), Клиент ГОРИН ЛИДИЙ ЕФИМОВИЧ Совпадений нет после проверки, активные кнопки "Обновить" и "Отмена", кнопка "Завершить" - неактивна. Выведен текст из справочника «Информационные блоки ЕФР» записи "Уведомления о совпадении со списками в Siron KYC")
    # :assert: Создается задача "Проверка клиента в KYC(Siron)"
    # :assert: В истории выполнения процесса после окончания сохранения клиента создались задачи "Проверка KYC", "Запуск процесса KycChecker"
    # :assert: Заявка находится в статусе "Отправлена на дополнительную проверку"
    # :assert: Задача "Проверка клиента в KYC(Siron)"назначается на инициатора заявки, на роли admins и front_office (Служебная информация о заявке - "Performers: <инициатор заявки>, admins, front_office.")
    # :assert: На пользователей с ролью admins и email-адреса из itwCredo-kyc.properties разосланы email с темой "Совпвдение в ЕФР со списками по заявке 2455927" и с текстом "ТЕСТ - Произошло совпадение в ЕФР со списками ГУПОЛОВИЧ ЗАРДАР ВАЛЕРЬЕВИЧ (ID EFR2456121_de4c7) при оформлении заявки 2456121 по варианту (Банковские вклады) Оформление вклада. Вклад: На 3 года безотзывный-стабильный (USD) Работник банка: Сычевская Анна Степановна. Телефон: +3754471552233". Текст сообщения = значение параметра kycEmailTemplate на варианте OpenDeposit (см.комментарий)
    # :assert: На заявке созданы параметры: doKyc = "да", kycId = EFR2456121_39c45, kycStatus = inconspic, kycComment = Статус inconspic успешно установлен, kycDate = 2022-07-13T16:31:09, kycId = kycId_thirdperson = EFR2456121_de4c7, kycStatus_thirdperson = check, kycComment_thirdperson = Статус check успешно установлен, kycDate_thirdperson = 2022-07-13T16:31:09
    # :step: Меняем статус проверки в Siron по клиенту ГУПОЛОВИЧ ЗАРДАР ВАЛЕРЬЕВИЧ на "Отложен УФМ (pending)"
    # :assert: По истечении таймера результат обновился на форме автоматически, без обновления страницы браузера: Результат проверки - Клиент ГУПОЛОВИЧ ЗАРДАР ВАЛЕРЬЕВИЧ Отложен УФМ, Клиент ГОРИН ЛИДИЙ ЕФИМОВИЧ Совпадений нет после проверки, активные кнопки "Обновить", "Завершить" и "Отмена"
    # :assert: Обновлены параметры на заявке: doKyc = "да", kycId = EFR2456121_39c45, kycStatus = inconspic, kycComment = Статус inconspic успешно установлен, kycDate = 2022-07-13T16:31:09, kycId = kycId_thirdperson = EFR2456121_de4c7, kycStatus_thirdperson = pending, kycComment_thirdperson = Статус pending успешно установлен, kycDate_thirdperson = 2022-07-13T16:47:36
    # :step: Меняем статус проверки в Siron по клиенту ГУПОЛОВИЧ ЗАРДАР ВАЛЕРЬЕВИЧ на "Совпадений нет по результатам проверки УФМ (release)"
    # :step: Нажимаем кнопку "Обновить"
    # :assert: Результат на форме обновился: Результат проверки - Клиент ГУПОЛОВИЧ ЗАРДАР ВАЛЕРЬЕВИЧ Совпадений нет по результатам проверки УФМ, Клиент ГОРИН ЛИДИЙ ЕФИМОВИЧ Совпадений нет после проверки, активные кнопки "Завершить" и "Отмена", кнопка "Обновить" - неактивна
    # :assert: Обновлены параметры на заявке: doKyc = "да", kycId = EFR2456121_39c45, kycStatus = inconspic, kycComment = Статус inconspic успешно установлен, kycDate = 2022-07-13T16:53:12, kycId = kycId_thirdperson = EFR2456121_de4c7, kycStatus_thirdperson = release, kycComment_thirdperson = Статус release успешно установлен, kycDate_thirdperson = 2022-07-13T16:53:12
    # :step: Нажимаем кнопку "Завершить"
    # :assert: Осуществляется переход на форму "Оформление документов при открытии вклада"

    # :newpage: #######################################################################################################

    # :step: На форме "Оформление документов при открытии вклада" по кнопке "Печать договора вклада" формируем и проверяем договор
    # :step: по кнопке "Печать приходного валютного ордера" формируем и проверяем ордер
    # :step: Заполняем чекбокс "Документы оформлены"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На фороме "Завершение оформления вклада" заполняем чекбокс "Приходный ордер проверен"
    # :step: Заполняем чекбокс "Документы переданы клиенту"
    # :step: Нажимаем кнопку "Завершить оформление"
    # :assert: Заявка завершается исполнением, статус "Окончена обработка".
    # :assert: В БИС Forpost произошло открытие договора вклада, договор в состоянии «WAIT», сумма взноса отражена в «BOOK остатке», приходная кассовая операция не акцептована. Договор вклада в валюте выбранного ранее в заявке вклада. Договор оформлен на третье лицо.
    # :step: Для проверки дальнейшего открытия на стороне Forpost акцептуем кассовую операцию. На договоре выполняем акцию CHECK (Контроль ожидания поступления средств на счет контракта) или сервис ручной активации контракта.
    # :assert: Договор вклада в состоянии «EXECUTE», пристуствуют транзакция (со счета Кассы на основной счет контракта) и акция «PRINCIPAL_IN» на сумму взноса. График акций расчитан до конца срока.
    # :assert: Доп. условия на договоре добавлены в соответствии с вариантом вклада (Forpost). В доп. условиях договора присутствует APPL_ID (Номер заявки СКЗ). Значения доп. условий соответствуют выбранным Клиентом настройкам вклада в заявке СКЗ. По текущим проверкам тест-кейса присутствуют следующие доп. условия: AMOUNT_SOURCE (Способ внесения средств) = "CASH", AMOUNT_SOURCE_TXT = "Вносим сразу через кассу", PAYER_DOC (Требование предъявлено?) = "NO", PAYER_DOC_TXT = "Требование НЕ предъявлено"
    # :step: На договоре вклада в БИС Forpost выполняем сервис "Доверенные лица контракта"
    # :assert: В списке доверенностей на управлени присутствует оформитель вклада (ФИО) с типом документа «Оформитель вклада на третье лицо» и датами начала/окончания, которые соответствуют сроку действия вклада
    # :step: В БИС Forpost переходим на форму (107) клиента оформителя вклада
    # :assert: Среди документов клиента оформителя присутствует документ "ОФОРМИТЕЛЬ_ВКЛАДА" со сроком равным сроку действия договора контракта

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_56006_8(app, credo_db):
    """
    {#
        :id:                56006_8
        :priority:          Средний
        :module:            ЕФР
        :description:       (56006)Проверка блока "Подключение к ДБО" на форме "Реквизиты клиента" для нового клиента (отсутствует в ЕРК). (57345)Проверка наличия в запросе ITW/EditClientSOU параметров ExternalUser(ФИО сотрудника-инициатора заявки) и ExternalUserDepartment(точка продаж сотрудника-инициатора заявки). (58838) СМС при создании логина в ДБО не отправляется - создан и не заполнен параметр textSMS_create_login на варианте (58559) Проверка сохранения данных sdboData на параметрах клиента
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      У пользователя СКЗ параметр useNewCabinet "Использование нового интерфейса" = "да"
        :precondition:      Тестовый клиент отсутствует в ЕРК
        :precondition:      на варианте параметр checkSoatoFields = да
        :precondition:      На варианте параметр mandatory_login_dbo "Обязательность создания учётной записи в ДБО" = "Да"
        :precondition:      Пользователь = "Сычевская Анна Степановна"
        :precondition:      Точка продаж = "Отдел розничных операций / г.Минск ул.Притыцкого 60/2" (параметр пользователя location_sales)
        :precondition:      Параметр textSMS_create_login создан и не заполнен на варианте
        :source_point:      56006, 57345, 58559, 58838
        :comment:           Выполнение, содержание тестируемых запросов проверяем в ibank.log, request.log
        :comment:           Тестовый клиент 7322169A892PB5
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 111 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 109 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 109 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'

    VARIANT = 'CustomerFind'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '7322169A892PB5'
    # :step: Нажимаем кнопку "Искать"
    # :step: Заполнить поле "Фамилия"
    value = 'АМИРХАНОВА'
    # :step: Заполнить поле "Имя"
    value = 'БЕТКА'
    # :step: Заполнить поле "Мобильный телефон" уникальным значением
    value = '375338477838'
    # :step: Нажимаем кнопку "Создать клиента"

    # :newpage: #######################################################################################################

    # :step: В Профиле клиента в блоке данных клиента нажимаем кнопку "Актуализировать данные клиента"

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента" отображается блок "Подключение к ДБО"
    # :assert: В блоке "Подключение к ДБО" отображается поле "Логин в ДБО*" и текст "Отсутствует" справа от него в той же строке, а также отображается кнопка "Создать"
    # :step: указываем Пол
    value = 'Женский'
    # :step: указываем Отчество (при наличии)
    value = 'ИВОНША'
    # :step: указываем Имя латинскими буквами
    value = 'Betka'
    # :step: указываем Фамилия латинскими буквами
    value = 'Amirkhanova'
    # :step: указываем Гражданство
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: указываем Дата рождения
    value = '20.08.1990'
    # :step: Выбираем Тип документа
    value = 'Паспорт'
    # :step: указываем Серия и номер документа
    value = 'DX2723887'
    # :step: указываем Кем выдан документ
    value = 'УВД'
    # :step: указываем Дата выдачи
    value = '10.03.2020'
    # :step: указываем Срок действия документа
    value = '09.03.2030'
    # :step: указываем Страна рождения(Блок Место рождения)
    value = 'BLR РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: указываем Тип населенного пункта(Блок Место рождения)
    value = 'Город'
    # :step: указываем Населенный пункт(Блок Место рождения)
    value = 'БРЕСТ'
    # :step: указываем Страна(Блок Место регистрации)
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: указываем Город или населенный пункт(Блок Место регистрации)
    value = 'МИНСК Г'
    # :step: указываем Улица(Блок Место регистрации)
    value = 'ЛЕНИНА ул'
    # :step: указываем Дом(Блок Место регистрации)
    value = '10'
    # :step: указываем Квартира(Блок Место регистрации)
    value = '19'
    # :step: Удаляем значение в поле «Мобильный телефон"
    # :step: Заполняем "Согласие на осуществление рекламных рассылок " в блоке "Согласия"
    value = 'Отказ от согласия'
    # :step: Нажимаем кнопку "Создать" в блоке "Подключение к ДБО"
    # :step: Нажимаем кнопку "Да" в модальном окне подтверждения
    # :assert: Справа от поля "Логин в ДБО*" отображается сообщение "Не заполнено поле «Мобильный телефон». Для продолжения необходимо заполнить данное поле."
    # :assert: Кнопка "Создать" доступна для повторного нажатия
    # :step: Заполняем поле "Мобильный телефон"
    value = '+375338477838'
    # :step: Нажимаем кнопку "Создать"
    # :assert: В запросе "ITW/GenerateLogin" передается мобильный телефон, фамилия, имя, фамилия латиницей, имя латиницей (при наличии) - см. ibank.log
    # :assert: В теге ExistingLogin ответа на запрос "ITW/GenerateLogin" содержится значение равное значению поля "Мобильный телефон" с текущей формы реквизитов клиента
    # :assert: В поле "Логин в ДБО" отображается значение «Сгенерированный логин» из тега ExistingLogin ответа СОУ на запрос "ITW/GenerateLogin"
    # :assert: Кнопка "Создать" скрывается с формы
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Заявление на изменение персональных данных клиента" нажимаем кнопку "Подтвердить выполнение указанных действий и закрыть"
    # :assert: В ЕРК передается блок SDBOData, который содержит всю информацию по Клиенту, входящую в этот блок

    # :newpage: #######################################################################################################

    # :assert: На параметрах заявки "Создание логина в ДБО" (create_login_dbo) = "Да"
    # :assert: Значение Логина СДБО, равное номеру мобильного телефона Клиента, сохраняется на параметре Клиента "Данные СДБО" (sdboData) - тег LoginSDBO
    # :assert: Запрос ITW/EditClientSOU отрабатывает с параметрами :<parameter name="ExternalUser" type="VARCHAR2">Сычевская Анна Степановна</parameter> <parameter name="Login" type="VARCHAR2">375333322440</parameter> <parameter name="loginDBOState" type="VARCHAR2">createLogin</parameter> <parameter name="ExternalUserDepartment" type="VARCHAR2">Отдел розничных операций / г.Минск ул.Притыцкого 60/2</parameter> <parameter name="ClientId" type="VARCHAR2">3340</parameter>- см. ibank.log
    # :assert: В запросе в СОУ (EditClient) передается блок BS_Request с параметром ExternalUser Department со значением из параметров ExternalUser, ExternalUserDepartment запроса на шлюз (ITW/EditClientSOU ) (<BS_Request>...<ExternalUser Department="Отдел розничных операций / г.Минск ул.Притыцкого 60/2">Сычевская Анна Степановна</ExternalUser> <EditClient><ClientId>3340</ClientId> <Login>375333322440</Login> </EditClient> </BS_Request>- см. ibank.log
    # :assert: На мобильный номер клиента не отправляется СМС

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_56006_9(app, credo_db):
    """
    {#
        :id:                56006_9
        :priority:          Средний
        :module:            ЕФР
        :description:       (56006)Проверка блока "Подключение к ДБО" на форме "Реквизиты клиента" для существующего клиента, но неподключенного к ДБО. Проверка задачи "Создание логина в ДБО". (57345)Проверка наличия в запросе ITW/EditClientSOU параметров ExternalUser(ФИО сотрудника-инициатора заявки) и ExternalUserDepartment(точка продаж сотрудника-инициатора заявки). (58838) Отправка СМС клиенту с текстом из параметра «textSMS_create_login» на продукте варианта (58559) Проверка сохранения данных sdboData на параметрах клиента
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      У пользователя СКЗ параметр useNewCabinet "Использование нового интерфейса" = "да"
        :precondition:      Тестовый клиент присуствует в ЕРК
        :precondition:      У тестового клиента в ЕРК отсутствуют данные в блоке SDBOData
        :precondition:      У тестового клиента в ЕРК отсутствует тег LoginSDBO (Логин СДБО)
        :precondition:      Параметр «textSMS_create_login» заполнен на продукте, на варианте не создан
        :source_point:      56006, 57345, 58559, 58838
        :comment:           Выполнение, содержание тестируемых запросов проверяем в ibank.log, request.log
        :comment:           Тестовый клиент 7322169A892PB5
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 111 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 109 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 109 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'

    VARIANT = 'CustomerFind'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '7322169A892PB5'
    # :step: Нажимаем кнопку "Искать"
    # :step: Нажимаем на краткую карточку клиента

    # :newpage: #######################################################################################################

    # :step: В Профиле клиента в блоке данных клиента нажимаем кнопку "Актуализировать данные клиента"

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента" отображается блок "Подключение к ДБО"
    # :assert: В блоке отображается поле "Логин в ДБО" и текст "Отсутствует" справа от него в той же строке, а также кнопка "Создать"
    # :step: Очищаем поле "Мобильный телефон"
    value = ''
    # :step: Нажимаем кнопку "Создать"
    # :step: Нажимаем кнопку "Да" в модальном окне (Вы уверены что хотите зарегистрировать клиента в ДБО?)
    # :assert: Справа от поля "Логин в ДБО" отображается сообщение "Не заполнено поле «Мобильный телефон». Для продолжения необходимо заполнить данное поле."
    # :assert: Кнопка "Создать" доступна для повторного нажатия
    # :step: Восстанавливаем значение в поле "Мобильный телефон"
    value = '375335338059'
    # :step: Нажимаем кнопку "Создать"
    # :step: Нажимаем кнопку "Да" в модальном окне
    # :assert: В запросе "ITW/GenerateLogin" передается мобильный телефон, фамилия, имя, фамилия латиницей, имя латиницей (при наличии) - см. ibank.log
    # :assert: В теге ExistingLogin ответа на запрос "ITW/GenerateLogin" содержится значение равное значению поля "Мобильный телефон" с текущей формы реквизитов клиента
    # :assert: В поле "Логин в ДБО" отображается значение «Сгенерированный логин» из тега ExistingLogin ответа СОУ на запрос "ITW/GenerateLogin"
    # :assert: Кнопка "Создать" скрывается с формы
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Заявление на изменение персональных данных клиента" нажимаем кнопку "Подтвердить выполнение указанных действий и закрыть"
    # :assert: В ЕРК передается блок SDBOData, который содержит всю информацию по Клиенту, входящую в этот блок

    # :newpage: #######################################################################################################

    # :assert: На параметрах заявки "Создание логина в ДБО" (create_login_dbo) = "Да"
    # :assert: На параметрах клиента в ЕРК и СКЗ сохранился параметр Данные СДБО (sdboData) = "<SDBOData> <LoginSDBO>375335338059</LoginSDBO> = номеру мобильного телефона клиента
    # :assert: После задачи "Обновление номера телефона в СОУ" отрабатывает запрос ITW/EditClientSOU - см. request.log
    # :assert: Запрос ITW/EditClientSOU -  Значение «кода СОУ» и «логина» берутся из параметра клиента "Данные СДБО" (sdboData) (параметры LoginSDBO и SDBONum) - см. request.log.
    # :assert: Запрос ITW/EditClientSOU -  передаются дополнительно ФИО и точка продаж сотрудника-инициатора заявки - см. request.log.
    # :assert: В запросе в СОУ (EditClient) передается блок BS_Request с параметром ExternalUser Department со значением из параметров ExternalUser, ExternalUserDepartment запроса на шлюз (ITW/EditClientSOU )- см. ibank.log
    # :assert: На мобильный номер клиента с <Priority> = 0 отправляется СМС с текстом из параметра «textSMS_create_login» на продукте

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_56006_10(app, credo_db):
    """
    {#
        :id:                56006_10
        :priority:          Средний
        :module:            ЕФР
        :description:       (56006)Проверка блока "Подключение к ДБО" на форме "Реквизиты клиента" для подключенного к ДБО клиента. (57345)Проверка наличия в запросах ITW/EditClientSOU, ITW/SetPWD параметров ExternalUser(ФИО сотрудника-инициатора заявки) и ExternalUserDepartment(точка продаж сотрудника-инициатора заявки) (58559) Проверка сохранения данных sdboData на параметрах клиента
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      У пользователя СКЗ параметр useNewCabinet "Использование нового интерфейса" = "да"
        :precondition:      Тестовый клиент существует в ЕРК
        :precondition:      У тестового клиента в ЕРК существует тег LoginSDBO (Логин СДБО) = "testsavchuk2"
        :precondition:      У тестового клиента в ЕРК существует тег SDBONum (СОУ id) = "216115"
        :precondition:      У тестового клиента в СКЗ существует параметр "Код СОУ" (sou_id) с пустым значением
        :precondition:      Пользователь = "Сычевская Анна Степановна"
        :precondition:      Точка продаж  = "Отдел розничных операций / г.Минск ул.Притыцкого 60/2"(параметр пользователя location_sales)
        :precondition:      У тестового клиента в ЕРК присутствуют данные в блоке SDBOData: LoginSDBO, SDBONum и Device (Priority, Num, Model, RegDate)
        :source_point:      56006, 57345, 58559
        :comment:           Выполнение, содержание тестируемых запросов проверяем в ibank.log,  request.log
        :comment:           Тестовый клиент 7322169A892PB5
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 111 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 109 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 109 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'

    VARIANT = 'CustomerFind'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '7322169A892PB5'
    # :step: Нажимаем кнопку "Искать"
    # :step: Нажимаем на краткую карточку клиента

    # :newpage: #######################################################################################################

    # :assert: На клиенте СКЗ сохраняется параметр SDBOData, содержащий всю информацию из этого блока в ЕРК в структуированном виде, в том числе теги LoginSDBO и SDBONum.
    # :step: В Профиле клиента в блоке данных клиента нажимаем кнопку "Изменить"

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента" отображается блок "Подключение к ДБО"
    # :assert: В блоке отображается поле "Логин в ДБО" и поле для ввода значения, в котором подставленно значение параметра клиента LoginSDBO (Логин СДБО). Поле доступно для редактирования
    # :step: Изменяем значение поля "Логин в ДБО"
    value = 'testsavchuk4'
    # :assert: В блоке отображается кнопка "Отправить пароль повторно"
    # :step: Нажимаем кнопку "Отправить пароль повторно"
    # :step: Нажимаем кнопку "Далее"
    # :assert: Блок SDBOData передаётся со всеми параметрами присутствующими на клиенте

    # :newpage: #######################################################################################################

    # :assert: На параметрах заявки "Создание логина в ДБО" (create_login_dbo) = "нет"
    # :assert: На параметрах заявки "Повторная отправка пароля" = "да"
    # :assert: На параметрах заявки "Изменение логина ДБО" (edit_login_dbo) = "да"
    # :assert: На клиенте параметр Данные СДБО (sdboData) = "<SDBOData> <LoginSDBO>testsavchuk4</LoginSDBO> <SDBONum>216115</SDBONum> <Device idRecord="4763586643"> <Priority>0</Priority> <Num>862cdc5fa620446bb9ee9ef978c2aa59</Num> <Model>iPhone 13 (862cdc5fa620446bb9ee9ef978c2aa59)</Model> <RegDate>2022-09-17</RegDate> </Device> </SDBOData>"
    # :assert: Клиенту генерируется новый пароль к СДБО - у клиента в БД СОУ поле password обновлено новым сгенерированным значением
    # :assert: После задачи "Обновление номера телефона в СОУ" отрабатывает запрос ITW/EditClientSOU - см. request.log
    # :assert: Запрос ITW/EditClientSOU отрабатывает с параметрами : <parameter name="ExternalUser" type="VARCHAR2">Сычевская Анна Степановна</parameter><parameter name="Login" type="VARCHAR2">testsavchuk4</parameter><parameter name="loginDBOState" type="VARCHAR2">changeLogin</parameter><parameter name="ExternalUserDepartment" type="VARCHAR2">Отдел розничных операций / г.Минск ул.Притыцкого 60/2</parameter><parameter name="ClientId" type="VARCHAR2">216115</parameter>- см. ibank.log
    # :assert: В запросе в СОУ (EditClient) передается блок BS_Request с параметром ExternalUser Department со значением из параметров ExternalUser, ExternalUserDepartment запроса на шлюз (ITW/EditClientSOU )  (<BS_Request>...<ExternalUser Department="Отдел розничных операций / г.Минск ул.Притыцкого 60/2">Сычевская Анна Степановна</ExternalUser><EditClient><ClientId>216115</ClientId><Login>testsavchuk4</Login></EditClient></BS_Request> - см. ibank.log
    # :assert: В запросе "ITW/SetPWD" передается "Код СОУ" (ClientId) с параметра клиента sou_id, "Генерация нового пароля" = "да" (NewPassword), ФИО (ExternalUser) и точка продаж (ExternalUserDepartment) сотрудника-инициатора заявки (<parameter name="ClientId" type="VARCHAR2">216115</parameter> <parameter name="NewPassword" type="VARCHAR2">Y</parameter> <parameter name="ExternalUser" type="VARCHAR2">Сычевская Анна Степановна</parameter> <parameter name="ExternalUserDepartment" type="VARCHAR2">Отдел розничных операций / г.Минск ул.Притыцкого 60/2</parameter>- ibank.log)
    # :assert: В запросе в СОУ (SetPWD) передается блок BS_Request с параметром ExternalUser Department со значением из параметров ExternalUser, ExternalUserDepartment запроса на шлюз (ITW/SetPWD) (<BS_Request>...<ExternalUser Department="Отдел розничных операций / г.Минск ул.Притыцкого 60/2">Сычевская Анна Степановна</ExternalUser><SetPWD><ClientId>216115</ClientId><DeliveryMethod>1</DeliveryMethod><NewPassword>Y</NewPassword></SetPWD></BS_Request> - ibank.log)

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_56006_15(app, credo_db):
    """
    {#
        :id:                56006_15
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка формата поля "Логин в ДБО": проверка длины (больше, меньше, равно) и символов в составе значения (пробелы в начале и в конце значения запрещены).
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      У пользователя СКЗ параметр useNewCabinet "Использование нового интерфейса" = "да"
        :precondition:      Тестовый клиент существует в ЕРК
        :precondition:      У тестового клиента в ЕРК существует тег LoginSDBO (Логин СДБО)
        :source_point:      56006, 57215, 58559
        :comment:           
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 10.04.2021
        :client_env:        Google Chrome 96 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 95 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 96 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'

    VARIANT = 'CustomerFind'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '4300473M063PB6'
    # :step: Нажимаем кнопку "Искать"
    # :step: Нажимаем на краткую карточку клиента

    # :newpage: #######################################################################################################

    # :step: В Профиле клиента в блоке данных клиента нажимаем кнопку "Изменить"

    # :newpage: #######################################################################################################

    # :step: Заполняем поле "Логин в ДБО" значением > 30 символов
    value = 'user000017733548971256415480354'
    # :step: Нажимаем кнопку "Далее"
    # :assert: Справа от поля "Логин в ДБО" выводится сообщение об ошибке ввода "Проверьте корректность введенных данных"
    # :step: Заполняем поле "Логин в ДБО" значением = 30 символов с кириллицей, латиницей в обоих регистрах и спецсимволами (включая "пробел" и "$")
    value = ' #a-z'+0&9!A_Z@а:я(А?Я^>~|.%$№'
    # :step: Нажимаем кнопку "Далее"
    # :assert: Справа от поля "Логин в ДБО" выводится сообщение об ошибке ввода "Проверьте корректность введенных данных"
    # :step: Заполняем поле "Логин в ДБО" значением = 30 символов с кириллицей, латиницей в обоих регистрах и спецсимволами (включая "пробел" и "$")
    value = '#a-z'+0&9!A_Z@а:я(А?Я^>~|.%$№ '
    # :step: Нажимаем кнопку "Далее"
    # :assert: Справа от поля "Логин в ДБО" выводится сообщение об ошибке ввода "Проверьте корректность введенных данных"
    # :step: Заполняем поле "Логин в ДБО" значением = 30 символов с кириллицей, латиницей в обоих регистрах и спецсимволами
    value = '#a-z'+0&9!A_Z@а:я(А?Я^>~|.%$№'
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Скачать"
    # :assert: В документе "ПЕРСОНАЛЬНЫЕ ДАННЫЕ ФИЗИЧЕСКОГО ЛИЦА" в поле "Логин:" значение " #a-z'+0&9!A_Z@а:я(А?Я^>~|.%$№", как введённое ранее на форме значение
    # :step: Нажимаем кнопку "Подтвердить выполнение указанных действий и закрыть"

    # :newpage: #######################################################################################################

    # :assert: Заявка завершается и переходит в конечный статус
    # :assert: Параметр клиента "Данные СДБО" (sdboData) - тег LoginSDBO заполнен полным введённым в заявке в поле "Логин в ДБО" значением = "#a-z'+0&9!A_Z@а:я(А?Я^>~|.%$№"
    # :assert: В данных клиента на форме Профиля клиента "Логин ДБО" = "#a-z'+0&9!A_Z@а:я(А?Я^>~|.%$№", с исходным при вводе значением (без экранирования символов одинарной кавычки ' и амперсанда &)
    # :assert: В ЕРК LoginSDBO = "#a-z&apos;+0&amp;9!A_Z@а:я(А?Я^&gt;~|.%$№", с тем же значением, что и при вводе на форме СКЗ, только с экранированными символами одинарной кавычки ' и амперсанда &
    # :step: В Профиле клиента в блоке данных клиента нажимаем кнопку "Изменить"

    # :newpage: #######################################################################################################

    # :step: Заполняем поле "Логин в ДБО" значением < 30 символов содержащим спецсимволы и очереди из пробелов
    value = '18   ,   яяWW/"\;[}='
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Скачать"
    # :assert: В документе "ПЕРСОНАЛЬНЫЕ ДАННЫЕ ФИЗИЧЕСКОГО ЛИЦА" в поле "Логин:" значение "18   ,   яяWW/"\;[}=", как введённое ранее на форме значение
    # :step: Нажимаем кнопку "Подтвердить выполнение указанных действий и закрыть"

    # :newpage: #######################################################################################################

    # :assert: Заявка завершается и переходит в конечный статус
    # :assert: Параметр клиента "Данные СДБО" (sdboData) - тег LoginSDBO заполнен полным введённым в заявке в поле "Логин в ДБО" значением = "18   ,   яяWW/"\;[}="
    # :assert: В данных клиента на форме Профиля клиента "Логин ДБО" = "18   ,   яяWW/"\;[}=", с исходным при вводе значением (без экранирования символов двойной кавычки ")
    # :assert: В ЕРК LoginSDBO = "18   ,   яяWW/&quot;\;[}=", с тем же значением, что и при вводе на форме СКЗ, только с экранированным символом двойной кавычки "

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_56006_17(app, credo_db):
    """
    {#
        :id:                56006_17
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка блока "Подключение к ДБО" в анкете "Персональные данные физического лица", если на заявке параметры «Создание логина ДБО» (create_login_dbo) = Да и «Изменение логина ДБО» (edit_login_dbo) отсутствует
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      У пользователя СКЗ параметр useNewCabinet "Использование нового интерфейса" = "да"
        :precondition:      Тестовый клиент отсутствует в ЕРК
        :precondition:      На варианте CustomerFind параметр checkSoatoFields = да
        :source_point:      56006, 58559
        :comment:           
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.04.2021
        :client_env:        Google Chrome 93 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 92 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 93 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'

    VARIANT = 'CustomerFind'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '7037309A278PB3'
    # :step: Нажимаем кнопку "Искать"
    # :step: Заполнить поле "Фамилия"
    value = 'СІУП ЕРУ-МЕН'
    # :step: Заполнить поле "Имя"
    value = 'В У-МЎІЕН'
    # :step: Заполнить поле "Мобильный телефон"
    value = '+375251231234'
    # :step: Нажимаем кнопку "Создать клиента"

    # :newpage: #######################################################################################################

    # :step: В Профиле клиента в блоке данных клиента нажимаем кнопку "Изменить"

    # :newpage: #######################################################################################################

    # :step: указываем Пол
    value = 'Мужской'
    # :step: указываем Гражданство
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: указываем Дата рождения
    value = '20.04.1987'
    # :step: Выбираем Тип документа
    value = 'Паспорт'
    # :step: указываем Серия и номер документа
    value = 'AB1233677'
    # :step: указываем Кем выдан документ
    value = 'СЫН МАМИНОЙ ПОДРУГИ'
    # :step: указываем Дата выдачи
    value = '20.01.2000'
    # :step: указываем Срок действия документа
    value = '20.10.2029'
    # :step: указываем Страна рождения(Блок Место рождения)
    value = 'BLR БЕЛАРУСЬ'
    # :step: указываем Тип населенного пункта(Блок Место рождения)
    value = 'Город'
    # :step: указываем Населенный пункт(Блок Место рождения)
    value = 'БРЕСТ'
    # :step: указываем Страна(Блок Место регистрации)
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: указываем Город или населенный пункт(Блок Место регистрации)
    value = 'МИНСК Г'
    # :step: указываем Улица(Блок Место регистрации)
    value = 'ЛЕНИНА ул'
    # :step: указываем Дом(Блок Место регистрации)
    value = '10'
    # :step: указываем Квартира(Блок Место регистрации)
    value = '18'
    # :step: устанавливаем отметку на чекбокс "Аналогично месту регистрации"
    # :step: На форме "Реквизиты клиента" в блоке "Подключение к ДБО" нажимаем кнопку "Создать"
    # :step: Нажимаем "Далее"

    # :newpage: #######################################################################################################

    # :assert: На заявке сохраняется параметр "Создание логина ДБО" (create_login_dbo) = да
    # :assert: На параметрах клиента в ЕРК и СКЗ значение Логина СДБО, равное номеру мобильного телефона Клиента, сохраняется на параметре Клиента "Данные СДБО" (sdboData) - тег LoginSDBO
    # :step: На форме "Заявление на изменение персональных данных клиента" нажимаем кнопку "Скачать"

    # :newpage: #######################################################################################################

    # :assert: В анкете "Персональные данные физического лица" перед текстом «Достоверность …»  отображается блок "Подключение к ДБО" с полями "Подключение: требуется", "Логин: 375251231234" (<значение поля "Логин в ДБО"> с параметра клиента "Данные СДБО" (sdboData) - тег LoginSDBO), "Способ доставки сеансового пароля: мобильный телефон"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_56006_18(app, credo_db):
    """
    {#
        :id:                56006_18
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка блока "Подключение к ДБО" в анкете "Персональные данные физического лица", если на заявке параметры «Создание логина ДБО» (create_login_dbo) = Нет и «Изменение логина ДБО» (edit_login_dbo) = Да (58559) Проверка сохранения данных sdboData на параметрах клиента
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      У пользователя СКЗ параметр useNewCabinet "Использование нового интерфейса" = "да"
        :precondition:      Тестовый клиент присуствует в ЕРК
        :precondition:      У тестового клиента в ЕРК присутствуют данные в блоке SDBOData: LoginSDBO, SDBONum и Device (Priority, Num, Model, RegDate)
        :precondition:      У тестового клиента в ЕРК существует тег LoginSDBO (Логин СДБО) = testsavchuk
        :precondition:      На варианте CustomerFind параметр checkSoatoFields = да
        :source_point:      56006, 58559
        :comment:           Тестовый клиент 7322169A892PB5
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.04.2021
        :client_env:        Google Chrome 111 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 109 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 109 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'

    VARIANT = 'CustomerFind'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '7322169A892PB5'
    # :step: Нажимаем кнопку "Искать"
    # :step: Нажимаем на краткую карточку клиента

    # :newpage: #######################################################################################################

    # :step: В Профиле клиента в блоке данных клиента нажимаем кнопку "Изменить"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента" в блоке "Подключение к ДБО" редактируем поле "Логин в ДБО"
    value = 'testsavchuk2'
    # :step: Нажимаем кнопку "Далее"
    # :assert: В ЕРК передается блок SDBOData, который содержит всю информацию по Клиенту, входящую в этот блок

    # :newpage: #######################################################################################################

    # :assert: На заявке сохраняется параметр "Создание логина ДБО" (create_login_dbo) = нет
    # :assert: На заявке сохраняется параметр "Изменение логина ДБО" (edit_login_dbo) = да
    # :assert: На клиенте параметр Данные СДБО (sdboData) = "<SDBOData> <LoginSDBO>testsavchuk2</LoginSDBO> <SDBONum>216115</SDBONum> <Device idRecord="4763586643"> <Priority>0</Priority> <Num>862cdc5fa620446bb9ee9ef978c2aa59</Num> <Model>iPhone 13 (862cdc5fa620446bb9ee9ef978c2aa59)</Model> <RegDate>2022-09-17</RegDate> </Device> </SDBOData>"
    # :step: На форме "Заявление на изменение персональных данных клиента" нажимаем кнопку "Скачать"

    # :newpage: #######################################################################################################

    # :assert: В анкете "Персональные данные физического лица" отображается блок "Подключение к ДБО" с полем "Логин: testsavchuk2" (<значение поля «Данные СДБО»> с параметра клиента «sdboData»)

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_56006_21(app, credo_db):
    """
    {#
        :id:                56006_21
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка формирования отчета EFRActionDBO "Действия по ДБО".
        :precondition:      Пользователь administrator авторизирован в СКЗ
        :precondition:      У пользователя есть "Право доступа" = "Сохранение отчета EFRActionDBO"
        :precondition:      У пользователя есть "Право доступа" = "Запуск отчета EFRActionDBO"
        :precondition:      У пользователя СКЗ параметр useNewCabinet ("Использование нового интерфейса") = "нет"
        :precondition:      В базе за период с '01.08.2021' по '31.08.2021' присутствует 17000 заявок с параметрами "Создание логина ДБО" = "да", "Изменение логина ДБО" = "да", "Повторная отправка пароля" = "да". Клиенты по заявкам - резиденты и нерезиденты РБ.
        :source_point:      56006, 58559
        :comment:           
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.04.2021
        :client_env:        Google Chrome 93 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 92 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 93 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = ''

    VARIANT = ''


    # :newpage: #######################################################################################################

    # :step: В СКЗ открываем Меню
    # :step: Выбираем пункт меню "Список отчетов для исполнения"

    # :newpage: #######################################################################################################

    # :assert: В списке отчетов существует отчет "Отчет «Действия по ДБО»"
    # :step: Напротив отчета "Отчет «Действия по ДБО»" нажимаем "Выполнить отчет"

    # :newpage: #######################################################################################################

    # :step: На форме "Выполнить отчет EFRActionDBO" заполняем поле "Дата начала периода" выбором в календаре или ручным вводом датой начала отчетного периода
    value = '01.08.2021'
    # :step: Заполняем поле "Дата окончания периода" выбором в календаре или ручным вводом датой окончания отчетного периода
    value = '31.08.2021'
    # :assert: В списке выбора поля "Тип операции" присутствуют операции: "Первичная регистрация", "Изменение логина", "Повторная отправка пароля"
    # :assert: В списке выбора поля "Точка продаж инициатора заявки" присутствуют все точки продаж с положительным приоритетом. Сортировка списка: сначала точки банка, потом – остальные точки, все по возрастанию.
    # :step: Нажимаем кнопку "Выполнить отчет"
    # :assert: Отчёт по всем точкам за период, равный календарному месяцу, формируется не более 1 минуты
    # :assert: Отчет был сформирован, скачался файл в формате xlsx
    # :assert: В отчете отражены все заявки с параметрами "Первичная регистрация" = "Да", "Изменение логина" = "Да", "Повторная отправка пароля" = "Да" за отчетный период (17000 шт)
    # :assert: В столбце "Тип операции" значение "Первичное подключение" у заявок с параметром "Создание логина ДБО" = "Да", "Изменение логина" у заявок с параметром "Изменение логина ДБО" = "Да", "Повторная отправка пароля" у заявок с параметром "Повторная отправка пароля" = "Да"
    # :assert: Столбец «Дата» в формате «ДДММГГГГ»
    # :assert: Столбец "Время создания заявки" в формате "ЧЧ:ММ:CC"
    # :assert: В столбце "ФИО инициатора заявки" внесены ФИО пользователя, который создал\обновил параметр для столбца «Тип операции». В случае нескольких записей в истории изменения параметра вносится последняя запись об изменении
    # :assert: В столбце "Точка продаж инициатора заявки" значение параметра "Точка продаж" пользователя СКЗ
    # :assert: В столбце "ФИО клиента" ФИО клиента, привязанного к заявке
    # :assert: В столбце "Идентификационный (личный) номер клиента" значение параметра idn или fidn клиента в зависимости от резидентства.
    # :assert: В столбце "Учётный номер клиента в СОУ" значение параметра клиента "Данные СДБО" (sdboData) - тег SDBONum

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_56006_22(app, credo_db):
    """
    {#
        :id:                56006_22
        :priority:          Средний
        :module:            Ядро
        :description:       Проверка кнопки "Отправить пароль повторно" на форме "Профиль клиента".  (57345)Проверка наличия в запросе ITW/SetPWD параметров ExternalUser(ФИО сотрудника-инициатора заявки) и ExternalUserDepartment(точка продаж сотрудника-инициатора заявки). (57355) Проверка анализа возраста клиента в профиле Клиента, если возраст клиента < 18 лет, но Клиент уже подключен к ДБО
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      У пользователя СКЗ параметр useNewCabinet "Использование нового интерфейса" = "да", заполнен парамер location_sales
        :precondition:      Тестовый клиент существует в ЕРК, Клиенту < 18 лет
        :precondition:      У тестового клиента в ЕРК заполнен тег LoginSDBO
        :precondition:      У тестового клиента в ЕРК заполнен тег SDBONum
        :precondition:      На варианте CustomerFind "Регистрация/изменение данных физического лица" параметр prohibitRegClientUnderAge18_dbo ("Запретить регистрацию в ДБО клиента младше 18ти лет")=да.
        :source_point:      56006, 57345, 57355, 57478, 58559
        :comment:           Дата тестирования 09.08.2022
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 101 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 102 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = ''

    VARIANT = ''


    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '6250875E716PB5'
    # :step: Нажимаем кнопку "Искать"
    # :step: Нажимаем на краткую карточку клиента

    # :newpage: #######################################################################################################

    # :assert: У клиента СКЗ сохраняется на параметре Клиента "Данные СДБО" (sdboData) - тег SDBONum из ответа ЕРК
    # :assert: в профиле клиента  в разделе "ДАННЫЕ КЛИЕНТА" кнопка «Отправить пароль повторно» заблокирована
    # :step: В профиле клиента в разделе "ДАННЫЕ КЛИЕНТА" нажимаем кнопку "Актуализировать данные клиента"
    # :step: На форме "Реквизиты клиента" заполняем поле "Дата рождения" значением, что бы Клиенту было >18 лет
    value = '01.08.2004'
    # :step: Нажимаем кнопку "Далее"
    # :assert: в профиле клиента  в разделе "ДАННЫЕ КЛИЕНТА" кнопка «Отправить пароль повторно» разблокирована
    # :step: Нажимаем кнопку "Отправить пароль повторно"
    # :assert:  открывается модульное окно с текстом "Вы уверены что хотите изменить пароль клиента в ДБО?" с двумя кнопками Да/Нет
    # :step: нажимаем кнопку "Нет"
    # :assert: модульное окно закрывается
    # :step: Нажимаем кнопку "Отправить пароль повторно"
    # :step: в модальном окне нажимаем кнопку "Да"
    # :assert: В запросе "ITW/SetPWD" передается "Код СОУ" (ClientId) с параметра "Данные СДБО" (sdboData) - тег SDBONum, "Генерация нового пароля" = "да" (NewPassword), ФИО (ExternalUser) и точка продаж (ExternalUserDepartment) сотрудника-инициатора заявки (см. ibank.log)
    # :assert: В запросе в СОУ (SetPWD) передается блок BS_Request с параметром ExternalUser Department со значением из параметров ExternalUser, ExternalUserDepartment запроса на шлюз (ITW/SetPWD). (см. ibank.log)
    # :assert: Клиенту генерируется новый пароль к ДБО. Факт создания пароля логируется в profile.log

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_56006_24(app, credo_db):
    """
    {#
        :id:                56006_24
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка блока "Подключение к ДБО" в заявлении-анкете на оформление платежной карточки, если на заявке параметры «Создание логина ДБО» (create_login_dbo) = Да и «Изменение логина ДБО» (edit_login_dbo) отсутствует
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Тестовый клиент не существует в ЕРК
        :precondition:      На варианте P1_A1PaymentCard параметр mandatory_login_dbo ("Обязательность создания учётной записи в ДБО") = "нет"
        :precondition:      На варианте P1_A1PaymentCard параметр checkSoatoFields = да
        :source_point:      56006, 58559
        :comment:           
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.04.2021
        :client_env:        Google Chrome 93 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 92 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 93 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'EFR'

    VARIANT = 'P1_A1PaymentCard'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '7037309A278PB3'
    # :step: Нажимаем кнопку "Искать"
    # :step: Заполняем поле "Фамилия"
    value = 'СІУП ЕРУ-МЕН'
    # :step: Заполняем поле "Имя"
    value = 'В У-МЎІЕН'
    # :step: Заполняем поле "Мобильный телефон"
    value = '+375251231234'
    # :step: Нажимаем кнопку "Создать клиента"

    # :newpage: #######################################################################################################

    # :step: Выбрать продукт на форме "Профиль клиента"
    value = 'Платежные карточки'
    # :step: Выбрать вариант
    value = 'Оформление расчетной карточки'
    # :step: Нажать кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: указываем Отчество (при наличии) (валидные символы А-ЯЁІЎ-‘')
    value = 'ЛЕІЎТ-АЮЎ ЩИЙ'
    # :step: указываем Пол
    value = 'Мужской'
    # :step: указываем Гражданство
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: указываем Дата рождения
    value = '20.04.1987'
    # :step: Выбираем Тип документа
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: указываем Серия и номер документа
    value = 'AB1233677'
    # :step: указываем Кем выдан документ
    value = 'СЫН МАМИНОЙ ПОДРУГИ'
    # :step: указываем Дата выдачи
    value = '20.01.2000'
    # :step: указываем Срок действия документа
    value = '20.10.2029'
    # :step: указываем Страна рождения(Блок Место рождения)
    value = 'BLR БЕЛАРУСЬ'
    # :step: указываем Тип населенного пункта(Блок Место рождения)
    value = 'Город'
    # :step: указываем Населенный пункт(Блок Место рождения)
    value = 'БРЕСТ'
    # :step: указываем Страна(Блок Место регистрации)
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: указываем Город или населенный пункт(Блок Место регистрации)
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: указываем Улица(Блок Место регистрации)
    value = 'ЛЕНИНА ул'
    # :step: указываем Дом(Блок Место регистрации)
    value = '10'
    # :step: указываем Квартира(Блок Место регистрации)
    value = '18'
    # :step: устанавливаем отметку на чекбокс "Аналогично месту регистрации"
    # :step: На форме "Реквизиты клиенита" в блоке "Подключение к ДБО" нажимаем кнопку "Создать"
    # :step: Нажимаем "Далее"

    # :newpage: #######################################################################################################

    # :assert: На параметрах заявки "Создание логина ДБО" (create_login_dbo) = Да
    # :step: Заполняем поле "Вариант продукта"
    value = 'Расчетная карточка "Премиальная"'
    # :step: Заполняем поле "Тип карточки"
    value = 'Visa Gold PayWave'
    # :step: Заполняем поле "Валюта счета"
    value = 'Белорусский рубль'
    # :step: Заполняем поле "Срок действия"
    value = "5 лет"
    # :step: Заполняем поле "Регион выдачи"
    value = "Минск"
    # :step: Заполняем поле "Точка выдачи"
    value = "Отдел розничных операций / г.Минск ул.Притыцкого 60/2"
    # :step: Заполняем поле "Способ получения ПИН-кода"
    value = "ПИН-конверт"
    # :step: Нажимаем кнопку "Рассчитать стоимость оформления"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Заполняем поле "Кодовое слово клиента"
    value = "CODEWORD"
    # :step: Заполняем поле "Радиореклама"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "ОФОРМЛЕНИЕ ЗАЯВЛЕНИЯ-АНКЕТЫ" нажимаем "Печать Заявления-анкеты"
    # :step: Скачиватся "ЗАЯВЛЕНИЕ-АНКЕТА НА ОФОРМЛЕНИЕ ПЛАТЕЖНОЙ КАРТОЧКИ"
    # :assert: В отчете "ЗАЯВЛЕНИЕ-АНКЕТА НА ОФОРМЛЕНИЕ ПЛАТЕЖНОЙ КАРТОЧКИ" отображается блок "Подключение к ДБО" с полями "Подключение: требуется", "Подключение к ДБО" с полем "Логин: user00011774" (<значение поля «Логин в ДБО»> с параметра клиента "Данные СДБО" (sdboData) - тег LoginSDBO), "Способ доставки сеансового пароля: мобильный телефон"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_56006_25(app, credo_db):
    """
    {#
        :id:                56006_25
        :priority:          Средний
        :module:            ЕФР
        :description:       (56006) Проверка блока "Подключение к ДБО" в заявлении-анкете на оформление платежной карточки, если на заявке параметры «Создание логина ДБО» (create_login_dbo) = "нет" и «Изменение логина ДБО» (edit_login_dbo) = "да". (57215) Проверка символов в составе значения поля "Логин в ДБО" в документе заявления-анкеты на оформление карточки
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Тестовый клиент существует в ЕРК
        :precondition:      У тестового клиента в ЕРК существует тег LoginSDBO (Логин СДБО) = "user00011774"
        :source_point:      56006, 57215, 58559
        :comment:           
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 10.04.2021
        :client_env:        Google Chrome 96 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 95 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 96 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'EFR'

    VARIANT = 'P1_A1PaymentCard'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '7037308A278PB3'
    # :step: Нажимаем кнопку "Искать"
    # :step: Нажимаем на краткую карточку клиента

    # :newpage: #######################################################################################################

    # :step: Выбрать продукт на форме "Профиль клиента"
    value = 'Платежные карточки'
    # :step: Выбрать вариант
    value = 'Оформление расчетной карточки'
    # :step: Нажать кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиенита" в блоке "Подключение к ДБО" редактируем поле "Логин в ДБО" значением содержащим кириллицу, латинницу в обоих регистрах, и спецсимволы, очередь из пробелов
    value = '09   ;   aZЙя'"\[@=+&$№'
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На параметрах заявки "Создание логина ДБО" (create_login_dbo) = Нет
    # :assert: На параметрах заявки "Изменение логина ДБО" (edit_login_dbo) = Да
    # :step: Заполняем поле "Вариант продукта"
    value = 'Расчетная карточка "Премиальная"'
    # :step: Заполняем поле "Тип карточки"
    value = 'Visa Gold PayWave'
    # :step: Заполняем поле "Валюта счета"
    value = 'Белорусский рубль'
    # :step: Заполняем поле "Срок действия"
    value = "5 лет"
    # :step: Заполняем поле "Регион выдачи"
    value = "Минск"
    # :step: Заполняем поле "Точка выдачи"
    value = "Отдел розничных операций / г.Минск ул.Притыцкого 60/2"
    # :step: Заполняем поле "Способ получения ПИН-кода"
    value = "ПИН-конверт"
    # :step: Нажимаем кнопку "Рассчитать стоимость оформления"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Заполняем поле "Кодовое слово клиента"
    value = "CODEWORD"
    # :step: Заполняем поле "Радиореклама"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "ОФОРМЛЕНИЕ ЗАЯВЛЕНИЯ-АНКЕТЫ" нажимаем "Печать Заявления-анкеты"
    # :step: Скачиватся "ЗАЯВЛЕНИЕ-АНКЕТА НА ОФОРМЛЕНИЕ ПЛАТЕЖНОЙ КАРТОЧКИ"
    # :assert: Параметр клиента "Данные СДБО" (sdboData) - тег LoginSDBO заполнен полным введённым в заявке в поле "Логин в ДБО" значением = "09   ;   aZЙя'"\[@=+&$№   "
    # :assert: В отчете "ЗАЯВЛЕНИЕ-АНКЕТА НА ОФОРМЛЕНИЕ ПЛАТЕЖНОЙ КАРТОЧКИ" отображается блок "Подключение к ДБО" с полем Логин = "09   ;   aZЙя'"\[@=+&$№" (<значение поля «Логин в ДБО»> с параметра клиента "Данные СДБО" (sdboData) - тег LoginSDBO), со значением равным введённому ранее на форме

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_56006_26(app, credo_db):
    """
    {#
        :id:                56006_26
        :priority:          Средний
        :module:            ЕФР/фронт
        :description:       Проверка блока "Подключение к ДБО" для варианта Карта покупок из ИБ
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Клиент авторизирован в СДБО
        :precondition:      Клиенту доступно оформление Карты покупок
        :precondition:      Клиент подключен к СДБО (у клиента в ЕРК присутствует тег LoginSDBO)
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса" = да
        :source_point:      56006, 58559
        :comment:           
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.04.2021
        :client_env:        Google Chrome 93 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 92 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 93 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSales'

    VARIANT = 'cart_pokup_ib'


    # :newpage: #######################################################################################################

    # :step: Создаём заявку "Оформление Карты Покупок"

    # :newpage: #######################################################################################################

    # :step: Вводим поле "Запрашиваемая сумма кредита"
    value = '200'
    # :step: Заполняем поле "Сумма Вашего среднемесячного дохода"
    value = '1000'
    # :step: Заполняем поле "Запрашиваемая сумма кредита"
    value = '500'
    # :step: Заполняем поле "Дополнительный телефон, по которому с Вами можно связаться"
    value = '+375336663345'
    # :step: Заполняем поле "Вид занятости"
    value = 'По найму'
    # :step: Заполняем поле "Наименование предприятия"
    value = 'ООО ААА'
    # :step: Заполняем поле "Должность"
    value = 'IT-СПЕЦИАЛИСТ'
    # :step: Заполняем поле "полных лет"
    value = '7'
    # :step: Заполняем поле "+ месяцев"
    value = '3'
    # :step: Заполняем поле "Образование" выбором значения из выпадающего списка
    value = 'Высшее'
    # :step: Нажимаем на ссылку "Ознакомиться с предоставляемыми согласиями"
    # :step: Заполняем поле "Сеансовый пароль" полученным при авторизации значением
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Отмечаем чек-бокс "Настоящим подтверждаю, что 30.09.2020 ознакомлен и согласен..."
    # :step: Отмечаем чек-бокс "Договор об использовании карточки с предоставлением..."
    # :step: Отмечаем чек-бокс "Уведомлен, что сведения о заключенном Договоре об использовании карточки..."
    # :step: Выбираем способ получения карточки
    value = 'В Банке'
    # :step: Выбираем "Местонахождение офиса банка"
    value = 'Минск'
    # :step: Выбираем "Местонахождение офиса банка"
    value = 'Отдел розничных операций/г.Минск ул.Притыцкого 60/2'
    # :step: Выбираем радиобаттон "Сервис «SMS-информирование»"
    value = 'Отказаться от информирования'
    # :step: Вводим "Пароль (например, девичья фамилия матери)"
    value = 'CODEWORD'
    # :step: Вводим сеансовый пароль
    # :step: Нажимаем кнопку "Отправить оферту банку"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: В Профиле клиента по заявке нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: На форме "Выдача платежной карточки" переходим по ссылке
    # :step: В созданной заявке "Регистрация/изменение данных физического лица" переходим на задачу "Реквизиты клиента"

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиенита" отображается блок "Подключение к ДБО"
    # :assert: В блоке "Подключение к ДБО" отображается поле "Логин в ДБО" со строкой для ввода значения, в которою подставленно значение параметра клиента "Логин СДБО" (loginSDBO). Поле доступно для редактирования
    # :step: Редактируем значение поля "Логин в ДБО"
    value = '3333333333333'
    # :assert: В блоке отображается кнопка "Отправить пароль повторно"
    # :step: Нажимаем кнопку "Отправить пароль повторно"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Заявление на изменение персональных данных клиента" нажимаем кнопку "Подтвердить выполнение указанных действий и закрыть"

    # :newpage: #######################################################################################################

    # :assert: На параметрах заявки "Регистрация/изменение данных физического лица" параметр "Создание логина в ДБО" = "Нет"
    # :assert: На параметрах заявки "Регистрация/изменение данных физического лица" параметр "Повторная отправка пароля" = "Да"
    # :assert: На параметрах заявки "Регистрация/изменение данных физического лица" параметр "Изменение логина ДБО" = "Да"
    # :assert: На параметрах клиента в ЕРК и СКЗ сохранился "Данные СДБО" (sdboData) - тег LoginSDBO = "3333333333333"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_56006_27(app, credo_db):
    """
    {#
        :id:                56006_27
        :priority:          Средний
        :module:            Ядро
        :description:       Проверка получения вызванной на стороне СОУ ошибки по "Отправить пароль повторно" в Профиле клиента(запрос ITW/SetPWD) для существующего подключенного к ДБО клиента. Проверка отправки E-mail в случае ошибки.
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      У пользователя параметр "Использование нового интерфейса" = "да"
        :precondition:      Тестовый клиент существует в ЕРК
        :precondition:      У тестового клиента в ЕРК существует тег LoginSDBO (Логин СДБО)
        :precondition:      Смоделируем ошибку СОУ: в эмуляторе SOU в файле ClientSouRequestService.groovy в функции "def setPWD" устанавливаем переменную "errCount" = 1
        :source_point:      56006, 57478, 58559
        :comment:           Файл ClientSouRequestService.groovy находится в /opt/tools/grails_sou_d3/grails-app/services/sou/ClientSouRequestService.groovy
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = ''

    VARIANT = ''


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '4300473M063PB6'
    # :step: Нажимаем кнопку "Искать"
    # :step: Нажимаем на краткую карточку клиента

    # :newpage: #######################################################################################################

    # :assert: У клиента СКЗ сохраняется на параметре Клиента "Данные СДБО" (sdboData) - тег SDBONum из ответа ЕРК
    # :step: В Профиле клиента в блоке данных клиента нажимаем "Отправить пароль повторно"
    # :assert: В колонке значения строки поля «Логин в ДБО» отображается сообщение: «При отправке пароля произошла ошибка. Повторите действие через 1 минуту, или ожидайте сообщение от Службы техподдержки.»
    # :assert: В ответе на запрос ITW/SetPWD (см. ibank.log) к СОУ содержится «Текст ошибки» (= значению параметра ErrorLine): "setPWD error"
    # :assert: Всем пользователям с ролью admins отправляется email письмо с темой "Ошибка запроса ITW/SetPWD" и текстом формата "Профиль клиента. Произошла ошибка повторной отправки пароля: + <Текст ошибки>", где <Текст ошибки> - текст ошибки из выходного параметра ErrorLine запроса шлюза ITW/SetPWD на обновление пароля. В данном письме <Текст ошибки> = "setPWD error".

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_56006_28(app, credo_db):
    """
    {#
        :id:                56006_28
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка события «Пропуск создания логина ДБО» для задачи «Создание логина ДБО»
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      У пользователя есть право на событие "Пропуск создания логина ДБО"
        :precondition:      У пользователя СКЗ параметр useNewCabinet "Использование нового интерфейса" = "да"
        :precondition:      Тестовый клиент отсутствует в ЕРК
        :precondition:      На варианте параметр checkSoatoFields = да
        :source_point:      56006, 58559
        :comment:           Файл EditClientService.groovy находится в /opt/tools/grails_sou_d3/grails-app/services/sou/EditClientService.groovy
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.04.2021
        :client_env:        Google Chrome 93 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 92 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 93 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'

    VARIANT = 'CustomerFind'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '7037309A278PB3'
    # :step: Нажимаем кнопку "Искать"
    # :step: Заполнить поле "Фамилия"
    value = 'СІУП ЕРУ-МЕН'
    # :step: Заполнить поле "Имя"
    value = 'В У-МЎІЕН'
    # :step: Заполнить поле "Мобильный телефон"
    value = '+375251231234'
    # :step: Нажимаем кнопку "Создать клиента"

    # :newpage: #######################################################################################################

    # :step: В Профиле клиента в блоке данных клиента нажимаем кнопку "Изменить"

    # :newpage: #######################################################################################################

    # :step: указываем Пол
    value = 'Мужской'
    # :step: указываем Гражданство
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: указываем Дата рождения
    value = '20.04.1987'
    # :step: Выбираем Тип документа
    value = 'Паспорт'
    # :step: указываем Личный номер
    value = '4240267E020PB7'
    # :step: указываем Серия и номер документа
    value = 'AB1233677'
    # :step: указываем Кем выдан документ
    value = 'СЫН МАМИНОЙ ПОДРУГИ'
    # :step: указываем Дата выдачи
    value = '20.01.2000'
    # :step: указываем Срок действия документа
    value = '20.10.2029'
    # :step: указываем Страна рождения(Блок Место рождения)
    value = 'BLR БЕЛАРУСЬ'
    # :step: указываем Тип населенного пункта(Блок Место рождения)
    value = 'Город'
    # :step: указываем Населенный пункт(Блок Место рождения)
    value = 'БРЕСТ'
    # :step: указываем Страна(Блок Место регистрации)
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: указываем Город или населенный пункт(Блок Место регистрации)
    value = 'МИНСК Г'
    # :step: указываем Улица(Блок Место регистрации)
    value = 'ЛЕНИНА ул'
    # :step: указываем Дом(Блок Место регистрации)
    value = '10'
    # :step: указываем Квартира(Блок Место регистрации)
    value = '18'
    # :step: Устанавливаем отметку на чекбокс "Аналогично месту регистрации"
    # :step: На форме "Реквизиты клиента" в блоке "Подключение к ДБО" нажимаем кнопку "Создать"
    # :step: В эмуляторе SOU в файле EditClientService.groovy устанавливаем переменную "errCount" = 1
    # :step: Нажимаем "Далее"

    # :newpage: #######################################################################################################

    # :assert: На клиенте СКЗ создан параметр "Данные СДБО" (sdboData) - тег LoginSDBO
    # :step: На форме "Заявление на изменение персональных данных клиента" нажимаем кнопку "Подтвердить выполнение указанных действий и закрыть"

    # :newpage: #######################################################################################################

    # :assert: В параметрах заявки СКЗ параметр "Создание логина ДБО" (create_login_dbo) = Да
    # :assert: Осуществляется переход на форму "Ошибка при подключении к ДБО"

    # :newpage: #######################################################################################################

    # :step: Создаём событие "Пропуск создания логина ДБО" по текущей задаче
    # :assert: В параметрах заявки СКЗ параметр "Создание логина ДБО" (create_login_dbo) = Нет
    # :assert: В параметрах нового клиента в СКЗ параметр "Данные СДБО" (sdboData) - тег LoginSDBO удалён
    # :assert: Заявка переходит в статус "Окончена обработка"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


