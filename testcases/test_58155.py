# :suit_description: #58155
# :revision_date: 14.10.2022

@pytest.mark.skip(reason="Template")
def test_57563_1(app, credo_db):
    """
    {#
        :id:                57563_1
        :priority:          Средний
        :module:            Ядро
        :description:       Проверка создания нового продукта/варианта "Базовые счета/Операции с базовым счетом".
        :precondition:      Пользователь авторизирован в СКЗ со всеми правами
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса" = "нет"
        :source_point:      57563, 58155
        :comment:
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 101 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 100 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 100 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = ''

    VARIANT = ''


    # :newpage: #######################################################################################################

    # :step: Переходим в меню СКЗ
    # :step: Переходим в список продуктов
    # :assert: В списке вариантов по продукту BasicAccounts ("Базовые счета") присутствует вариант OperationsBasicAccount (Операции с базовым счетом)
    # :assert: Для варианта "Операции с базовым счетом" создан новый процесс "Операции с базовым счетом v1" (by.itworks.credo.OperationsBasicAccount_v1)
    # :step: Переходим в список параметров продукта "Базовые счета"
    # :assert: В списке параметров присутствуют новые параметры: type_transfer_remainder (Вид выплаты остатка), bank_code_for_transfer_remainder (Код банка для перечисления остатка), account_for_transfer_remainder (Номер счета для перечисления остатка), bank_name_for_transfer_remainder (Наименование банка для перечисления остатка)

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_57563_14(app, credo_db):
    """
    {#
        :id:                57563_14
        :priority:          Средний
        :module:            Базовый счет
        :description:       Проверка прохождения заявки при выборе операции  с БС (Переоформление текущего счёта в базовый). Запрос ITW/GetAnswerForBA вернул err_code = 0 и ErrorText пусто. Переоформляется на неперсонифицированную карточку. Проверка клиента в KYC(Siron), если check_status = check, check_status = pending, check_status = release. Проверка доступа к задаче «Проверка клиента в KYC(Siron)». Проверка кнопки "Обновить" на форме «Проверка клиента в KYC(Siron)», если check_status = check. Проверка автоматического обновления результата на форме задачи «Проверка клиента в KYC(Siron)», если check_status = pending. Проверка автоматического обновления результата в нерабочее время на форме задачи «Проверка клиента в KYC(Siron)», если check_status = pending. (58155) Проверка добавления новых параметров "Вид выплаты остатка", "Код банка для перечисления остатка", "Номер счета для перечисления остатка" сохранения их на заявке и отображения новых полей
        :precondition:      Пользователь авторизирован со всеми правами
        :precondition:      У пользователя параметр "Использование нового интерфейса" = "да"
        :precondition:      На пользователе параметр location_sales = Отдел розничных операций / г.Минск ул.Притыцкого 60/2
        :precondition:      В справочнике Варианты продукта (card_variant) для "БЕЛКАРТ-ПРЕМИУМ" поле "Продукты для карт"= "Базовый счет"
        :precondition:      В справочнике Типы карт для вариантов (card_for_variant) с вариантом продукта "БЕЛКАРТ-ПРЕМИУМ" только типы платежных карт"БЕЛКАРТ-ПРЕМИУМ Базовая" и "БЕЛКАРТ-ПРЕМИУМ Instant Issue Базовая"
        :precondition:      В справочнике Типы карт для вариантов (card_for_variant) для типа платежных карт "БЕЛКАРТ-ПРЕМИУМ Базовая": "Варианты продукта"= "БЕЛКАРТ-ПРЕМИУМ", "Продукт в Forpost"="BASE_ACCNT_CARD", "Вариант в Forpost"="RS_VIP_BELCART_PREMIUM", в "Отображение карточки в процессах" есть "Возможность открытия базового счёта", "Валюта счет"="Белорусский рубль", "Срок действия"="5 лет"
        :precondition:      В справочнике Типы карт для вариантов (card_for_variant) для типа платежных карт "БЕЛКАРТ-ПРЕМИУМ Instant Issue Базовая": "Варианты продукта"= "БЕЛКАРТ-ПРЕМИУМ", "Продукт в Forpost"="BASE_ACCNT_CARD_INSTANT", "Вариант в Forpost"="RS_VIP_BELCART_PREMIUM", в "Отображение карточки в процессах" есть "Возможность открытия базового счёта", "Валюта счет"="Белорусский рубль" "Срок действия"="до 5 лет"
        :precondition:      В справочнике Типы платежных карт (type_card) для  типа платежных карт "БЕЛКАРТ-ПРЕМИУМ Instant Issue": "Персонифицированная" = "Нет", "Продукт для PriorityPass в Forpost" и "Вариант для PriorityPass в Forpost" пустые.
        :precondition:      В справочнике Типы платежных карт (type_card) для  типа платежных карт "БЕЛКАРТ-ПРЕМИУМ": "Персонифицированная" = "Да", "Продукт для PriorityPass в Forpost" и "Вариант для PriorityPass в Forpost" пустые.
        :precondition:      На продукте\варианте параметр working_time_calendar_role = middle_office
        :precondition:      На варианте параметр pinCodeMethodsPersCard = ПИН-конверт SMS-сообщение
        :precondition:      Для роли middle_office (Мидл-офис) устанавливаем на системную дату рабочее время 00:00 - 00:01
        :precondition:      Статус клиента в Siron KYC равен check
        :precondition:      В списке параметров продукта "BasicAccounts" присутствует параметр needPreActualization ("Необходима предварительная актуализация клиента") со значением "нет"
        :precondition:      На варианте параметр doKyc = Да
        :precondition:      Пользователь maslova только с ролью front-office
        :precondition:      Пользователь maslov только с ролью admins
        :precondition:      У пользователя hominskaya отсутствует роль admins
        :precondition:      В файле itwcredo-kyc.properties параметр workingTimeRole=front_office
        :precondition:      Для роли front_office установлено начало рабочего времени = 13:00
        :precondition:      Системное время = 12:30
        :precondition:      На варианте параметр needPreActualization = нет
        :precondition:      На варианте "Операции с базовыми счетами" значение параметра "pinCodeMethodsPersCard" = Пин-конверт
        :precondition:      На варианте "Операции с базовыми счетами" значение параметра "pinCodeMethodsUnPersCard" = SMS-сообщение
        :precondition:      В itwCredo-kyc.properties внесены соответствующие настройки (kyc.url, emails=credospam@itworks.by, timeout=300, workingTimeRole=front_office)
        :source_point:      57563, 57657, 58155
        :comment:           Для возможности завершения заявки (активации карточки) выполняется апдейт карточки по номеру crd_code c установкой crd_embossed = 'YES', crd_prod_status = 'M'
        :comment:           Siron KYC: для установки статусов / получения ответов по Клиенту использовался эмулятор - бот для сайрона @itwAssistantBot, в itwCredo-kyc.properties kyc.url=http://autotest.itworks.brest:8301/siron
        :comment:           У пользователя есть права доступа для продукта "Базовые счета" и параметра 'Использовать параметры для поля (Способ получения пин-кода для продукта "Базовые счета")'
        :comment:           У пользователя есть права доступа для продукта "Базовые счета" и параметра 'Использовать параметры для поля (Способ получения пин-кода для варианта "Операции с базовым счётом")'
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 101 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 100 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 100 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'BasicAccounts'

    VARIANT = 'OperationsBasicAccount'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '6250875E716PB5'
    # :step: Нажимаем кнопку "Искать"
    # :step: Нажимаем на краткую карточку клиента

    # :newpage: #######################################################################################################

    # :step: Выбрать продукт на форме "Профиль клиента"
    value = 'Базовые счета'
    # :step: Выбрать вариант
    value = 'Операции с базовым счетом'
    # :step: Нажать кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: Нажать кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На параметрах заявки присутствуют параметры doKyc ([KYC] Проверять клиента в KYC) со значением "да"
    # :step: На варианте  изменяем значение параметра doKyc ([KYC] Проверять клиента в KYC) = нет
    # :step: Выбираем тип операции
    value = 'Переоформление текущего счёта в базовый'
    # :step: Выбираем счет
    # :assert: форма дополняется блоком "Выберите параметры выплаты остатка (при наличии)", поле "Вид выплаты остатка"  по умолчанию заполнено значением "Выдать наличными"
    # :step: В поле "Вид выплаты остатка" выбираем значение
    value = 'Перечислить остаток на счёт'
    # :assert: форма дополняется полями "Код банка для перечисления остатка"(не заполнено, активно), "Номер счёта для перечисления остатка" (Предзаполнено по маске  "BY__ ____ __ ____ ____ ____ ____", заблокировано)
    # :step: выбираем "Код банка для перечисления остатка" из открывающегося справочника "Коды банков" через "Поиск"
    value = 'AKBBBY21514'
    # :assert: Список ограничен страной "БЕЛАРУСЬ" и типом кода "BIC-BEL"
    # :assert: поле "Номер счёта для перечисления остатка" активно и предзаполнено по маске "BY__ AKBB __ ____ ____ ____ ____"
    # :step: заполняем "Номер счёта для перечисления остатка"
    value = 'BY78AKBB97465114046544231747'
    # :step: нажимаем кнопку "Далее"
    # :assert: В параметрах заявки сохранились значения type_transfer_remainder = ACCNT (Вид выплаты остатка), bank_code_for_transfer_remainder = AKBBBY21514 (Код банка для перечисления остатка), account_for_transfer_remainder = BY78AKBB97465114046544231747 (Номер счета для перечисления остатка), bank_name_for_transfer_remainder = BELARUSBANK (Наименование банка для перечисления остатка)

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод параметров расчётной карточки заполняем поле "Тип карточки"
    value = 'БЕЛКАРТ-ПРЕМИУМ Базовая'
    # :assert: заполнилось поле "Валюта счета"  = "Белорусский рубль"
    # :assert: заполнилось поле "Срок действия"  = "5 лет"
    # :step: заполняем поле "Регион выдачи" = "Минск"
    # :step: заполняем поле "Точка выдачи" ="Центр премиального обслуживания / г.Минск ул.Притыцкого 60/2"
    # :assert: В поле "Способ получения ПИН-кода" доступно только одно значение = ПИН-конверт
    # :step: В поле "Тип карточки" выбираем неперсонифицированную карту
    value = 'БЕЛКАРТ-ПРЕМИУМ Instant Issue Базовая'
    # :assert: В поле "Способ получения ПИН-кода" доступно только одно значение = SMS-сообщение
    # :assert: заполнилось поле "Срок действия"  = "до 5 лет"
    # :assert: заполнилось поле "Регион выдачи"  = "Минск" и недоступно для редактирования
    # :assert: заполнилось поле "Точка выдачи"  = "Отдел розничных операций / г.Минск ул.Притыцкого 60/2" и недоступно для редактирования
    # :step: Нажимаем кнопку "Рассчитать стоимость оформления"
    # :step: нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: заполняем поле Кодовое слово клиента
    value = 'код'
    # :step: заполняем поле Источник получения информации о продукте
    value = 'прочее'
    # :step: нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: по ссылке "Заявление -анкета" скачиваем документ "ЗАЯВЛЕНИЕ-АНКЕТА НА ОФОРМЛЕНИЕ ПЛАТЕЖНОЙ КАРТОЧКИ"  в формате pdf
    # :step: по ссылке "Заявления на переоформление базового счета" скачиваем документ "ЗАЯВЛЕНИЕ о переоформлении текущего (расчетного) банковского счета в базовый счет" в формате pdf
    # :assert: В файле "Заявление на переоформление базового счета" присутствует новая строка заполненная ранее введёнными значениями "Остаток денежных средств на текущем счете (при наличии) прошу перечислить на счет №BY78AKBB97465114046544231747 в BELARUSBANK, БИК AKBBBY21514."
    # :step: Устанавливаем флаг Заявления оформлены
    # :step: Нажимаем кнопку "Подтвердить"
    # :assert: на параметры заявки сохранен параметр "Заявление на базовый счёт" (application_basic_accnt) с ссылкой для скачивания
    # :assert: Задача «Ожидание рабочего времени» создана
    # :assert: В истории выполнения процесса по заявке создана задача "Таймер ожидания рабочего времени"
    # :assert: По заявке доступно событие "Сброс таймера" и "Перезапуск таймера"
    # :step: Для роли middle_office (Мидл-офис) устанавливаем на системную дату рабочее время 00:00 - 23:59
    # :step:  выполняем событие "Перезапуск таймера"
    # :assert: После задачи «Ожидание рабочего времени» создана задача «Проверка возможности открытия БС» (ErrorText отсутствует - форма не отобразилась)
    # :assert: После задачи «Проверка возможности открытия БС» создана задача «Ожидание рабочего времени»

    # :newpage: #######################################################################################################

    # :assert: Выполняется запрос ITW/GetAnswerForBA, в котором передаются параметры: "reopen_blnc_transf_type" = ACCNT (Вид выплаты остатка), "reopen_blnc_transf_bic" = AKBBBY21514 (Код банка для перечисления остатка), "reopen_blnc_transf_accnt" = BY78AKBB97465114046544231747 (Номер счета для перечисления остатка)
    # :assert: В истории выполнения процесса после окончания сохранения клиента создались задачи "Проверка KYC", "Запуск процесса KycChecker"
    # :assert: На параметрах заявки присутствуют параметры kycId ([KYC] ID для проверки в Siron) = EFR2455865_fa986
    # :assert: Результат проверки сохранен в параметрах на заявки kycStatus ([KYC] Статус проверки клиента в KYC) = check, kycDate ([KYC] Время проверки клиента в KYC) = 2022-07-06T16:46:38, kycComment ([KYC] Комментарий к проверке клиента в KYC) = Статус check успешно установлен

    # :newpage: #######################################################################################################

    # :assert: Отобразилась форма «Проверка клиента в KYC(Siron)»
    # :assert: Кнопка "Завершить" не доступна для нажатия
    # :assert: На форме «Проверка клиента в KYC(Siron)» в поле «Результат проверки» получен статус "На проверке УФМ (произошло совпадение)"
    # :step: В Siron KYC устанавливаем статус pending
    # :step: Нажимаем кнопку "Обновить" на форме «Проверка клиента в KYC(Siron)»
    # :assert: В истории выполнения процесса создались задачи "Проверка KYC", "Запуск процесса KycChecker"
    # :assert: На параметрах заявки присутствуют параметры kycId ([KYC] ID для проверки в Siron) = EFR2456099_fce99
    # :assert: Результат проверки сохранен в параметрах на заявки kycStatus ([KYC] Статус проверки клиента в KYC) = pending, kycDate ([KYC] Время проверки клиента в KYC) = 2022-07-06T16:46:38, kycComment ([KYC] Комментарий к проверке клиента в KYC) = Статус pending успешно установлен

    # :newpage: #######################################################################################################

    # :assert: Отобразилась форма «Проверка клиента в KYC(Siron)», в поле «Результат проверки» получен статус "Отложен УФМ"
    # :step: В Siron KYC устанавливаем статус release
    # :step: Ожидаем 300 секунд (timeout=300)
    # :assert: Результат не обновляется на форме автоматически
    # :step: Ожидаем наступления рабочего времени
    # :assert: Результат обновился на форме автоматически, без обновления страницы браузера
    # :assert: В истории выполнения процесса создались задачи "Проверка KYC", "Запуск процесса KycChecker"
    # :assert: На параметрах заявки присутствуют параметры kycId ([KYC] ID для проверки в Siron) = EFR2455829_cc558
    # :assert: Результат проверки сохранен в параметрах на заявки kycStatus ([KYC] Статус проверки клиента в KYC) = release, kycDate ([KYC] Время проверки клиента в KYC) = 2022-07-06T16:46:38, kycComment ([KYC] Комментарий к проверке клиента в KYC) = Статус release успешно установлен

    # :newpage: #######################################################################################################

    # :assert: Отобразилась форма «Проверка клиента в KYC(Siron)»
    # :assert: На форме «Проверка клиента в KYC(Siron)» в поле «Результат проверки» получен статус "Совпадений нет по результатам проверки УФМ"
    # :step: Нажимаем кнопку "Отмена"
    # :assert: выходим из задачи, переходим в профиль клиента
    # :assert: заявка доступна инициатору заявки (maslova)
    # :assert: заявка доступна пользователю с ролью admins (maslov)
    # :assert: заявка не доступна пользователю без роли admins (hominskaya)
    # :step: На форме «Проверка клиента в KYC(Siron)» нажимаем "Завершить"

    # :newpage: #######################################################################################################

    # :assert: на форму "ПЕЧАТЬ УВЕДОМЛЕНИЯ" выводится текст "Передайте клиенту Заявление на переоформление базового счета для оформления расписки в получении Уведомления. Удостоверьтесь в подписании клиентом Заявление на переоформление базового счета и оформлении в нём расписки клиента в получении Уведомления, подтвердите оформление Заявление на переоформление базового счета:"
    # :assert: в список для хранения выводится заявление, соответствующего типу операции, из справочника «operations_basic_account»
    # :step: по ссылке "Уведомление об открытии базового счёта" скачиваем документ
    # :step: Устанавливаем флаг Заявление оформлено
    # :step: Нажимаем кнопку "Далее"
    # :assert: В параметрах заявки сохранилось Уведомление об открытии базового счета (notification_basic_accnt) с ссылкой для скачивания

    # :newpage: #######################################################################################################

    # :step: на форме "Выдача платежной карточки", устанавливаем флаг "Выдача платежной карточки оформлена в заявлении-анкете"
    # :step: Нажимаем на кнопку "Завершить выдачу карточки"

    # :newpage: #######################################################################################################

    # :assert: на форме "Подготовка документов к передаче на хранение" в списке документов для хранения есть "Заявление на переоформление базового счета"
    # :step: устанавливаем флаг Документы по заявке подготовлены
    # :step: Нажимаем на кнопку "Далее"
    # :assert: заявка завершается исполнением, статус "Окончена обработка"
    # :assert: ФОРПОСТ. Открылся контракт на продукте/Варианте BASE_ACCNT_CARD_INSTANT/RS_VIP_BELCART_PREMIUM

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_57563_18(app, credo_db):
    """
    {#
        :id:                57563_18
        :priority:          Средний
        :module:            Базовый счет
        :description:       Проверка прохождения заявки при выборе операции с БС (Переоформление текущего счёта в базовый). Запрос ITW/GetAnswerForBA вернул err_code = 100 и ErrorText заполнен. Завершено без исполнения. (58155) Проверка добавления новых параметров "Вид выплаты остатка", "Код банка для перечисления остатка", "Номер счета для перечисления остатка" сохранения их на заявке и отображения новых полей
        :precondition:      Пользователь авторизирован
        :precondition:      У пользователя параметр "Использование нового интерфейса" = "да"
        :precondition:      В справочнике Варианты продукта (card_variant) для "Базовый счет" поле "Продукты для карт"= "Базовый счет"
        :precondition:      В справочнике Типы карт для вариантов (card_for_variant) с вариантом продукта "Базовый счет" только "БЕЛКАРТ-ПРЕМИУМ Базовая" и "БЕЛКАРТ-ПРЕМИУМ Instant Issue Базовая"
        :precondition:      В справочнике Типы карт для вариантов (card_for_variant) для типа платежных карт "БЕЛКАРТ-ПРЕМИУМ Базовая": "Варианты продукта"= "БЕЛКАРТ-ПРЕМИУМ", "Продукт в Forpost"="BASE_ACCNT_CARD", "Вариант в Forpost"="RS_VIP_BELCART_PREMIUM", в "Отображение карточки в процессах" есть "Возможность открытия базового счёта", "Валюта счет"="Белорусский рубль", "Срок действия"="5 лет"
        :precondition:      В справочнике Типы карт для вариантов (card_for_variant) для типа платежных карт "БЕЛКАРТ-ПРЕМИУМ Instant Issue Базовая": "Варианты продукта"= "БЕЛКАРТ-ПРЕМИУМ", "Продукт в Forpost"="BASE_ACCNT_CARD_INSTANT", "Вариант в Forpost"="RS_VIP_BELCART_PREMIUM", в "Отображение карточки в процессах" есть "Возможность открытия базового счёта", "Валюта счет"="Белорусский рубль" "Срок действия"="до 5 лет"
        :precondition:      В справочнике Типы платежных карт (type_card) для типа платежных карт "БЕЛКАРТ-ПРЕМИУМ": "Персонифицированная" = "Да", "Продукт для PriorityPass в Forpost" и "Вариант для PriorityPass в Forpost" пустые, "Дополнительные сервисы/услуги"="SMS-управление SMS-информирование"
        :precondition:      На варианте параметр pinCodeMethodsPersCard = ПИН-конверт SMS-сообщение
        :precondition:      Фатка-самоидентификация не требуется
        :precondition:      Фамилия из запроса/уведомления не соответствует фамилии в АСБ УБС
        :precondition:      На варианте параметр needPreActualization = нет
        :precondition:      У пользователя отсутствуют права доступа для продукта "Базовые счета" и параметра 'Использовать параметры для поля (Способ получения пин-кода для продукта "Базовые счета")'
        :precondition:      У пользователя отсутствуют права доступа для продукта "Базовые счета" и параметра 'Использовать параметры для поля (Способ получения пин-кода для варианта "Операции с базовым счётом")'
        :precondition:      В справочнике "Способы получения ПИН-кода" есть 3 записи "Пин-конверт", "SMS-сообщение" и "Тест"
        :precondition:      На варианте "Операции с базовыми счетами" значение параметра "pinCodeMethodsPersCard" = SMS-сообщение
        :precondition:      На варианте "Операции с базовыми счетами" значение параметра "pinCodeMethodsUnPersCard" = ПИН-конверт
        :precondition:      В forpost у генерального договора для выпуска карты "БЕЛКАРТ-ПРЕМИУМ Instant Issue Базовая" на точке выдачи "Minsk_oro" параметр "CRD_PIN" = YES
        :source_point:      57563, 58155
        :comment:
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 101 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 100 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 100 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'BasicAccounts'

    VARIANT = 'OperationsBasicAccount'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '6121075E837PB0'
    # :step: Нажимаем кнопку "Искать"
    # :step: Нажимаем на краткую карточку клиента

    # :newpage: #######################################################################################################

    # :step: Выбрать продукт на форме "Профиль клиента"
    value = 'Базовые счета'
    # :step: Выбрать вариант
    value = 'Операции с базовым счетом'
    # :step: Нажать кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: Нажать кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Выбираем тип операции
    value = 'Переоформление текущего счёта в базовый'
    # :step: Выбираем счет
    # :assert: форма дополняется блоком "Выберите параметры выплаты остатка (при наличии)", поле "Вид выплаты остатка"  по умолчанию заполнено значением "Выдать наличными"
    # :step: нажимаем кнопку "Далее"
    # :assert: В параметрах заявки сохранилось значение type_transfer_remainder = CASH (Вид выплаты остатка)

    # :newpage: #######################################################################################################

    # :assert: На форме "Ввод параметров расчетной карточки" поле "Продукт" предзаполнено значением "Базовый счёт"
    # :step: заполняем поле "Тип карточки"
    value = 'БЕЛКАРТ-ПРЕМИУМ Базовая'
    # :assert: заполнилось поле "Валюта счета"  = "Белорусский рубль"
    # :assert: заполнилось поле "Срок действия"  = "5 лет"
    # :step: заполняем поле "Регион выдачи" = "Минск"
    # :step: заполняем поле "Точка выдачи" ="ОСБПК УСРО / г.Минск ул.Притыцкого 60/2"
    # :assert: В поле "Способ получения ПИН-кода" доступно для выбора одно из трёх значений справочника: "Пин-конверт", "SMS-сообщение" или "Тест"
    # :step: В поле "Тип карточки" выбираем неперсонифицированную карту
    value = 'БЕЛКАРТ-ПРЕМИУМ Instant Issue Базовая'
    # :assert: В поле "Способ получения ПИН-кода" доступно только одно значение = SMS-сообщение
    # :assert: заполнилось поле "Срок действия"  = "до 5 лет"
    # :assert: заполнилось поле "Регион выдачи"  = "Минск" и недоступно для редактирования
    # :assert: заполнилось поле "Точка выдачи"  = "Отдел розничных операций / г.Минск ул.Притыцкого 60/2" и недоступно для редактирования
    # :step: Нажимаем кнопку "Рассчитать стоимость оформления"
    # :step: нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: заполняем поле Кодовое слово клиента на форме "Ввод иных параметров платежной карточки"
    value = 'код'
    # :step: заполняем поле Источник получения информации о продукте
    value = 'прочее'
    # :step: нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: по ссылке "Заявления на переоформление базового счета" скачиваем документ "ЗАЯВЛЕНИЕ о переоформлении текущего (расчетного) банковского счета в базовый счет" в формате pdf
    # :assert: В файле "Заявление на переоформление базового счета" присутствует новая строка заполненная ранее введёнными значениями "Остаток денежных средств на текущем счете (при наличии) прошу выдать наличными денежными средствами."
    # :step: Устанавливаем флаг Заявления оформлены
    # :step: Нажимаем кнопку "Подтвердить"

    # :newpage: #######################################################################################################

    # :assert: Выполняется запрос ITW/GetAnswerForBA, в котором передаются параметры "reopen_blnc_transf_type" = CASH (Вид выплаты остатка), параметры "reopen_blnc_transf_bic" (Код банка для перечисления остатка) и "reopen_blnc_transf_accnt" (Номер счета для перечисления остатка) не передаются
    # :assert: осуществляется переход на форму "Проверка возможности открытия БС"
    # :assert: на форме "Проверка возможности открытия БС" выводится ЕrrorText
    # :assert: на форме "Проверка возможности открытия БС" выводится текст из блока «error_code_other» справочника «Информационные блоки ЕФР»
    # :assert: на форму "Проверка возможности открытия БС" выводится кнопка "Отмена", всегда видима и доступна
    # :assert: на форму "Проверка возможности открытия БС" выводится кнопка "Завершить без оформления"
    # :step: Нажимаем кнопку "Отмена"

    # :newpage: #######################################################################################################

    # :step: Выполняем задачу "Проверка возможности открытия БС" в Профиле клиента
    # :step: нажимаем кнопку "Завершить без оформления"
    # :assert: заявка завершается со статусом "Завершено без исполнения"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)



