# :suit_description: #58486 
# :revision_date: 21.12.2022

@pytest.mark.skip(reason="Template")
def test_51733_2(app, credo_db):
    """
    {#
        :id:                51733_2
        :priority:          Средний
        :module:            Кредитование
        :description:       Проверка срабатывания стоп-фактора А1, сохранение параметра заявки stop_factor «Найденный стоп-фактор». Проверка запроса в (KYC)Siron со статусом check, pending. Проверка работы кнопки "Обновить". Проверка автоматического запроса в (KYC)Siron (58486) Проверка передачи typeSubject в ЕРК для видов занятости (ИП, Собственник предприятия)
        :precondition:      Пользователь авторизирован в СКЗ только с ролями front_office, front_office_drive, front_office_factoring_ziko, сredit_expert, InsuranceBPK
        :precondition:      Подготовлен файл 6090883K383GB5.xml (Есть факты (1 и более) привлечения к уголовной ответственности за последние 5 лет и количество действующих и закрытых кредитов равно нулю)
        :precondition:      В справочнике "Настройки определения стоп-факторов" в строке "fast_money_NEW" присутствует стоп-фактор A1
        :precondition:      Параметр пользователя useNewCabinet ("Использование нового интерфейса") = "да"
        :precondition:      На параметрах варианта параметр useAutomaticMovementScheme = нет
        :precondition:      На параметрах варианта параметр forms_check_required = да
        :precondition:      У клиента отсутствуют данные о видах занятости
        :precondition:      На продукте/варианте параметр needPreActualization = нет
        :precondition:      На варианте параметр useExtendedForms (Использовать формы с доп. полями) = "нет"
        :precondition:      Справочник "Банки РБ" заполнен
        :precondition:      На продукте/варианте параметр doKyc = да
        :precondition:      в (KYC)Siron клиент имеет статус check
        :precondition:      в (KYC)Siron Комментарий = Статус check успешно установлен
        :precondition:      В файле itwcredo-kyc.properties параметр workingTimeRole=front_office
        :precondition:      В файле itwcredo-kyc.properties параметр timeout=300
        :precondition:      Системное время = 12:30
        :precondition:      Для роли front_office установлено начало рабочего времени = 13:00
        :precondition:      Пользователь maslova только с ролью admins
        :precondition:      У пользователя hominskaya есть все роли, кроме admins
        :precondition:      В справочнике "ИНФОРМАЦИОННЫЕ БЛОКИ ЕФР" в строке с Идентификатор блока = "wait_for_ufm" содердит текст = "Ожидайте результат проверки УФМ.<br/>Режим работы УФМ:<br/>Пн-Чт: 08:30 – 17:30*<br/>Пт: 08:30 – 16:15*.<br/>Сб-Вскр – выходные.<br/>*в предпраздничные дни режим работы сокращен на 1 час. <br/> Тест"
        :source_point:      51733, 57422, 57657, 58486, 58550
        :comment:           стоп-фактор A1 - Есть факты (1 и более) "Привлечения к уголовному судопроизводству за 5 лет" и количество "действующих" и "закрытых" кредитов равно нулю
        :comment:           Задача "Проверка клиента в KYC(Siron)" должна назначаться инициатору, роли admins
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 105 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 105 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSales'

    VARIANT = 'fast_money'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '6090883K383GB5'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Предоставление кредита'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Быстрые деньги'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "ВВОД КЛЮЧЕВЫХ ДАННЫХ ЗАЯВИТЕЛЯ" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Отображение заявок и договоров клиента" выбираем тип заявки
    value = 'Новый кредит'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Указываем "Семейное положение"
    value = 'Женат (замужем)'
    # :step: Указываем "Количество иждивенцев"
    value = '0'
    # :step: Выбираем новый вид занятости
    value = 'Индивидуальный предприниматель'
    # :step: Выбираем источник дохода
    value = 'справка'
    # :step: Заполняем регистрационный номер справки
    value = '1234'
    # :step: Заполняем дату регистрации справки
    value = '02.02.2022'
    # :step: Выбираем вид уплачиваемых налогов
    value = 'единый налог'
    # :step: Заполняем налог к уплате (BYN)
    value = '500'
    # :step: Заполняем выручку по декларации (BYN)
    value = '1000'
    # :step: Заполняем сумму расходов по деятельности за отчётный период
    value = '300'
    # :step: Заполняем количество отчётных месяцев
    value = '2'
    # :step: Выбираем образование
    value = 'Высшее'
    # :step: Заполняем стаж на последнем месте работы (годы)
    value = '5'
    # :step: Заполняем стаж на последнем месте работы (месяцы)
    value = '7'
    # :step: Заполняем УНП организации
    value = '333333333'
    # :step: Выбираем новый второй вид занятости
    value = 'Собственник предприятия'
    # :step: Выбираем источник дохода
    value = 'Справка'
    # :step: Заполняем среднемесячный доход к выдаче
    value = '80000'
    # :step: Заполняем регистрационный номер справки
    value = '4321'
    # :step: Заполняем дату регистрации справки
    value = '02.02.2020'
    # :step: Заполняем наименование предприятия
    value = '123'
    # :step: Заполняем долю собственного участия, %
    value = '51'
    # :step: Выбираем образование
    value = 'Высшее'
    # :step: Заполняем стаж на последнем месте работы (годы)
    value = '6'
    # :step: Заполняем стаж на последнем месте работы (месяцы)
    value = '9'
    # :step: Заполняем УНП организации
    value = '212222222'
    # :step: Заполняем запрашиваемую сумму
    value = '500'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "ФОРМИРОВАНИЕ И ПЕЧАТЬ ДОКУМЕНТОВ" заполняем поле согласие на осуществление рекламных рассылок
    value = 'Согласие получено'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Создана задача "Проверка клиента в KYC(Siron)"
    # :assert: Задача "Проверка клиента в KYC(Siron)" доступна для инициатора заявки
    # :assert: Задача "Проверка клиента в KYC(Siron)" доступна для пользователя с ролью admins (maslova)
    # :assert: Задача "Проверка клиента в KYC(Siron)" недоступна для пользователей без роли admins
    # :assert: По заявке установлен статус "Отправлена на дополнительную проверку"
    # :assert: На форме в блоке "Результат проверки" отображается текст: "На проверке УФМ (произошло совпадение)"
    # :assert: На форме отображается текст: "Ожидайте результат проверки УФМ. Режим работы УФМ: Пн-Чт: 08:30 – 17:30* Пт: 08:30 – 16:15*. Сб-Вскр – выходные. *в предпраздничные дни режим работы сокращен на 1 час. Тест"
    # :assert: На параметрах заявки параметр kycId = EFR2456374_7425d (EFR[№ заявки]_[N рандомных символов])
    # :assert: На параметрах заявки параметр kycStatus = check
    # :assert: На параметрах заявки параметр kycComment = Статус check успешно установлен
    # :assert: На пользователей с ролью admins и и на адресс credospam@itworks.by пришло сообщение "Произошло совпадение в ЕФР со списками ФАМР ФАМР ФАМР (ID EFR2456772_c98bb) при оформлении заявки 2456772 по варианту (Предоставление кредита) Быстрые деньги. Сумма: 500 BYN Работник банка: Маслов Вадим Алексеевич. Телефон:
    # :assert: Кнопка "Завершить" недоступна
    # :assert: Кнопка "Обновить" доступна
    # :step: в KYC(Siron) устанавливаем статус pending
    # :step: Ожидаем 300 с
    # :assert: Автоматическое обновление не произошло
    # :step: Нажимаем кнопку "Обновить"
    # :assert: На форме в блоке "Результат проверки" отображается текст: "Отложен УФМ"
    # :assert: На параметрах заявки параметр kycStatus = pending
    # :assert: Кнопка "Завершить" доступна
    # :assert: Кнопка "Обновить" доступна
    # :step: в KYC(Siron) устанавливаем статус check
    # :step: Ожидаем 300 с
    # :assert: Автоматическое обновление не произошло
    # :step: Нажимаем кнопку "Обновить"
    # :assert: На параметрах заявки параметр kycStatus = check
    # :step: Ожидаем наступления рабочего времени для роли front_office
    # :assert: Автоматическое обновление произошло
    # :assert: На параметрах заявки параметр kycStatus = pending
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: В ЕРК переданы значения для видов занятости заявителя typeSubject="3" (Индивидуальный предприниматель) и typeSubject="2" (Собственник предприятия)
    # :assert: Заявка в статусе "Общая форма кредитного эксперта"
    # :step: Переходим на форму кредитного эксперта
    # :assert: Обнаруженный стоп-фактор = А1
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: На заявке параметр stop_factor имеет знаение = А1

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_51733_3(app, credo_db):
    """
    {#
        :id:                51733_3
        :priority:          Средний
        :module:            Кредитование
        :description:       Проверка срабатывания стоп-фактора B1. Проверка сохранения параметра заявки stop_factor «Найденный стоп-фактор» (58486) Проверка передачи typeSubject в ЕРК для видов занятости (По найму с УНП не из справочника "Банки РБ, По найму с УНП из справочника "Банки РБ)
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Подготовлен файл 6090883K383GB5.xml (Есть факты (3 и более) привлечения к уголовной ответственности за последние 5 лет )
        :precondition:      В справочнике stop_factor_movement "Настройки определения стоп-факторов" для "fast_money_NEW" в"Перечене стоп-факторов для проверки" присутствует B1
        :precondition:      Параметр пользователя useNewCabinet ("Использование нового интерфейса") = "да"
        :precondition:      На продукте/варианте параметр needPreActualization = нет
        :precondition:      На варианте параметр useExtendedForms (Использовать формы с доп. полями) = "нет"
        :precondition:      Справочник "Банки РБ" заполнен
        :precondition:      На параметрах варианта параметр useAutomaticMovementScheme = нет
        :precondition:      На параметрах варианта параметр forms_check_required = да
        :precondition:      По Клиенту доступно оформление кредита «Предоставление кредита (Быстрые деньги)»
        :source_point:      51733, 57422, 57657, 58486
        :comment:           Стоп-фактор B1 - Есть 3 и более фактов "Привлечения к уголовному судопроизводству за 5 лет"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 105 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 105 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSales'

    VARIANT = 'fast_money'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '6090883K383GB5'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Предоставление кредита'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Быстрые деньги'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "ВВОД КЛЮЧЕВЫХ ДАННЫХ ЗАЯВИТЕЛЯ" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Отображение заявок и договоров клиента" выбираем тип заявки
    value = 'Новый кредит'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Указываем "Семейное положение"
    value = 'Женат (замужем)'
    # :step: Указываем "Количество иждивенцев"
    value = '0'
    # :step: Выбираем источник дохода
    value = 'справка'
    # :step: Заполняем среднемесячный доход к выдаче
    value = '80000'
    # :step: Заполняем регистрационный номер справки
    value = '1234'
    # :step: Заполняем дату регистрации справки
    value = '02.02.2022'
    # :step: Изменяем наименование предприятия
    value = '123'
    # :step: Заполняем УНП организации не из значений справочника "Банки РБ"
    value = '222222222'
    # :step: Выбираем новый второй вид занятости
    value = 'По найму'
    # :step: Выбираем источник дохода
    value = 'справка'
    # :step: Заполняем среднемесячный доход к выдаче
    value = '80000'
    # :step: Заполняем регистрационный номер справки
    value = '4321'
    # :step: Заполняем дату регистрации справки
    value = '02.02.2022'
    # :step: Изменяем наименование предприятия
    value = '123'
    # :step: Выбираем форму трудоустройства
    value = 'Контракт'
    # :step: Выбираем образование
    value = 'Высшее'
    # :step: Выбираем должность
    value = 'IT-специалист'
    # :step: Заполняем стаж на последнем месте работы (годы)
    value = '7'
    # :step: Заполняем стаж на последнем месте работы (месяцы)
    value = '5'
    # :step: Заполняем УНП организации значением из справочника "Банки РБ"
    value = '100429079'
    # :step: Заполняем запрашиваемую сумму
    value = '500'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "ФОРМИРОВАНИЕ И ПЕЧАТЬ ДОКУМЕНТОВ" заполняем поле согласие на осуществление рекламных рассылок
    value = 'Согласие получено'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: В ЕРК по первому месту работы заявителя передано новое значение typeSubject ="2" (По найму, УНП не из справочника «Банки РБ»), по второму месту работы typeSubject="4" (По найму, УНП из справочника «Банки РБ»)
    # :assert: Заявка в статусе "Общая форма кредитного эксперта"
    # :step: Переходим на форму кредитного эксперта
    # :assert: Обнаруженный стоп-фактор = В1
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: На заявке параметр stop_factor имеет знаение = В1

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_51733_4(app, credo_db):
    """
    {#
        :id:                51733_4
        :priority:          Средний
        :module:            Кредитование
        :description:       Проверка срабатывания стоп-фактора E. Проверка сохранения параметра заявки stop_factor «Найденный стоп-фактор» (58486) Проверка передачи typeSubject в ЕРК для видов занятости (Не изменяется место работы и вид занятости, Ремесленник)
        :precondition:      Подготовлен файл 6090883K383GB5_11012.xml (Количество запросов кредитной истории за последние 7 дней – 3 и более)
        :precondition:      В справочнике "Настройки определения стоп-факторов" в строке "fast_money_NEW" присутствует стоп-фактор E
        :precondition:      Параметр пользователя useNewCabinet ("Использование нового интерфейса") = "да"
        :precondition:      На параметрах варианта параметр useAutomaticMovementScheme = нет
        :precondition:      На параметрах варианта параметр forms_check_required = да
        :precondition:      У клиента вид занятости "По найму" с typeSubject = 4. В справочнике UNP_Bank  «Банки РБ» изменяем значение УНП, совпадающее с УНП этого места работы клиента, на несуществующее (919191919)
        :precondition:      На продукте/варианте параметр needPreActualization = нет
        :precondition:      На варианте параметр useExtendedForms (Использовать формы с доп. полями) = "нет"
        :precondition:      Справочник "Банки РБ" заполнен
        :source_point:      51733, 57422, 57657, 58486
        :comment:           Стоп-фактор E - Количество запросов кредитной истории за последние 7 дней («Количество запросов за последние 7 дней (банки)» и «Количество запросов за последние 7 дней (не банки)») – 3 и более
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 105 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 105 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSales'

    VARIANT = 'fast_money'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '6090883K383GB5'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Предоставление кредита'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Быстрые деньги'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "ВВОД КЛЮЧЕВЫХ ДАННЫХ ЗАЯВИТЕЛЯ" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Отображение заявок и договоров клиента" выбираем тип заявки
    value = 'Новый кредит'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Указываем "Семейное положение"
    value = 'Женат (замужем)'
    # :step: Указываем "Количество иждивенцев"
    value = '0'
    # :assert: Поле вид занятости предзаполнено значением полученным из ЕРК (По найму)
    # :step: Выбираем источник дохода
    value = 'справка'
    # :step: Заполняем регистрационный номер справки
    value = '1234'
    # :step: Заполняем дату регистрации справки
    value = '02.02.2022'
    # :step: Выбираем второй вид занятости
    value = 'Ремесленник'
    # :step: Заполняем источник дохода
    value = 'справка'
    # :step: Заполняем среднемесячный доход за 3 месяца
    value = '80000'
    # :step: Заполняем регистрационный номер справки
    value = '1234'
    # :step: Заполняем дату регистрации справки
    value = '02.02.2022'
    # :step: Заполняем наименование предприятия
    value = '123'
    # :step: Заполняем отрасль работодателя
    value = 'Производство'
    # :step: Выбираем форму трудоустройства
    value = 'Контракт'
    # :step: Заполняем адрес компании
    value = 'Брест'
    # :step: Заполняем стаж на последнем месте работы (годы)
    value = '5'
    # :step: Заполняем стаж на последнем месте работы (месяцы)
    value = '7'
    # :step: Заполняем УНП организации
    value = '123456789'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "ФОРМИРОВАНИЕ И ПЕЧАТЬ ДОКУМЕНТОВ" заполняем поле согласие на осуществление рекламных рассылок
    value = 'Согласие получено'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: В ЕРК для первого первого места работы заявителя передается без изменения typeSubject="4"(По найму), а для второго вида занятости передано значение typeSubject="2" (Ремесленник)
    # :assert: Заявка в статусе "Общая форма кредитного эксперта"
    # :step: Переходим на форму кредитного эксперта
    # :assert: Обнаруженный стоп-фактор = Е
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Параметр заявки stop_factor имеет знаение = E

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_51733_12(app, credo_db):
    """
    {#
        :id:                51733_12
        :priority:          Средний
        :module:            Кредитование
        :description:       Проверка срабатывания стоп-фактора E. Проверка сохранения параметра заявки stop_factor «Найденный стоп-фактор». Проверка получения статуса inconspic при запросе в (KYC)Siron (58486) Проверка передачи typeSubject в ЕРК для видов занятости (Декретный отпуск, Безработный)
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Подготовлен файл 6090883K383GB5_11012.xml (Количество запросов кредитной истории за последние 7 дней – 3 и более)
        :precondition:      В справочнике "Настройки определения стоп-факторов" в строке "default_NEW" присутствует стоп-фактор E
        :precondition:      Параметр пользователя useNewCabinet ("Использование нового интерфейса") = "нет"
        :precondition:      На параметрах варианта параметр useAutomaticMovementScheme = нет
        :precondition:      На параметрах варианта параметр forms_check_required = да
        :precondition:      На продукте/варианте параметр doKyc = да
        :precondition:      На варианте параметр useExtendedForms (Использовать формы с доп. полями) = "нет"
        :precondition:      Справочник "Банки РБ" заполнен
        :precondition:      в (KYC)Siron клиент имеет статус inconspic
        :source_point:      51733, 57422, 57657, 58486
        :comment:           Стоп-фактор E - Количество запросов кредитной истории за последние 7 дней («Количество запросов за последние 7 дней (банки)» и «Количество запросов за последние 7 дней (не банки)») – 3 и более
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 105 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 105 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSalesAuto'

    VARIANT = 'auto_credit_pos_credit'


    # :newpage: #######################################################################################################

    # :step: На форме "Ввод ключевых данных заявителя" поле "Страна резидентства" заполняется автоматически. Не доступно для редактирования
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Ввод ключевых данных заявителя" заполняем поле "Личный номер (для граждан РБ)/Номер паспорта (для иностранных граждан)"
    value = '6090883K383GB5'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля Тип заявки
    value = 'Новый кредит'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Заполняем поле "Имя латинскими буквами"
    value = 'ANNA'
    # :step: Заполняем поле "Фамилия латинскими буквами"
    value = 'OLUHEI'
    # :step: Заполняем поле "Домашний телефон"
    value = '+375653686318'
    # :step: Заполняем поле "Кодовое слово"
    value = 'код'
    # :step: Заполняем поле "Место проживания"
    value = 'Собственный дом'
    # :step: Указываем "Семейное положение"
    value = 'Женат (замужем)'
    # :step: Указываем "Количество иждивенцев"
    value = '0'
    # :step: Выбираем вид занятости
    value = 'Декретный отпуск'
    # :step: Заполняем источник дохода
    value = 'справка'
    # :step: Заполняем среднемесячный доход за 3 месяца
    value = '80000'
    # :step: Заполняем регистрационный номер справки
    value = '1234'
    # :step: Заполняем дату регистрации справки
    value = '02.02.2022'
    # :step: Выбираем Образование
    value = 'Высшее'
    # :step: Выбираем второй вид занятости
    value = 'Безработный'
    # :step: Заполняем источник дохода
    value = 'без справки'
    # :step: Заполняем среднемесячный доход к выдаче
    value = '80000'
    # :step: Выбираем Образование
    value = 'Высшее'
    # :step: Заполняем поле "Запрашиваемая сумма"
    value = '1500'
    # :step: Заполняем поле "Стоимость автомобиля по договору"
    value = '2000'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Скачиваем "Анкету и согласие клиента" на форме "Формирование и печать документов"
    # :step: Из выпадающего списка "Согласие на осуществление рекламных рассылок" выбираем значение
    value = 'Согласие получено'
    # :step: Нажимаем кнопку "Завершить"
    # :assert: В ЕРК переданы значения для видов занятости заявителя typeSubject="2" (Декретный отпуск) и typeSubject="2" (Безработный)
    # :assert: Форма задачи "Проверка клиента в KYC(Siron)" пропущена
    # :assert: На параметрах заявки параметр kycStatus = inconspic

    # :newpage: #######################################################################################################

    # :step: Переходим на форму кредитного эксперта
    # :assert: Обнаруженный стоп-фактор = Е
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Параметр заявки stop_factor имеет знаение = E

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_51733_21(app, credo_db):
    """
    {#
        :id:                51733_21
        :priority:          Средний
        :module:            Кредитование
        :description:       Проверка срабатывания стоп-фактора X. Проверка сохранения параметра заявки stop_factor «Найденный стоп-фактор» (58486) Проверка передачи typeSubject в ЕРК для видов занятости (Пенсионер, Пенсионер по инвалидности)
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      В справочнике "Настройки определения стоп-факторов" в строке "cart_pokup_NEW" присутствует стоп-фактор X
        :precondition:      Подготовлен файл 6090883K383GB5.json (Задолженность в ОПИ 4896)
        :precondition:      Параметр пользователя useNewCabinet ("Использование нового интерфейса") = "нет"
        :precondition:      На варианте параметр bkiBaseValue = 29
        :precondition:      На параметрах варианта параметр useAutomaticMovementScheme = нет
        :precondition:      На параметрах варианта параметр forms_check_required = да
        :precondition:      У клиента отсутствуют данные о видах занятости
        :precondition:      У клиента 2 места работы: с typeSubject=3 (ИП) и typeSubject=4 (по найму с УНП из справочника Банки РБ)
        :precondition:      На варианте параметр useExtendedForms (Использовать формы с доп. полями) = "нет"
        :precondition:      Справочник "Банки РБ" заполнен
        :source_point:      51733, 57422, 58486
        :comment:           стоп-фактор X - Размер задолженности по ОПИ составляет 6 и более базовых величин
        :comment:           Карточки в ФОРПОСТ - контракт INSANEL/IG/1899
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 105 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 105 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSalesAgent'

    VARIANT = 'cart_pokup_insaiel'


    # :newpage: #######################################################################################################

    # :step: На форме "Ввод ключевых данных заявителя" поле "Страна резидентства" заполняется автоматически. Не доступно для редактирования
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Ввод ключевых данных заявителя" заполняем поле "Личный номер (для граждан РБ)/Номер паспорта (для иностранных граждан)"
    value = '6090883K383GB5'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля Тип заявки
    value = 'Новый кредит'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Заполняем поле "Имя латинскими буквами"
    value = 'ANNA'
    # :step: Заполняем поле "Фамилия латинскими буквами"
    value = 'OLUHEI'
    # :step: Заполняем поле "Домашний телефон"
    value = '+375653686318'
    # :step: Заполняем поле "Кодовое слово"
    value = 'код'
    # :step: Заполняем поле "Место проживания"
    value = 'Собственный дом'
    # :step: Указываем "Семейное положение"
    value = 'Женат (замужем)'
    # :step: Указываем "Количество иждивенцев"
    value = '0'
    # :step: Изменяем вид занятости
    value = 'Пенсионер'
    # :step: Заполняем источник дохода
    value = 'справка'
    # :step: Заполняем среднемесячный доход за 3 месяца
    value = '80000'
    # :step: Заполняем регистрационный номер справки
    value = '1234'
    # :step: Заполняем дату регистрации справки
    value = '02.02.2022'
    # :step: Изменяем второй вид занятости
    value = 'Пенсионер по инвалидности'
    # :step: Заполняем источник дохода
    value = 'справка'
    # :step: Заполняем среднемесячный доход за 3 месяца
    value = '80000'
    # :step: Заполняем регистрационный номер справки
    value = '4321'
    # :step: Заполняем дату регистрации справки
    value = '02.02.2022'
    # :step: Заполняем поле "Маска карты" заранее найденной незанятой болванки
    value = '530422xxxx003896'
    # :step: Заполняем поле "Запрашиваемая сумма"
    value = '1000'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Скачиваем "Анкету и согласие клиента" на форме "Формирование и печать документов"
    # :step: Из выпадающего списка "Согласие на осуществление рекламных рассылок" выбираем значение
    value = 'Согласие получено'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: В ЕРК переданы новые значения typeSubject по видам занятости: typeSubject="2" (Пенсионер) и typeSubject="2" (Пенсионер по инвалидности)
    # :step: Переходим на форму кредитного эксперта
    # :assert: Обнаруженный стоп-фактор = X
    # :assert: Размер задолженности по ОПИ (4896) составляет 6 и более базовых величин (29*6)
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: На заявке параметр stop_factor имеет знаение = X

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_51733_33(app, credo_db):
    """
    {#
        :id:                51733_33
        :priority:          Средний
        :module:            Кредитование
        :description:       Проверка срабатывания стоп-фактора E. Проверка сохранения параметра заявки stop_factor «Найденный стоп-фактор». Проверка получения статуса inconspic при запросе в (KYC)Siron (58486) Проверка передачи typeSubject в ЕРК для видов занятости (По найму с УНП не из справочника)
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Подготовлен файл 6090883K383GB5_11012.xml (Количество запросов кредитной истории за последние 7 дней – 3 и более)
        :precondition:      В справочнике "Настройки определения стоп-факторов" в строке "default_NEW" присутствует стоп-фактор E
        :precondition:      Параметр пользователя useNewCabinet ("Использование нового интерфейса") = "да"
        :precondition:      В системе есть заявка Предоставление кредита/ Скоро новоселье в статусе "Начата обработка" c пустым параметром guarantee (ИД заявки = 2451354)
        :precondition:      На параметрах варианта параметр useAutomaticMovementScheme = нет
        :precondition:      На параметрах варианта параметр forms_check_required = да
        :precondition:      Существующий Клиент с видам занятости typeSubject="2" (Пенсионер) и typeSubject="2" (Пенсионер по инвалидности)
        :precondition:      На продукте/варианте параметр doKyc = да
        :precondition:      На продукте/варианте параметр is_display_consent = да
        :precondition:      На продукте/варианте параметр needPreActualization = нет
        :precondition:      в (KYC)Siron клиент имеет статус inconspic
        :precondition:      На варианте параметр useExtendedForms (Использовать формы с доп. полями) = "нет"
        :precondition:      Справочник "Банки РБ" заполнен
        :source_point:      51733, 57422, 57657, 58486
        :comment:           Стоп-фактор E - Количество запросов кредитной истории за последние 7 дней («Количество запросов за последние 7 дней (банки)» и «Количество запросов за последние 7 дней (не банки)») – 3 и более
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 105 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 105 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSales'

    VARIANT = 'fast_money_novoselie_guarantee'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '6090883K383GB5'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Предоставление кредита'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Скоро новоселье - поручитель'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "ВВОД КЛЮЧЕВЫХ ДАННЫХ ЗАЯВИТЕЛЯ" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Отображение заявок и договоров клиента" выбираем тип заявки
    value = 'Новый кредит'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Указываем "Семейное положение"
    value = 'Женат (замужем)'
    # :step: Указываем "Количество иждивенцев"
    value = '0'
    # :step: Выбираем вид занятости
    value = 'По найму'
    # :step: Выбираем источник дохода
    value = 'справка'
    # :step: Заполняем регистрационный номер справки
    value = '1234'
    # :step: Заполняем дату регистрации справки
    value = '02.02.2022'
    # :step: Заполняем Наименование предприятия
    value = 'предприятие'
    # :step: Выбираем Форму трудоустройства
    value = 'Контракт'
    # :step: Выбираем Образование
    value = 'Высшее'
    # :step: Выбираем Должность
    value = 'IT-СПЕЦИАЛИСТ'
    # :step: Заполняем стаж на последнем месте работы (годы)
    value = '5'
    # :step: Заполняем стаж на последнем месте работы (месяцы)
    value = '7'
    # :step: Заполняем УНП организации не из справочника Банки РБ
    value = '333333333'
    # :step: Удаляем с формы второй вид занятости
    value = 'Выберите значение'
    # :step: Выбираем Поручителя по заявке
    value = '2451354, Скоро новоселье, Начата обработка,сумма 1500 руб.'
    # :step: Заполняем поле "Запрашиваемая сумма"
    value = '1500'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Скачиваем "Анкету и согласие клиента" на форме "Формирование и печать документов"
    # :step: Из выпадающего списка "Согласие на осуществление рекламных рассылок" выбираем значение
    value = 'Согласие получено'
    # :step: Нажимаем кнопку "Завершить"
    # :assert: В ЕРК переданы значения для вида занятости заявителя typeSubject="2" (По найму)
    # :assert: Форма задачи "Проверка клиента в KYC(Siron)" пропущена
    # :assert: На параметрах заявки параметр kycStatus = inconspic

    # :newpage: #######################################################################################################

    # :step: Переходим на форму кредитного эксперта
    # :assert: Обнаруженный стоп-фактор = E
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Параметр заявки stop_factor имеет знаение = E

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_56258_4(app, credo_db):
    """
    {#
        :id:                56258_4
        :priority:          Средний
        :module:            Кредитование
        :description:       Факторинг. Проверка перерасчета значений полей блока "Характеристики товаров и условия рассрочки". Проверка возможности введения нескольких блоков данных по товарам по кнопке "Добавить товар". Проверка клиента в KYC(Siron), если check_status = check, check_status = pending, check_status = release. Проверка доступа к задаче «Проверка клиента в KYC(Siron)». Проверка кнопки "Обновить" на форме «Проверка клиента в KYC(Siron)», если check_status = check. Проверка автоматического обновления результата на форме задачи «Проверка клиента в KYC(Siron)», если check_status = pending. Проверка автоматического обновления результата в нерабочее время на форме задачи «Проверка клиента в KYC(Siron)», если check_status = pending (58486) Проверка передачи typeSubject в ЕРК для видов занятости (По найму с УНП из справочника Банки РБ, Пенсионер)
        :precondition:      У пользователя параметр "Использование нового интерфейса" = "нет". Пользователь "Агент банка" с параметром forpost_code = 1435381
        :precondition:      На продукте/варианте Факторинг/факторинг параметры loanTerm=6, request_issue_point = part_ziko, request_issue_point_group = твАГЕН
        :precondition:      В системе существует не менее 2-х ролей front_office_factoring% с правами на Факторинг (front_office_factoring_ziko, front_office_factoring_test)
        :precondition:      Пользователь авторизирован в СКЗ только с ролями front_office, front_office_drive, front_office_factoring_ziko, сredit_expert, InsuranceBPK
        :precondition:      Текущая дата 04.11.2021
        :precondition:      На варианте параметр general_crt_filter = 09.12.2021 (ближайшая дата открытия ФК_ГЕНЕРАЛЬНЫЙ_ДОГОВОР на клиенте с forpost_code = 1435381)
        :precondition:      Статус клиента в Siron KYC равен check
        :precondition:      На варианте параметр doKyc = Да
        :precondition:      Более 1-го варианта на продукте Факторинг
        :precondition:      Пользователь maslova только с ролью admins
        :precondition:      У пользователя hominskaya есть все роли, кроме admins
        :precondition:      В файле itwcredo-kyc.properties параметр workingTimeRole=front_office
        :precondition:      Для роли front_office установлено начало рабочего времени = 13:00
        :precondition:      Системное время = 12:30
        :precondition:      В itwCredo-kyc.properties внесены соответствующие настройки (kyc.url, emails=credospam@itworks.by, timeout=300, workingTimeRole=front_office)
        :precondition:      Справочник "Банки РБ" заполнен
        :precondition:      У клиента в ЕРК один вид занятости "По найму" с typeSubject="2"
        :source_point:      56258, 57657, 58486, 58550
        :comment:           Siron KYC: для установки статусов / получения ответов по Клиенту использовался эмулятор - бот для сайрона @itwAssistantBot, в itwCredo-kyc.properties kyc.url=http://autotest.itworks.brest:8301/siron
        :comment:           Задача "Проверка клиента в KYC(Siron)"назначается на инициатора заявки, роли "front_office_factoring%", найденной на инициаторе
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 105 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 105 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'Factoring'

    VARIANT = 'factoring_ziko'


    # :newpage: #######################################################################################################

    # :step: В списке заявок нажимаем кнопку "Создать"
    # :step: Выбираем значение поля "Продукт"
    value = 'Факторинг'
    # :step: Выбираем значение поля "Вариант"
    value = 'Факторинг (Зико)'
    # :step: Нажимаем кнопку "Сохранить"

    # :newpage: #######################################################################################################

    # :step: Указываем личный номер
    value = '6250875E716PB5'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: На параметрах заявки присутствуют параметры doKyc ([KYC] Проверять клиента в KYC) со значением "да"
    # :step: На форме "Отображение заявок и договоров клиента" выбираем "Тип заявки"
    value = 'Новый кредит'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выбираем источник дохода
    value = 'справка'
    # :step: Заполняем среднемесячный доход к выдаче
    value = '80000'
    # :step: Заполняем регистрационный номер справки
    value = '1234'
    # :step: Заполняем дату регистрации справки
    value = '02.02.2022'
    # :step: Изменяем "Наименование предприятия"
    value = 'новая работа 1 в банке'
    # :step: Изменяем "УНП организации" на значен6ие из справочника "Банки РБ"
    value = '100429079'
    # :step: Выбираем второй вид занятости
    value = 'Пенсионер'
    # :step: Выбираем источник дохода
    value = 'без справки'
    # :step: Заполняем среднемесячный доход к выдаче
    value = '800'
    # :step: Выбираем образование
    value = 'Высшее'
    # :step: Выбираем должность
    value = 'IT-специалист'
    # :step: Заполняем стаж на последнем месте работы (годы)
    value = '7'
    # :step: Заполняем стаж на последнем месте работы (месяцы)
    value = '5'
    # :step: В поле "Наименование товара" вводим
    value = 'ноутбук'
    # :step: В поле "Марка" вводим
    value = 'HP ProBook 640'
    # :step: В поле "Модель" вводим
    value = '125Р 32M42EA'
    # :step: В поле "Цена, бел. руб" вводим
    value = '6520'
    # :step: В поле "Количество, шт" вводим
    value = '2'
    # :step: В поле "Сумма первого взноса, бел. руб." вводим
    value = '100'
    # :step: В поле "Цена товара при продаже в рассрочку, бел. руб." вводим
    value = '8500'
    # :assert: "Первый взнос %" = 1,18
    # :assert: "Сумма ежемесячного платежа, бел руб." = 1 400
    # :assert: "Запрашиваемая сумма" = 8400
    # :step: Меняем значение  в поле "Сумма первого взноса, бел. руб."
    value = '150'
    # :assert: Значение поля "Первый взнос %" автоматически пересчиталось = 1,76
    # :assert: Значение поля "Сумма ежемесячного платежа, бел руб." автоматически пересчиталось =1 391,67
    # :assert: Значение в поле "Запрашиваемая сумма" автоматически пересчиталось = 8 350,00
    # :step: Нажимаем кнопку "Добавить товар"
    # :assert: Форма дополняется еще одним блоком "Характеристики товаров и условия рассрочки" для Товара #2
    # :step: В поле "Наименование товара" вводим
    value = 'телефон'
    # :step: В поле "Марка" вводим
    value = 'Redmi'
    # :step: В поле "Модель" вводим
    value = '125Р@'
    # :step: В поле "Цена, бел. руб" вводим
    value = '985.26'
    # :step: В поле "Количество, шт" вводим
    value = '2'
    # :step: В поле "Сумма первого взноса, бел. руб." вводим
    value = '58'
    # :step: В поле "Цена товара при продаже в рассрочку, бел. руб." вводим
    value = '1300.26'
    # :assert: Товар #2, "Первый взнос %" = 4,46
    # :assert: Товар #2, "Сумма ежемесячного платежа, бел руб." =207,04
    # :assert: "Запрашиваемая сумма" =9 592,26
    # :step: Меняем значение  в поле "Цена товара при продаже в рассрочку, бел. руб." для товара #2
    value = '1450'
    # :assert: Товар #2, значение поля "Первый взнос %" автоматически пересчиталось = 4
    # :assert: Товар #2, значение поля "Сумма ежемесячного платежа, бел руб." автоматически пересчиталось =232
    # :assert: Значение в поле "Запрашиваемая сумма" автоматически пересчиталось = 9 742,00
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Формирование и печать документов" нажимаем "Завершить"

    # :newpage: #######################################################################################################

    # :assert: В ЕРК переданы значения для видов занятости заявителя typeSubject="4" (По найму, УНП из справочника «Банки РБ») и typeSubject="2" (Пенсионер)
    # :assert: В истории выполнения процесса после окончания сохранения клиента создались задачи "Проверка KYC", "Запуск процесса KycChecker"
    # :assert: На параметрах заявки присутствуют параметры kycId ([KYC] ID для проверки в Siron) = EFR2456612_08572
    # :assert: Результат проверки сохранен в параметрах на заявки kycStatus ([KYC] Статус проверки клиента в KYC) = check, kycDate ([KYC] Время проверки клиента в KYC) = 2022-07-25T15:38:30, kycComment ([KYC] Комментарий к проверке клиента в KYC) = Статус check успешно установлен

    # :newpage: #######################################################################################################

    # :assert: Отобразилась форма «Проверка клиента в KYC(Siron)»
    # :assert: На форме «Проверка клиента в KYC(Siron)» в поле «Результат проверки» получен статус "На проверке УФМ (произошло совпадение)"
    # :assert: Кнопка "Завершить" не доступна для нажатия
    # :step: В Siron KYC устанавливаем статус pending
    # :step: Нажимаем кнопку "Обновить" на форме «Проверка клиента в KYC(Siron)»
    # :assert: В истории выполнения процесса создались задачи "Проверка KYC", "Запуск процесса KycChecker"
    # :assert: На параметрах заявки присутствуют параметры kycId ([KYC] ID для проверки в Siron) = EFR2456612_08572
    # :assert: Результат проверки сохранен в параметрах на заявки kycStatus ([KYC] Статус проверки клиента в KYC) = pending, kycDate ([KYC] Время проверки клиента в KYC) = 2022-07-25T15:40:02, kycComment ([KYC] Комментарий к проверке клиента в KYC) = Статус pending успешно установлен

    # :newpage: #######################################################################################################

    # :assert: Отобразилась форма «Проверка клиента в KYC(Siron)», в поле «Результат проверки» получен статус "Отложен УФМ"
    # :step: В Siron KYC устанавливаем статус release
    # :step: Ожидаем 300 секунд (timeout=300)
    # :assert: Результат не обновляется на форме автоматически
    # :step: Ожидаем наступления рабочего времени
    # :assert: Результат обновился на форме автоматически, без обновления страницы браузера
    # :assert: В истории выполнения процесса создались задачи "Проверка KYC", "Запуск процесса KycChecker"
    # :assert: На параметрах заявки присутствуют параметры kycId ([KYC] ID для проверки в Siron) = EFR2456612_08572
    # :assert: Результат проверки сохранен в параметрах на заявки kycStatus ([KYC] Статус проверки клиента в KYC) = release, kycDate ([KYC] Время проверки клиента в KYC) = 2022-07-25T15:45:05, kycComment ([KYC] Комментарий к проверке клиента в KYC) = Статус release успешно установлен

    # :newpage: #######################################################################################################

    # :assert: Отобразилась форма «Проверка клиента в KYC(Siron)»
    # :assert: На форме «Проверка клиента в KYC(Siron)» в поле «Результат проверки» получен статус "Совпадений нет по результатам проверки УФМ"
    # :step: Нажимаем кнопку "Отмена"
    # :assert: выходим из задачи
    # :assert: заявка доступна инициатору заявки
    # :assert: заявка доступна пользователю с ролью admins
    # :assert: заявка недоступна пользователям, у которых нет роли admins
    # :step: На форме «Проверка клиента в KYC(Siron)» нажимаем "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Переходим на форму "Общая форма кредитного эксперта"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_56258_6(app, credo_db):
    """
    {#
        :id:                56258_6
        :priority:          Средний
        :module:            Кредитование
        :description:       (56258) Проверка корректного прохождения заявки по автоматической схеме. (57129) Проверка блока "Согласия". Проверка сохранения блока "Consents" в ЕРК. (57227) Проверка согласия на осуществление рекламных рассылок, если параметр "Отображать блок рекламных согласий" = "да". (57413) Проверка передачи ФИО сотрудника и даты в теги  «IndAuthor» и «IndDT» в ЕРК.(58561)На форме задачи «Ввод параметров для формирования договоров» не отображается поле «Код доверенности для договора КУПЛИ-ПРОДАЖИ». (58486) Проверка передачи typeSubject в ЕРК для видов занятости (Индивидуальный предприниматель, Безработный)
        :precondition:      Пользователь авторизирован в системе
        :precondition:      Пользователь принадлежит группе "Агент банка"
        :precondition:      У пользователя параметр "Использование нового интерфейса" = "нет"
        :precondition:      На продутке Factoring параметр needPreActualization = нет
        :precondition:      У пользователя СКЗ параметр forpost_code = 1435381.
        :precondition:      У пользователя параметр location_sales "Точка продаж" = "Отдел розничных операций / г.Минск ул.Притыцкого 60/2"
        :precondition:      На Клиенте отсутствуют данные о видах занятости (Место работы и должность = Нет данных)
        :precondition:      У Клиента среднемесячный объем погашений = 0
        :precondition:      На варианте issue_loan_inform_emailBody = "Выполнено перечисление по клиенту <fio> (<requestId>)"
        :precondition:      На варианте loanTerm = "6"
        :precondition:      На варианте request_issue_point = "part_ziko"
        :precondition:      На варианте request_issue_point_group = "твАГЕН"
        :precondition:      На варианте discount_percent = 10
        :precondition:      На варианте usedBKIparamAuto = нет
        :precondition:      На варианте usedISSparamAuto = нет
        :precondition:      На варианте forms_check_required = нет
        :precondition:      На варианте useAutomaticMovementScheme = "да"
        :precondition:      На варианте print_contract_approveUsers = "semenov"
        :precondition:      На варианте issue_loan_inform_emails содержит E-Mail пользователя
        :precondition:      На варианте scoringCards=ScoringF
        :precondition:      На варианте scoringAuto=100
        :precondition:      На варианте is_display_consent = "да"
        :precondition:      На варианте use_requested_principle = нет
        :precondition:      Создана роль front_office_factoring_ziko с правами на Факторинг
        :precondition:      На пользователя назначены роли front_office_factoring_ziko, credit_expert, making_decision
        :precondition:      В справочнике СКЗ close_card_acc_text_block "Информационные блоки ЕФР" для строки "Текст для шапки блока «Согласия»" поле "Текст уведомления" = "Внимание! В данном разделе вы предлагаете клиенту подписать согласие на совершение рекламных рассылок. Сообщите клиенту, что будет высылаться только важная и нужная информация."
        :precondition:      В справочнике СКЗ close_card_acc_text_block "Информационные блоки ЕФР" для строки "Текст для уведомления блока «Согласия»" поле "Текст уведомления" = "<font color="#a80000">Необходимо предложить клиенту подписать согласие!</font>"
        :precondition:      На варианте  параметр general_crt_filter не заполнен
        :precondition:      У клиента ЮЛ (партнер банка) только один подходящий активный ФК_ГЕНЕРАЛЬНЫЙ_ДОГОВОР
        :precondition:      (спр. stop_factor_movement) В "Перечене стоп-факторов для проверки" для factoring_NEW отсутствует стоп-фактор "F"
        :precondition:      Заявка оформляется в рабочее время для "Роли для настроек работы сервиса перечисления денежных ср-в для факторинга" (Календарь, issueFactoringRole)
        :source_point:      56258, 57129, 57227, 57413_N, 58486, 58561
        :comment:           
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 105 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 105 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'Factoring'

    VARIANT = 'factoring_ziko'


    # :newpage: #######################################################################################################

    # :step: В списке заявок нажимаем кнопку "Создать"
    # :step: Выбираем значение поля "Продукт"
    value = 'Факторинг'
    # :step: Выбираем значение поля "Вариант"
    value = 'Факторинг (Зико)'
    # :step: Нажимаем кнопку "Сохранить"

    # :newpage: #######################################################################################################

    # :step: Указываем личный номер
    value = '6250875E716PB5'
    # :step: Нажимаем кнопку "Завершить"
    # :step: На форме "Отображение заявок и договоров клиента" заполняем поле "Тип заявки"
    value = 'Новый кредит'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод данных заявителя" выбираем "Вид занятости"
    value = 'Индивидуальный предприниматель'
    # :step: В поле "Источник дохода"
    value = 'справка'
    # :step: В поле "Регистрационный номер справки"
    value = '3500/4'
    # :step: В поле "Дата регистрации справки"
    value = '07.02.2022'
    # :step: Отмечаем "Вид уплачиваемых налогов"
    value = 'единый налог'
    # :step: Вводим "Налог к уплате (BYN)"
    value = '200'
    # :step: Вводим "Выручка по декларации (BYN)"
    value = '10500'
    # :step: Вводим "Сумма расходов по деятельности за отчетный период"
    value = '1200'
    # :step: Вводим "Количество отчетных месяцев"
    value = '2'
    # :step: Выбираем "Образование"
    value = 'Высшее'
    # :step: Вводим "Стаж на последнем месте работы (годы)"
    value = '5'
    # :step: Вводим "Стаж на последнем месте работы (месяцы)"
    value = '2'
    # :step: Вводим "УНП организации"
    value = '331333333'
    # :step: выбираем еще один "Вид занятости"
    value = 'Безработный'
    # :step: В поле "Источник дохода"
    value = 'без справки'
    # :step: В поле "Среднемесячный доход к выдаче" вводим
    value = '500'
    # :step: Выбираем "Образование"
    value = 'Высшее'
    # :step: В поле "Наименование товара" вводим
    value = 'ноутбук'
    # :step: В поле "Марка" вводим
    value = 'HP ProBook 640'
    # :step: В поле "Модель" вводим
    value = '125Р 32M42EA'
    # :step: В поле "Цена, бел. руб" вводим
    value = '6520'
    # :step: В поле "Количество, шт" вводим
    value = '1'
    # :step: В поле "Сумма первого взноса, бел. руб." вводим
    value = '100'
    # :step: В поле "Цена товара при продаже в рассрочку, бел. руб." вводим
    value = '8500'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: На парметрах заявки сохранились параметры: Сумма уступленного денежного требования (claim_amount)=8400.00, Сумма дисконта (discount_amount)=840.00, Сумма финансирования (funding_amount)=7560.00
    # :assert: Осуществляется переход на форму "Формирование и печать документов"
    # :assert: В параметре заявки itwAnketaOvrd сохранился документ "Анкета и согласие клиента" с возможностью скачать
    # :assert: На форме "Формирование и печать документов" присутствует ссылка для скачивания "Анкета и согласие клиента" в формате PDF
    # :assert: В сформированном документе в приложении "Информация, предоставляемая субъекту персональных данных в соответствии со статьей 5 Закона Республики Беларусь от 07.05.2021 No99-З «О защите персональных данных» (далее – Закон No99-З) до получения от субъекта согласия на обработку персональных данных." вторая страница пустая. После согласия на кредитный отчет пустая страница.
    # :assert: На форме присутсвтует блок "Согласия"
    # :assert: В блоке "Согласия"отображается шапка с текстом «Внимание! В данном разделе вы предлагаете клиенту подписать согласие на совершение рекламных рассылок. Сообщите клиенту, что будет высылаться только важная и нужная информация.» (текст из справочника close_card_acc_text_block "Информационные блоки ЕФР" для уведомления для шапки блока)
    # :assert: В блоке "Согласия" отображается уведомление "Необходимо предложить клиенту подписать согласие!" (текст из справочника close_card_acc_text_block "Информационные блоки ЕФР" для уведомления) красным цветом.
    # :assert: В поле "Согласие на осуществление рекламных рассылок" пустое значение (отображается "Выберите значение")
    # :step: Нажимаем "Завершить"
    # :assert: Отображается форма ошибки с "На форме имеются ошибки", под полем "Согласие на осуществление рекламных рассылок" отображается уведомление пользователю "Значение обязательно для заполнения"!"
    # :assert: На форме приcутствует ссылки на формирование документов "Печать согласия" и "Печать отзыва ранее предоставленного согласия". По нажатию на ссылку формируется соответствующий документ в pdf
    # :step: Указываем "Согласие на осуществление рекламных рассылок"
    value = 'Согласие получено'
    # :assert: Значения для выбора = значения из справочника ЕРК "Согласие на осуществление рекламных рассылок" (CONSENT_STATUS)
    # :step: Нажимаем "Завершить"
    # :assert: В ЕРК переданы и сохранены ФИО агента и дата в теги indDT и indAuthor
    # :assert: В ЕРК переданы значения параметра тип субъекта «typeSubject» = 3 (Индивидуальный предприниматель) и «typeSubject» = 2 (Безработный)в блоке места работы
    # :assert: Заявка поступает на автоматическое рассмотрение

    # :newpage: #######################################################################################################

    # :assert: Отправилось еmail инициатору заявки о положительном решении
    # :assert: По заявке установился статус "Готова к открытию счетов"
    # :assert: Осуществляется переход к задаче "Ввод параметров для формирования договоров"
    # :step: Выполняем задачу "Ввод параметров для формирования договоров"
    # :step: Заполняем поле "Код доверенности для СОГЛАШЕНИЯ"
    value = 'Доверенность...'
    # :step: Нажимаем кнопку "Завершить"
    # :step: Нажимаем кнопку "Завершить"
    # :assert: Сформированы два документа (Порядок расчетов, Соглашение о факторинге) в одном PDF файле и сохранены в параметры заявки (contract)

    # :newpage: #######################################################################################################

    # :assert: Инициатору заявки создается задача "Формирование и печать договоров" и осуществляется переход на форму "Формирование и печать договоров"
    # :assert: Документы (Порядок расчетов и Соглашение в одном PDF-файле) доступны для скачивания по ссылке «Скачать»
    # :assert: Кнопка "Завершить" неактивна до момента скачивания
    # :step: Скачиваем Договоры
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Создается задача "Подтверждение открытия и подписания договоров" и осуществляется переход на форму "Подтверждение открытия и подписания договоров"
    # :assert: Инициатору заявки задача недоступна
    # :step: Авторизируемся под пользователем semenov
    # :step: Выполняем задачу "Подтверждение открытия и подписания договоров"
    # :step: Проставляем чек-бокс "Документы подписаны"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Отправляется email пользователям из параметра issue_loan_inform_emails с текстом из параметра issue_loan_inform_emailBody
    # :assert: На заявке установился статус "Открыта в Forpost". Процесс завершился.
    # :assert: На параметрах клиента присутствуют параметры: ConsentStatus (Статус согласия) = CONSENT_ACCEPT, ConsentDate (Дата присвоения статуса) = <текущая дата>, ConsentPeriod (Срок действия соглашения) = 3600, ConsentAuthor (ФИО сотрудника, выполняющего актуализацию данных) = ФИО инициатора, ConsentDepart (Точка выдачи сотрудника) = location_sales (параметр Точка продаж пользователя)
    # :assert: На параметрах заявки присутсвуют параметры "Согласие" (ConsentAcceptReport) и "Отзыв согласия" (ConsentCancelReport), с сохраненными документами из заявки
    # :assert: В ЕРК сохранились параметры ConsentStatus = "CONSENT_ACCEPT", ConsentDate = <текущая дата>, ConsentPeriod = "3600", ConsentAuthor = ФИО пользователя, ConsentDepart = location_sales (параметр Точка продаж пользователя)

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_56910_5(app, credo_db):
    """
    {#
        :id:                56910_5
        :priority:          Средний
        :module:            Кредитование/фронт
        :description:       Оформление Карты Покупок. Проверка внесения изменений на форме "Ввод данных заявителя" - отсутствие поля дополнительного телефона, по которому с Вами можно связаться. (58486) Проверка передачи typeSubject в ЕРК без изменения
        :precondition:      Клиент существует в учетной системе банка
        :precondition:      Клиенту доступна заявка Карта покупок
        :precondition:      Пользователь ДБО авторизован, идентифицирован
        :precondition:      У клиента typeSubject = 4, По найму
        :source_point:      56910, 58486
        :comment:           
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 105 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 105 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSales'

    VARIANT = 'cart_pokup_ib'


    # :newpage: #######################################################################################################

    # :step: На форме "Заявки" нажимаем кнопку "Новая заявка"

    # :newpage: #######################################################################################################

    # :step: Выбираем вариант
    value = 'Оформление Карты Покупок'

    # :newpage: #######################################################################################################

    # :assert: На форме "Заявка на оформление Карты покупок" отсутствует поле "Дополнительный телефон, по которому с Вами можно связаться"
    # :step: Заполняем поле "Запрашиваемая сумма кредита"
    value = '500.00'
    # :step: Заполняем поле "Образование" выбором значения из выпадающего списка
    value = 'Высшее'
    # :step: Нажимаем на ссылку "Ознакомиться с предоставляемыми согласиями" и скачиваем отчет "Согласие на предоставление кредитного отчета (физическое лицо)"
    # :step: Заполняем поле "Сеансовый пароль" полученным при авторизации значением
    # :step: Нажимаем кнопку "Далее"

    # :newpage: ############################## Оферта ############################################################

    # :step: Заполняем чекбокс "Настоящим подтверждаю, что <текущая дата> ознакомлен и согласен..."
    # :step: Заполняем чекбокс "Договор об использовании карточки с предоставлением кредита в рамках банковского продукта «Карта Покупок» (далее – Договор об использовании карточки) мною полностью прочитан и его условия понятны."
    # :step: Заполняем чекбокс "Уведомлен, что сведения о заключенном Договоре об использовании карточки будут направлены Банком в Кредитный регистр Национального банка Республики Беларусь, ..."
    # :step: В блоке "Выберите способ получения карточки" нажимаем кнопку "В Банке"
    # :step: Заполняем поле "Местонахождение офиса банка" значением из выпадающего списка
    value = 'Минск'
    # :step: Заполняем поле "Офис выдачи карточки" значением из выпадающего списка
    value = 'Отдел розничных операций/г.Минск...'
    # :step: Заполняем радиобаттон раздела "Информирование по операциям"
    value = 'Отказаться от информирования'
    # :step: Заполняем поле "Пароль (например, девичья фамилия матери)"
    value = 'кот'
    # :step: Заполняем поле "Сеансовый пароль" полученным при авторизации значением
    # :step: Нажимаем кнопку "Отправить оферту банку"

    # :newpage: #######################################################################################################

    # :step: На форме завершения выпуска кредитной карточки нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: В ЕРК передано без изменений значение typeSubject ="4" (По найму)

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_56910_6(app, credo_db):
    """
    {#
        :id:                56910_6
        :priority:          Средний
        :module:            Кредитование/фронт
        :description:       ON-кредит за 5 минут. Проверка внесения изменений на форме "Ввод данных заявителя" - отсутствие поля дополнительного телефона, по которому с Вами можно связаться (58486) Проверка передачи typeSubject в ЕРК для видов занятости (По найму, передается typeSubject = 2)
        :precondition:      Клиенту доступна заявка Он-кредит
        :precondition:      Пользователь ДБО авторизован, идентифицирован
        :precondition:      На варианте параметр use_requested_principle = Нет
        :source_point:      56910, 58486
        :comment:           
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 105 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 105 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSales'

    VARIANT = 'OnCredit'


    # :newpage: #######################################################################################################

    # :step: На форме "Заявки" нажимаем кнопку "Новая заявка"

    # :newpage: #######################################################################################################

    # :step: Выбираем вариант
    value = 'ON-кредит за 5 минут'

    # :newpage: #######################################################################################################

    # :assert: На форме "Заявка на оформление ON-кредита" отсутствует поле "Дополнительный телефон, по которому с Вами можно связаться"
    # :step:  Заполняем Сумма Вашего среднемесячного дохода
    value = '2500'
    # :step:  Заполняем  Запрашиваемая сумма кредита
    value = '200'
    # :step:  Выбираем Вид занятости
    value = 'По найму'
    # :step:  Заполняем  Наименование предприятия
    value = 'Предприятие1'
    # :step:  Выбираем Должность
    value = 'Автокрановщик'
    # :step:  Заполняем "полных лет"
    value = '5'
    # :step:  Заполняем  "+ месяцев"
    value = '2'
    # :step:  Скачиваем согласия по ссылке "Ознакомиться с предоставляемыми согласиями"
    # :step:  Вводим Сеансовый пароль
    # :step:  Нажимаем "Далее"

    # :newpage: #######################################################################################################

    # :step:  Отмечаем чекбокс "Настоящим подтверждаю, что..."   
    # :step:  Отмечаем чекбокс "Соглашение на овердрафтное кредитование по счету..."
    # :step:  Заполняем поле "Сеансовый пароль" полученным при авторизации значением
    # :step:  Нажимаем "Отправить заявку банку"

    # :newpage: ###################################################################################################

    # :assert: В ЕРК передано значение typeSubject ="2" для вида занятости По найму

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_57120_13(app, credo_db):
    """
    {#
        :id:                57120_13
        :priority:          Средний
        :module:            Кредитование
        :description:       Факторинг. Параметр use_requested_principle = Да. По найму без справки, Собственник предприятия без справки. Форма «Ввод данных заявителя» . Поле область. Сохранение параметров на заявке.  Формы рассмотрения. Определение дохода заявителя (B) для расчета максимальной суммы кредита. 58486) Проверка передачи typeSubject в ЕРК для видов занятости (По найму с УНП не из спр. "Банки РБ", Собственник предприятия)
        :precondition:      Пользователь авторизирован в системе
        :precondition:      На пользователе параметр "Использование нового интерфейса" = "нет"
        :precondition:      Пользователь "Агент банка" с параметром forpost_code = 1435381
        :precondition:      В ФОРПОСТ у ЮЛ с кодом 14358381 два подходящих активных ген. договора факторинга (код 7042001 с датами 2021.12.05  - 2022.12.05, код 7041140 с датами 2021.12.09 - 2023.02.21)
        :precondition:      На варианте  параметр loanTerm=6 
        :precondition:      На варианте  параметр request_issue_point = part_ziko 
        :precondition:      На варианте  параметр request_issue_point_group = твАГЕН
        :precondition:      На варианте  параметр discount_percent = 10
        :precondition:      На варианте  параметр usedBKIparamAuto = нет 
        :precondition:      На варианте  параметр usedISSparamAuto=нет
        :precondition:      На варианте  параметр useAutomaticMovementScheme=нет
        :precondition:      На варианте  параметр  scoringAuto=100
        :precondition:      На варианте  параметр  scoringDiss=10 
        :precondition:      На варианте  параметр forms_check_required = да 
        :precondition:      На варианте  параметр print_contract_approveUsers содержит логин пользователя
        :precondition:      На варианте  параметр issue_loan_inform_emails = maslov@itwlocal.by;gulevich@itwlocal.by 
        :precondition:      На варианте  параметр interestRateLoan=2
        :precondition:      На варианте is_display_consent = нет
        :precondition:      На варианте параметр usedISSparamAuto = нет
        :precondition:      На варианте параметр usedBKIparamAuto = нет
        :precondition:      На варианте параметр useCalculationFormula = да
        :precondition:      На варианте параметр use_requested_principle = Да
        :precondition:      Адрес регистрации Клиента: Область - Брестская, Тип населенного пункта - город, Населенный пункт - Кобрин
        :precondition:      Адрес проживания Клиента: Совпадает с адресом регистрации
        :precondition:      Создана роль front_office_factoring_ziko с правами на Факторинг
        :precondition:      На пользователя назначены роли front_office_factoring_ziko, credit_expert, making_decision
        :precondition:      На варианте параметр general_crt_filter "Дата для анализа ген. договора факторинга" = 08.12.2021
        :precondition:      Клиент с кредитными договорами и со всеми основными параметрами
        :precondition:      (спр. income_type_activity)"Профессиональная, научная и техническая деятельность" = 1809.5
        :precondition:      (спр. income_type_activity)"Строительство" = 1689.30
        :precondition:      (спр. income_place_residence)"Витебская" = 1456.50
        :precondition:      (спр. income_place_residence)"Гродненская" = 1445
        :source_point:      57120, 58486
        :comment:           При определении генерального договора в БИС «Форпост» выбирается генеральный договор с датой открытия контракта большей или равной значению даты параметра «Дата для анализа ген. договора факторинга».
        :comment:           Условные обозначения в формулах расчета: A – предельная возможная сумма, рассчитанная по формуле; B – доход заявителя; C – среднемесячный объем погашений; D – срок кредита в месяцах для расчета суммы; E – процентная ставка по кредиту; F – количество месяцев для учета платежа по процентам; ПДН – предельный ПДН; G - возможная сумма кредита.
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 105 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 105 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'Factoring'

    VARIANT = 'factoring_ziko'


    # :newpage: #######################################################################################################

    # :step: В списке заявок нажимаем кнопку "Создать"
    # :step: Выбираем значение поля "Продукт"
    value = 'Факторинг'
    # :step: Выбираем значение поля "Вариант"
    value = 'Факторинг (Зико)'
    # :step: Нажимаем кнопку "Сохранить"

      # :newpage: #######################################################################################################

    # :step: Вводим личный номер Клиента
    value = '7811827A113PB5'
    # :step: Нажимаем кнопку "Завершить"
    # :step: Выбираем Тип заявки
    value = 'Новый кредит'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: в блоке "Адрес регистрации" заполняем поле "Населенный пункт"
    value = 'Минск'
    # :assert: в блоке "Адрес регистрации" поле "Область" программно очищено от значений и заблокировано со значением "Выберите значение"
    # :step: в блоке "Адрес регистрации" заполняем поле "Тип населенного пункта"
    value = 'Поселок'
    # :assert: в блоке "Адрес регистрации" поле "Область" разблокировано со значением "Выберите значение"
    # :assert: В блоке «Адрес регистрации» поле «Область» - выпадающий список значений на основе наименования строк справочника «Область»
    # :step: в блоке "Адрес регистрации" заполняем поле "Населенный пункт"
    value = 'Барановичи'
    # :step: Выбираем "Место проживания"
    value = 'Собственная квартира'
    # :assert: в блоке "Адрес регистрации" под полем "Область" выводится собщение "Значение обязательно для заполнения"
    # :step: Убираем чекбокс "Совпадает с адресом регистрации"
    # :step: в блоке "Адрес проживания" заполняем поле "Страна"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: в блоке "Адрес проживания" заполняем поле "Тип населенного пункта"
    value = 'Город'
    # :step: в блоке "Адрес проживания" заполняем поле "Населенный пункт"
    value = 'Минск'
    # :assert: в блоке "Адрес проживания" поле "Область" программно очищено от значений и заблокировано со значением "Выберите значение"
    # :step: в блоке "Адрес проживания" заполняем поле "Тип населенного пункта"
    value = 'Поселок'
    # :assert: в блоке "Адрес проживания" поле "Область" разблокировано со значением "Выберите значение"
    # :assert: В блоке «Адрес проживания» поле «Область» - выпадающий список значений на основе наименования строк справочника «Область»
    # :step: в блоке "Адрес проживания" заполняем поле "Населенный пункт"
    value = 'Слоним'
    # :step: Заполняем поле "Количество иждивенцев"
    value = '0'
    # :step: Заполняем поле "Вид занятости"(первое место работы)
    value = 'По найму'
    # :step: Заполняем поле "Источник дохода" (первое место работы)
    value = 'без справки'
    # :assert: под полем "Источник дохода" выводится поле "Вид деятельности" обязательно для заполнения
    # :assert: добавлено поле "Область, в которой находится место работы" обязательно для заполнения
    # :step: Заполняем поле "Среднемесячный доход к выдаче" (первое место работы)
    value = '3500'
    # :step: Заполняем поле "Предприятие" (первое место работы)
    value = 'Предприятие'
    # :step: Выбираем "Форма трудоустройства" (первое место работы)
    value = 'Контракт'
    # :step: Выбираем "Образование"
    value = 'Высшее'
    # :step: Выбираем "Должность"
    value = 'Автомаляр'
    # :step: Заполняем "Стаж на последнем месте работы (годы)"
    value = '10'
    # :step: Заполняем "Стаж на последнем месте работы (месяцы)"
    value = '3'
    # :step: Заполняем поле "УНП организации" не из спр. "Банки РБ" (первое место работы)
    value = '222222222'
    # :step: Заполняем поле "Вид занятости"(второе место работы)
    value = 'Собственник предприятия'
    # :step: Заполняем поле "Источник дохода" (второе место работы)
    value = 'без справки'
    # :assert: под полем "Источник дохода" выводится поле "Вид деятельности" обязательно для заполнения
    # :assert: добавлено поле "Область, в которой находится место работы" обязательно для заполнения
    # :step: Заполняем поле "Среднемесячный доход к выдаче" (первое место работы)
    value = '1000'
    # :step: Заполняем поле "Предприятие" (второе место работы)
    value = 'Предприятие-мое'
    # :step: Заполняем поле "Доля собственного участия, %" (второе место работы)
    value = '80'
    # :step: Выбираем "Образование" (второе место работы)
    value = 'Высшее'
    # :step: Выбираем "Стаж на последнем месте работы (годы)" (второе место работы)
    value = '10'
    # :step: Выбираем "Стаж на последнем месте работы (месяцы)" (второе место работы)
    value = '3'
    # :step: Заполняем поле "УНП организации" (второе место работы)
    value = '212222222'
    # :step:  Заполняем Наименование товара
    value = 'Товар1'
    # :step:  Заполняем Марка
    value = 'Марка1'
    # :step:  Заполняем Цена, бел. руб
    value = '5200'
    # :step:  Заполняем Количество, шт
    value = '1'
    # :step:  Заполняем Сумма первого взноса, бел. руб.
    value = '1500'
    # :step:  Заполняем Цена товара при продаже в рассрочку, бел. руб.
    value = '5200'
    # :step: Нажимаем кнопку "Завершить"
    # :assert: нет возможности перейти на следующую форму
    # :assert: в блоке "адрес регистрации" поле "Область" обязательно для заполнения 
    # :assert: в блоке "адрес проживания" поле "Область" обязательно для заполнения 
    # :assert: в блоке "Информация о трудоустройстве" (первое место работы) поле "Вид деятельности" обязательно для заполнения 
    # :assert: в блоке "Информация о трудоустройстве" (первое место работы) поле "Область, в которой находится место работы" обязательно для заполнения
    # :assert: в блоке "Информация о трудоустройстве" (второе место работы) поле "Вид деятельности" обязательно для заполнения 
    # :assert: в блоке "Информация о трудоустройстве" (второе место работы) поле "Область, в которой находится место работы" обязательно для заполнения
    # :step: в блоке "адрес регистрации" заполняем поле "Область"
    value = 'Брестская'
    # :step: в блоке "адрес проживания" заполняем поле "Область"
    value = 'Гродненская'
    # :assert:  поле «Вид деятельности» - выпадающий список значений на основе наименования строк справочника «Доход по виду деятельности»  
    # :step: в блоке "Информация о трудоустройстве" (первое место работы) заполняем  поле "Вид деятельности"
    value = 'Профессиональная, научная и техническая деятельность'
    # :assert:  поле «Область, в которой находится место работы *» -  выпадающий список значений на основе наименования строк справочника «Доход по области»
    # :step: в блоке "Информация о трудоустройстве" (первое место работы) заполняем  поле "Область, в которой находится место работы"
    value = 'Витебская'
    # :step: в блоке "Информация о трудоустройстве" (второе место работы) заполняем  поле "Вид деятельности"
    value = 'Строительство'
    # :step: в блоке "Информация о трудоустройстве" (второе место работы) заполняем  поле "Область, в которой находится место работы"
    value = 'Гомельская'
    # :step: Нажимаем кнопку "Завершить"
    # :assert: на заявке сохранены параметры: 
    # :assert: type_activity (Вид деятельности) = Профессиональная, научная и техническая деятельность
    # :assert: type_activity2 (Вид деятельности (второе место работы)) = Строительство
    # :assert: workplace_region (Область, в которой находится место работы ) = Витебская
    # :assert: workplace_region2 (Область, в которой находится место работы (второе место работы)) = Гомельская
    # :assert: income_type_activity (Доход по виду деятельности)= 1809,50 (значение из справочника "income_type_activity")
    # :assert: income_type_activity2 (Доход по виду деятельности (второе место работы)) = 1689,30 (значение из справочника "income_type_activity")
    # :assert: income_place_residence (Доход по месту жительства) = 1445 (значение из справочника "income_place_residence")
    # :assert: income_workplace (Доход по месту работы) = 1376,30 (значение из справочника "income_place_residence")
    # :assert: income_workplace2 (Доход по месту работы (второе место работы)) = 1456,50 (значение из справочника "income_place_residence")
    # :assert: income_minimum (Минимальный доход) = 1376,30 ((минимальное значение из следующих параметров: «Среднемесячный доход», «Доход по месту жительства», «Доход по виду деятельности», «Доход по месту работы»))
    # :assert: income_minimum2 (Минимальный доход (второе место работы)) = 1000 ((минимальное значение из следующих параметров: «Среднемесячный доход», «Доход по месту жительства (второе место работы)», «Доход по виду деятельности (второе место работы)», «Доход по месту работы (второе место работы)»))

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Завершить" на ф. "Формирование и печать документов"
    # :assert: В ЕРК переданы значения для видов занятости заявителя typeSubject="2" (По найму, с УНП не из справочника «Банки РБ») и typeSubject="2" (Собственник предприятия)
    # :assert: В стандартной формуле расчета максимальной суммы кредита (maxLimit) (Если В*ПДН - С <= B - БПМ, то A = (B * ПДН - C) / (1/D + E/F); Если В*ПДН - С > B - БПМ, то А = (B - БПМ) / (1/D + E/F)) и расчета ПДН ( =(G/D+G*E/F+C)/ B) значение «В» (доход заявителя) = income_minimum+income_minimum2 (2376,30) (см. request.log)
    # :assert: В ЕРК отсутствуют параметры: type_activity, type_activity2,  workplace_region, workplace_region2

    # :newpage: #######################################################################################################

    # :step: выполняем задачу "Общая форма кредитного эксперта"
    # :step: редактируем "Среднемесячный объем погашений" (вкладка "Проверка клиента в БКИ")
    value = '72,86'
    # :step: отмечаем чекбокс "Пересчитать данные"
    # :step: Нажимаем кнопку "Завершить"
    # :assert: в строке "Среднемесячный доход" выводится рассчитанное значение = 2 376,30 (income_minimum+income_minimum2)
    # :assert: во вкладке "Определить максимальную сумму кредита" в строке "Доход заявителя за вычетом обязательных платежей" выводится значение = 2 303,44 
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: на форму "Принятие решения о выдаче кредита" в строке "Совокупный подтвержденный доход " выводится рассчитанное значение = 2 376,30 (income_minimum+income_minimum2)
    # :assert: на форму "Принятие решения о выдаче кредита" в строке "Доход заявителя за вычетом обязательных платежей  " выводится рассчитанное значение = 2 303,44
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выполняем задачу "Ввод параметров для формирования договоров"  по тестовой заявке

    # :newpage: #######################################################################################################

    # :step:  Выбираем Код доверенности для СОГЛАШЕНИЯ
    value = 'Доверенность...'
    # :step: Нажимаем кнопку "Завершить" 

    # :newpage: #######################################################################################################

    # :step: Скачиваем Договор
    # :step: Нажимаем кнопку "Завершить" 

    # :newpage: #######################################################################################################

    # :step: Отмечаем Документы подписаны
    # :step: Нажимаем кнопку "Завершить" 
    # :assert: Заявка завершается исполнением. В ФОРПОСТ открыты ФК_СДЕЛКА , ФК_СОГЛАШЕНИЕ к  ФК_ГЕНЕРАЛЬНЫЙ_ДОГОВОР

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_57120_14(app, credo_db):
    """
    {#
        :id:                57120_14
        :priority:          Средний
        :module:            Кредитование
        :description:       Факторинг. Параметр use_requested_principle = Да. Два вида занятости: пенсионер по инвалидности (без справки) и ремесленник (со справкой).  Поля "Вид деятельности" , "Область, в которой находится место работы" отсутствуют на форме. Параметр issue_credit_pensioner = да. Определение дохода заявителя (B) для расчета максимальной суммы кредита. (58486) Проверка передачи typeSubject в ЕРК для видов занятости (Пенсионер по инвалидности, Ремесленник)
        :precondition:      Пользователь авторизирован в системе
        :precondition:      На пользователе параметр "Использование нового интерфейса" = "нет"
        :precondition:      Пользователь "Агент банка" с параметром forpost_code = 1435381
        :precondition:      В ФОРПОСТ у ЮЛ с кодом 14358381 два активных ген. договора факторинга (код 7042001 с датами 2021.12.05  - 2022.12.05, код 7041140 с датами 2021.12.09 - 2023.02.21)
        :precondition:      На варианте  параметр loanTerm=6 
        :precondition:      На варианте  параметр request_issue_point = part_ziko 
        :precondition:      На варианте  параметр request_issue_point_group = твАГЕН
        :precondition:      На варианте  параметр discount_percent = 10
        :precondition:      На варианте  параметр usedBKIparamAuto = нет 
        :precondition:      На варианте  параметр usedISSparamAuto=нет
        :precondition:      На варианте  параметр useAutomaticMovementScheme=нет
        :precondition:      На варианте  параметр  scoringAuto=100
        :precondition:      На варианте  параметр  scoringDiss=10 
        :precondition:      На варианте  параметр forms_check_required = да
        :precondition:      На варианте  параметр print_contract_approveUsers = содержит логин пользователя
        :precondition:      На варианте  параметр issue_loan_inform_emails = maslov@itwlocal.by;gulevich@itwlocal.by 
        :precondition:      На варианте  параметр interestRateLoan=2
        :precondition:      На варианте is_display_consent = нет
        :precondition:      На варианте параметр usedISSparamAuto = нет
        :precondition:      На варианте параметр usedBKIparamAuto = нет
        :precondition:      На варианте параметр useCalculationFormula = да
        :precondition:      На варианте параметр use_requested_principle = Да
        :precondition:      На варианте параметр issue_credit_pensioner = да
        :precondition:      Адрес регистрации Клиента: Область - Брестская, Тип населенного пункта - город, Населенный пункт - Кобрин
        :precondition:      Адрес проживания Клиента: Совпадает с адресом регистрации
        :precondition:      Создана роль front_office_factoring_ziko с правами на Факторинг
        :precondition:      На пользователя назначены роли front_office_factoring_ziko, credit_expert, making_decision
        :precondition:      На варианте параметр general_crt_filter "Дата для анализа ген. договора факторинга" = 08.12.2021
        :precondition:      Клиент с кредитными договорами и со всеми основными параметрами
        :precondition:      В справочнике stop_factor «Экономические параметры» значение Average_pension = 500
        :source_point:      57120, 58486
        :comment:           При определении генерального договора в БИС «Форпост» выбирается генеральный договор с датой открытия контракта большей или равной значению даты параметра «Дата для анализа ген. договора факторинга».
        :comment:           Проверен рассчет максимальной суммы кредита (maxLimit) и значение ПДН , если  issue_credit_pensioner = нет
        :comment:           Условные обозначения в формулах расчета: A – предельная возможная сумма, рассчитанная по формуле; B – доход заявителя; C – среднемесячный объем погашений; D – срок кредита в месяцах для расчета суммы; E – процентная ставка по кредиту; F – количество месяцев для учета платежа по процентам; ПДН – предельный ПДН; G - возможная сумма кредита.
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 105 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 105 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'Factoring'

    VARIANT = 'factoring_ziko'


    # :newpage: #######################################################################################################

    # :step: В списке заявок нажимаем кнопку "Создать"
    # :step: Выбираем значение поля "Продукт"
    value = 'Факторинг'
    # :step: Выбираем значение поля "Вариант"
    value = 'Факторинг (Зико)'
    # :step: Нажимаем кнопку "Сохранить"

    # :newpage: #######################################################################################################

    # :assert: Переходим на форму «Ввод ключевых данных заявителя», заявка доступна для офрмления
    # :step: Вводим личный номер Клиента
    value = '7811827A113PB5'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выбираем Тип заявки
    value = 'Новый кредит'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выбираем "Место проживания"
    value = 'Собственная квартира'
    # :step: Заполняем поле "Вид занятости"(первое место работы)
    value = 'Ремесленник'
    # :step: Заполняем поле "Источник дохода" (первое место работы)
    value = 'справка'
    # :assert: поля «Вид деятельности» и «Область, в которой находится место работы» отсутствуют
    # :step: Заполняем поле "Среднемесячный доход к выдаче" (первое место работы)
    value = '3500'
    # :step: Заполняем поле "Регистрационный номер справки" (первое место работы)
    value = '125'
    # :step: Заполняем поле "Дата регистрации справки" (первое место работы)
    value = '28.09.2022'
    # :step: Заполняем поле "Вид занятости"(второе место работы)
    value = 'Пенсионер по инвалидности'
    # :step: Заполняем поле "Источник дохода" (второе место работы)
    value = 'без справки'
    # :assert: под полем "Источник дохода" отсутствует поле "Вид деятельности" 
    # :assert: отсутствует поле "Область, в которой находится место работы" 
    # :step: Заполняем поле "Среднемесячный доход к выдаче" (второе место работы)
    value = '370'
    # :step:  Заполняем Наименование товара
    value = 'Товар1'
    # :step:  Заполняем Марка
    value = 'Марка1'
    # :step:  Заполняем Цена, бел. руб
    value = '5200'
    # :step:  Заполняем Количество, шт
    value = '1'
    # :step:  Заполняем Сумма первого взноса, бел. руб.
    value = '1500'
    # :step:  Заполняем Цена товара при продаже в рассрочку, бел. руб.
    value = '5200'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "ФОРМИРОВАНИЕ И ПЕЧАТЬ ДОГОВОРОВ" скачиваем Анкету и согласие клиента
    # :step: Нажимаем кнопку "Завершить"
    # :assert: параметр Клиента avg_month_amount = введенный "Среднемесячный доход к выдаче" (первое место работы) (3500)
    # :assert: на заявке income_minimum2 (Минимальный доход (второе место работы)) = минимальное значение из значений «Среднемесячный доход» и «Средний размер пенсии» (Average_pension) из справочника «Экономические параметры» (370)
    # :assert: В стандартной формуле расчета максимальной суммы кредита (maxLimit) (Если В*ПДН - С <= B - БПМ, то A = (B * ПДН - C) / (1/D + E/F); Если В*ПДН - С > B - БПМ, то А = (B - БПМ) / (1/D + E/F)) и расчета ПДН ( =(G/D+G*E/F+C)/ B) значение «В» (доход заявителя) = avg_month_amount+income_minimum2 (3870) (см. request.log)
    # :assert: В ЕРК переданы значения для видов занятости заявителя typeSubject="2" (Пенсионер по инвалидности) и typeSubject="2" (Ремесленник)

    # :newpage: #######################################################################################################

    # :step: выполняем задачу "Общая форма кредитного эксперта"
    # :step: редактируем "Среднемесячный объем погашений" (вкладка "Проверка клиента в БКИ")
    value = '72,86'
    # :step: отмечаем чекбокс "Пересчитать данные"
    # :step: Нажимаем кнопку "Завершить"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: на форму "Принятие решения о выдаче кредита" в строке "Совокупный подтвержденный доход " выводится рассчитанное значение = avg_month_amount+income_minimum2 (3870)
    # :assert: на форму "Принятие решения о выдаче кредита" в строке "Доход заявителя за вычетом обязательных платежей  " выводится рассчитанное значение = 3 797,14

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_57120_17(app, credo_db):
    """
    {#
        :id:                57120_17
        :priority:          Средний
        :module:            Кредитование/фронт
        :description:       Он-кредит за 5 минут. Параметр use_requested_principle = Да. Расчет максимальной суммы кредита. Индивидуальный предприниматель с зарплатными зачислениями за последние три месяца. (58486)Проверка передачи typeSubject в ЕРК для видов занятости (Индивидуальный предприниматель)
        :precondition:      Клиент ДБО авторизирован, идентифицирован
        :precondition:      На варианте параметр useAutomaticMovementScheme = "да"
        :precondition:      На варианте параметр forms_check_required = "нет"
        :precondition:      На варианте параметр usedISSparamAuto = нет
        :precondition:      На варианте параметр usedBKIparamAuto = нет
        :precondition:      На варианте параметр use_requested_principle = Да
        :precondition:      У Клиента есть зарплатные зачисления за последние три месяца
        :precondition:      У Клиента среднемесячный объем погашений = 0
        :source_point:      57120, 58486
        :comment:           Условные обозначения в формулах расчета: A – предельная возможная сумма, рассчитанная по формуле; B – доход заявителя; C – среднемесячный объем погашений; D – срок кредита в месяцах для расчета суммы; E – процентная ставка по кредиту; F – количество месяцев для учета платежа по процентам; ПДН – предельный ПДН; G - возможная сумма кредита.
        :comment:           Тестировалось с параметрами на варианте maxPDN = 40, loanTerm = 36, monthsInterestPayment = 12
        :comment:           Тестовый клиент с лн 4030987A091PB3
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 105 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 105 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSales'

    VARIANT = 'OnCredit'


    # :newpage: #######################################################################################################

    # :step: Создаем онлайн-заявку "ON-кредит за 5 минут"

    # :newpage: #######################################################################################################

    # :step: На форме ввода параметров кредита осуществляем выбор карт из списка карт пользователя
    # :step: поле "Сумма Вашего среднемесячного дохода" заполнено автоматически
    # :step: Заполняем поле "Запрашиваемая сумма кредита"
    value = '1500'
    # :step: Заполняем поле "Вид занятости"
    value = 'Индивидуальный предприниматель'
    # :assert: на форме отсутствует поле "Вид Вашей деятельности"
    # :assert: на форме отсутствует поле "Область, в которой находится Ваше место работы"
    # :step: Нажимаем на ссылку "Ознакомиться с предоставляемыми согласиями"
    # :step: Заполняем поле "Сеансовый пароль" полученным при авторизации значением
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: В бэк производится расчет  возможной суммы кредита.  В стандартной формуле расчета максимальной суммы кредита (maxLimit) (Если В*ПДН - С <= B - БПМ, то A = (B * ПДН - C) / (1/D + E/F); Если В*ПДН - С > B - БПМ, то А = (B - БПМ) / (1/D + E/F)) и расчета ПДН ( =(G/D+G*E/F+C)/ B) значение «В» (доход заявителя) = выведенная на форме "Сумма Вашего среднемесячного дохода" (значение, рассчитанное из зарплатных зачислений) (см. request.log)
    # :step: На форме с положительным решением отмечаем чекюбокс "Настоящим подтверждаю..."
    # :step: Отмечаем чекюбокс "Соглашение на овердрафтное..."
    # :step: Заполняем поле "Сеансовый пароль" полученным при авторизации значением
    # :step: Нажимаем кнопку "Отправить заявку в банк"

    # :newpage: ###################################################################################################

    # :assert: В ЕРК передано значение typeSubject ="3" для вида занятости Индивидуальный предприниматель(см. ibank.log)

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_57120_19(app, credo_db):
    """
    {#
        :id:                57120_19
        :priority:          Средний
        :module:            Кредитование/фронт
        :description:       Он-кредит за 5 минут. Параметр use_requested_principle = нет. Собственник предприятия. Определение дохода заявителя (B) для расчета максимальной суммы кредита. (58486)Проверка передачи typeSubject в ЕРК для видов занятости (Собственник предприятия)
        :precondition:      Клиент ДБО авторизирован, идентифицирован
        :precondition:      На варианте параметр useAutomaticMovementScheme = "да"
        :precondition:      На варианте параметр usedISSparamAuto = нет
        :precondition:      На варианте параметр usedBKIparamAuto = нет
        :precondition:      На варианте параметр use_requested_principle = нет
        :precondition:      На варианте параметр useCalculationFormula = да
        :precondition:      У Клиента отсутствуют зарплатные зачисления (Среднемесячный доход = 0)
        :precondition:      У Клиента среднемесячный объем погашений = 0
        :precondition:      Адрес регистрации Клиента: Область - Брестская, Тип населенного пункта - город, Населенный пункт - Барановичи
        :precondition:      Адрес проживания Клиента: Совпадает с адресом регистрации
        :precondition:      По клиенту отсутствуют сведения о трудоустройстве
        :source_point:      57120, 58486
        :comment:           Условные обозначения в формулах расчета: A – предельная возможная сумма, рассчитанная по формуле; B – доход заявителя; C – среднемесячный объем погашений; D – срок кредита в месяцах для расчета суммы; E – процентная ставка по кредиту; F – количество месяцев для учета платежа по процентам; ПДН – предельный ПДН; G - возможная сумма кредита.
        :comment:           тестовый клиент с лн 5100472M138PB5
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 105 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 105 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSales'

    VARIANT = 'OnCredit'


    # :newpage: #######################################################################################################

    # :step: Создаем онлайн-заявку "ON-кредит за 5 минут"

    # :newpage: #######################################################################################################

    # :step: На форме ввода параметров кредита осуществляем выбор карт из списка карт пользователя
    # :step: Заполняем поле "Сумма Вашего среднемесячного дохода"
    value = '3500'
    # :step: Заполняем поле "Запрашиваемая сумма кредита"
    value = '1500'
    # :step: Заполняем поле "Вид занятости"
    value = 'Собственник предприятия'
    # :assert: на форме отсутствует поле "Вид Вашей деятельности"
    # :assert: на форме отсутствует поле "Область, в которой находится Ваше место работы"
    # :step: Заполняем поле "Наименование предприятия"
    value = 'Продуктовый магазин'
    # :step: Заполняем поле "полных лет" (при необходимости)
    value = '10'
    # :step: Заполняем поле "+ месяцев" (при необходимости)
    value = '6'
    # :step: Нажимаем на ссылку "Ознакомиться с предоставляемыми согласиями"
    # :step: Заполняем поле "Сеансовый пароль" полученным при авторизации значением
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Заявка поступает в бэк на рассмотрение, производится расчет возможной суммы кредита. В стандартной формуле расчета максимальной суммы кредита (maxLimit) (Если В*ПДН - С <= B - БПМ, то A = (B * ПДН - C) / (1/D + E/F); Если В*ПДН - С > B - БПМ, то А = (B - БПМ) / (1/D + E/F)) и расчета ПДН ( =(G/D+G*E/F+C)/ B) значение «В» (доход заявителя) = введенная на форме "Сумма Вашего среднемесячного дохода" (см. request.log)
    # :step: На форме с положительным решением отмечаем чекюбокс "Настоящим подтверждаю..."
    # :step: Отмечаем чекюбокс "Соглашение на овердрафтное..."
    # :step: Заполняем поле "Сеансовый пароль" полученным при авторизации значением
    # :step: Нажимаем кнопку "Отправить заявку в банк"

    # :newpage: ###################################################################################################

    # :assert: В ЕРК передано значение typeSubject ="2" для вида занятости Собственник бизнеса(см. ibank.log)

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_57120_46(app, credo_db):
    """
    {#
        :id:                57120_46
        :priority:          Средний
        :module:            Кредитование
        :description:       Факторинг. Параметр use_requested_principle = Нет. Поле «Вид деятельности» не выводится на форму. Действует текущая реализация расчета максимальной суммы кредита. (58486) Проверка передачи typeSubject в ЕРК для видов занятости (Не изменяется место работы и вид занятости, Декретный отпуск)
        :precondition:      Пользователь авторизирован в системе
        :precondition:      На пользователе параметр "Использование нового интерфейса" = "нет"
        :precondition:      Пользователь "Агент банка" с параметром forpost_code = 1435381
        :precondition:      В ФОРПОСТ у ЮЛ с кодом 14358381 два активных ген. договора факторинга (код 7042001 с датами 2021.12.05  - 2022.12.05, код 7041140 с датами 2021.12.09 - 2023.02.21)
        :precondition:      На варианте  параметр loanTerm=6 
        :precondition:      На варианте  параметр request_issue_point = part_ziko 
        :precondition:      На варианте  параметр request_issue_point_group = твАГЕН
        :precondition:      На варианте  параметр discount_percent = 10
        :precondition:      На варианте  параметр usedBKIparamAuto = нет 
        :precondition:      На варианте  параметр usedISSparamAuto=нет
        :precondition:      На варианте  параметр useAutomaticMovementScheme=нет
        :precondition:      На варианте  параметр  scoringAuto=100
        :precondition:      На варианте  параметр  scoringDiss=10 
        :precondition:      На варианте  параметр forms_check_required = да 
        :precondition:      На варианте  параметр interestRateLoan=2
        :precondition:      На варианте is_display_consent = нет
        :precondition:      На варианте параметр usedISSparamAuto = нет
        :precondition:      На варианте параметр usedBKIparamAuto = нет
        :precondition:      На варианте параметр use_requested_principle = Нет
        :precondition:      Адрес регистрации регистрации Клиента: Область - Брестская, Тип населенного пункта - город, Населенный пункт - Кобрин
        :precondition:      Адрес проживания Клиента: Совпадает с адресом регистрации
        :precondition:      Создана роль front_office_factoring_ziko с правами на Факторинг
        :precondition:      На пользователя назначены роли front_office_factoring_ziko, credit_expert, making_decision
        :precondition:      На варианте параметр general_crt_filter "Дата для анализа ген. договора факторинга" = 08.12.2021
        :precondition:      Клиент с видом занятости Ремесленник (typeSubject = 2)
        :source_point:      57120, 58486
        :comment:           при определении генерального договора в БИС «Форпост» выбирается генеральный договор с датой открытия контракта большей или равной значению даты параметра «Дата для анализа ген. договора факторинга».
        :comment:           проверен рассчет максимальной суммы кредита (maxLimit) и значение ПДН , если  issue_credit_pensioner = нет
        :comment:           Условные обозначения в формулах расчета: A – предельная возможная сумма, рассчитанная по формуле; B – доход заявителя; C – среднемесячный объем погашений; D – срок кредита в месяцах для расчета суммы; E – процентная ставка по кредиту; F – количество месяцев для учета платежа по процентам; ПДН – предельный ПДН; G - возможная сумма кредита.
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 105 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 105 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'Factoring'

    VARIANT = 'factoring_ziko'


    # :newpage: #######################################################################################################

    # :step: В списке заявок нажимаем кнопку "Создать"
    # :step: Выбираем значение поля "Продукт"
    value = 'Факторинг (Зико)'
    # :step: Выбираем значение поля "Вариант"
    value = 'Факторинг'
    # :step: Нажимаем кнопку "Сохранить"

    # :newpage: #######################################################################################################

    # :step: Вводим личный номер Клиента
    value = '7811827A113PB5'
    # :step: Нажимаем кнопку "Завершить"
    # :step: Выбираем Тип заявки
    value = 'Новый кредит'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: поле Вид занятости предзаполнено и = "Ремесленник"
    # :step: Заполняем поле "Источник дохода" (первое место работы)
    value = 'без справки'
    # :assert: поля «Вид деятельности» и «Область, в которой находится место работы» отсутствуют
    # :step: Заполняем поле "Среднемесячный доход к выдаче" (первое место работы)
    value = '3500'
    # :step: Заполняем поле "Вид занятости" (второе место работы)
    value = 'Декретный отпуск'
    # :step: Заполняем поле "Источник дохода" (второе место работы)
    value = 'справка'
    # :step: Заполняем поле "Среднемесячный доход к выдаче" (второе место работы)
    value = '5/001'
    # :step: Заполняем поле "Регистрационный номер справки" (второе место работы)
    value = 'справка'
    # :step: Заполняем поле "Дата регистрации справки" (второе место работы)
    value = '12.10.2021'    
    # :step:  Выбираем Образование
    value = 'Высшее'(второе место работы)
    # :step:  Заполняем Наименование товара
    value = 'Товар1'
    # :step:  Заполняем Марка
    value = 'Марка1'
    # :step: Заполняем  Дата регистрации справки
    value = '01.12.2021'
    # :step:  Заполняем Цена, бел. руб
    value = '5200'
    # :step:  Заполняем Количество, шт
    value = '1'
    # :step:  Заполняем Сумма первого взноса, бел. руб.
    value = '1500'
    # :step:  Заполняем Цена товара при продаже в рассрочку, бел. руб.
    value = '5200'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "ФОРМИРОВАНИЕ И ПЕЧАТЬ ДОГОВОРОВ" скачиваем Анкету и согласие клиента
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Производен расчет  возможной суммы кредита.  В стандартной формуле расчета максимальной суммы кредита (maxLimit) (Если В*ПДН - С <= B - БПМ, то A = (B * ПДН - C) / (1/D + E/F); Если В*ПДН - С > B - БПМ, то А = (B - БПМ) / (1/D + E/F)) и расчета ПДН ( =(G/D+G*E/F+C)/ B) значение «В» (доход заявителя) = введенное значение "Среднемесячный доход к выдаче" по первому месту работы(3500) (см. request.log)
    # :assert: В ЕРК значение для первого первого места работу заявителя передается без изменения typeSubject="2"(Ремесленник), а для второго вида занятости передано значение typeSubject="2" (Декретный отпуск)

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_58486_1(app, credo_db):
    """
    {#
        :id:                58486_1
        :priority:          Средний
        :module:            Ядро
        :description:       Проверка создания нового справочника "Банки РБ"
        :precondition:      У пользователя СКЗ параметр useNewCabinet ("Использование нового интерфейса") = "да"
        :source_point:      58486
        :comment:           
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 109 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 107 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 107 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = ''

    VARIANT = ''


    # :newpage: #######################################################################################################

    # :step: Переходим в список справочников
    # :assert: В списке присутствует справочник с идентификатором "UNP_Bank" и наименованием "Банки РБ"
    # :step: Открываем список строк справочника

    # :newpage: #######################################################################################################

    # :assert: В списке присутствует строка с наименованием = ОАО "АСБ Беларусбанк", приоритетом = 1 и УНП = 100325912
    # :assert: В списке присутствует строка с наименованием = ОАО "Белагропромбанк", приоритетом = 2 и УНП = 100693551
    # :assert: В списке присутствует строка с наименованием = ОАО "Белагропромбанк" (доверительный управляющий), приоритетом = 3 и УНП = 102381397
    # :assert: В списке присутствует строка с наименованием = ОАО "Белинвестбанк", приоритетом = 4 и УНП = 807000028
    # :assert: В списке присутствует строка с наименованием = ОАО "Банк Дабрабыт", приоритетом = 5 и УНП = 807000002
    # :assert: В списке присутствует строка с наименованием = ОАО "Паритетбанк", приоритетом = 6 и УНП = 100233809
    # :assert: В списке присутствует строка с наименованием = ОАО "Сбер Банк", приоритетом = 7 и УНП = 100219673
    # :assert: В списке присутствует строка с наименованием = ОАО "Белгазпромбанк", приоритетом = 8 и УНП = 100429079
    # :assert: В списке присутствует строка с наименованием = ОАО "Банк БелВЭБ", приоритетом = 9 и УНП = 100010078
    # :assert: В списке присутствует строка с наименованием = "Приорбанк" ОАО, приоритетом = 10 и УНП = 100220190
    # :assert: В списке присутствует строка с наименованием = ЗАО "Альфа-Банк", приоритетом = 11 и УНП = 101541947
    # :assert: В списке присутствует строка с наименованием = ЗАО "Банк ВТБ (Беларусь)", приоритетом = 12 и УНП = 101165625
    # :assert: В списке присутствует строка с наименованием = ЗАО "МТБанк", приоритетом = 13 и УНП = 100394906
    # :assert: В списке присутствует строка с наименованием = ОАО "Технобанк", приоритетом = 14 и УНП = 100706562
    # :assert: В списке присутствует строка с наименованием = ОАО "БНБ-Банк", приоритетом = 15 и УНП = 100513485
    # :assert: В списке присутствует строка с наименованием = ЗАО "ТК Банк", приоритетом = 16 и УНП = 807000163
    # :assert: В списке присутствует строка с наименованием = ЗАО "БСБ Банк", приоритетом = 17 и УНП = 807000069
    # :assert: В списке присутствует строка с наименованием = ЗАО "РРБ-Банк", приоритетом = 18 и УНП = 100361187
    # :assert: В списке присутствует строка с наименованием = ЗАО "Банк "Решение", приоритетом = 19 и УНП = 100789114
    # :assert: В списке присутствует строка с наименованием = ЗАО "БТА Банк", приоритетом = 20 и УНП = 807000071
    # :assert: В списке присутствует строка с наименованием = ЗАО "АБСОЛЮТБАНК", приоритетом = 21 и УНП = 100331707
    # :assert: В списке присутствует строка с наименованием = ОАО "СтатусБанк", приоритетом = 22 и УНП = 807000043
    # :assert: В списке присутствует строка с наименованием = ЗАО "Цептер Банк", приоритетом = 23 и УНП = 807000214
    # :assert: В списке присутствует строка с наименованием = Представительство Сommerzbank АG (Германия), приоритетом = 24 и УНП = 100394722
    # :assert: В списке присутствует строка с наименованием = Представительство Межгосударственный банк, приоритетом = 25 и УНП = 102336693
    # :assert: В списке присутствует строка с наименованием = Представительство АО "Российский Сельскохозяйственный банк" (РФ), приоритетом = 26 и УНП = 102348366
    # :assert: В списке присутствует строка с наименованием = Представительство China Development Bank (КНР), приоритетом = 27 и УНП = 102395708

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


