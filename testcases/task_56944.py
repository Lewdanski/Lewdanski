@pytest.mark.skip(reason="Template")
def test_56944_1(app, db_credo):
    """
    {#
        :id:                56944_1
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка сохранения параметра заявки "Проверять клиента в KYC"
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "да"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    1
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: Заявка создана. В списке параметров заявки есть параметр "Проверять клиента в KYC" со значением "да"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_2(app, db_credo):
    """
    {#
        :id:                56944_2
        :priority:          Средний
        :module:            Ядро
        :description:       Проверка изменения названий полей
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ИП
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "да"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    7
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = ''
    VARIANT = ''

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :assert: Присутствует поле "Название"
    # :step: Заполняем поле "Название"
    value = 'ИПЕШНИКС'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента юридического лица" присутствует поле "Название"
    # :assert: На форме присутствует поле "Полное наименование"
    # :assert: На форме присутствует поле "Тип сектора экономики (форма собственности)"
    # :assert: На форме присутствует блок с названием "Сведения о гос.регистрации (последняя)
    # :assert: В блоке "Связанные субъекты" присутствует раздел с названием "Информация о связанном с ИП физическом лице"
    # :assert: На форме в блоке "Контакты" присутствует поле "Служебная информация"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_3(app, db_credo):
    """
    {#
        :id:                56944_3
        :priority:          Средний
        :module:            ЕФР
        :description:       Параметр «Проверять клиента в KYC» на заявке = «true» - переходить к задаче «Проверка клиента в KYC(Siron)»
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ИП
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "да"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: «Проверять клиента в KYC» на заявке = «да»
    # :step: На продукте/варианте меняем значение параметра doKyc ("Проверять клиента в KYC")
    value = 'нет'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'ИПЕШНИКС'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"
    # :assert: Осуществляется переход к задаче «Проверка клиента в KYC(Siron)» (В истории выполнения процесса создана задача "Проверка клиента в KYC(Siron)")


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_4(app, db_credo):
    """
    {#
        :id:                56944_4
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка изменения цвета кнопок в стиле ЕФР. Проверка действий по кнопке "Далее" на форме «Заведение/актуализация карточки лица, осуществляющем руководство бухгалтерским учетом».
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ИП
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      Системная дата 23.03.2022
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      20
        :count_of_check:    8
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :assert: Присутствует поле "Название"
    # :step: Заполняем поле "Название"
    value = 'ИПЕШНИКС'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем кнопку "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "УНП/Идент. номер нерез."
    value = '845613246'
    # :step: В поле "Организационно-правовая форма клиента" выбираем значение
    value = 'ООО'
    # :step: Заполняем поле "Название"
    value = 'Моя оборона'
    # :step: В поле "Тип субъекта" выбираем значение
    value = 'страховые организации'
    # :step: В поле "Оргструктура" выбираем значение
    value = '10-Юридические лица'
    # :step: В поле "Тип сектора экономики" выбираем значение
    value = 'ИМУЩЕСТВО ГРАЖДАН'
    # :step: В поле "Основной вид деятельности (ОКЭД)" нажимаем на кнопку "+" и выбираем значение
    value = 'Выращивание грибов'
    # :step: Заполняем поле "Количество сотрудников"
    value = '5000'
    # :step: Заполняем поле "Сумма"
    value = '99999'
    # :step: В поле "Валюта" выбираем значение
    value = 'Доллар США'
    # :step: В поле "Клиентский блок" выбираем значение
    value = 'Малый бизнес'
    # :step: В поле "Объем выручки" выбираем значение
    value = 'До 3 млн.USD'
    # :step: В поле "Страна" выбираем значение
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: В блоке "Почтовый адрес" заполняем чек-бокс "Аналогично месту регистрации"
    # :step: Заполняем поле "Наименование регистрирующего органа"
    value = 'самый главный орган'
    # :step: В поле "Наименование документа о регистрации" выбираем значение
    value = 'Устав'
    # :step: Заполняем поле "Дата регистрации"
    value = '10.03.2022'
    # :step: Заполняем поле "Регистрационный номер"
    value = '789789789'
    # :step: Заполняем поле "Мобильный телефон контактного лица"
    value = '+375259663388'
    # :assert: Поле "Дата идентификации ПОД/ФТ" обязательно для заполнения
    # :step: Заполняем поле "Дата идентификации ПОД/ФТ" текущей датой
    value = '23.02.2022'
    # :step: В поле "Ответственное подразделение" выбираем значение
    value = 'Отдел сопровождения БПК'
    # :assert: Кнопки "Добавить сведения о счете", "Добавить сведения бенифициарного владельца", "Информация о руководителе отсутствует" и "Информация о лице, осуществляющем руководство бухгалтерским учетом отсутствует" оранжевого цвета (в стиле ЕФР)
    # :step: Нажимаем на кнопку "Информация о лице, осуществляющем руководство бухгалтерским учетом отсутствует"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки лица, осуществляющем руководство бухгалтерским учетом" заполняем поле "Личный номер"
    value = '7002915A987PB4'
    # :assert: Кнопка "Поиск карточки клиента" оранжевого цвета (в стиле ЕФР)
    # :step: Нажимаем на кнопку "Поиск карточки клиента"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Заведение/актуализация карточки лица, осуществляющем руководство бухгалтерским учетом" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Проверки лица, осуществляющего руководство бухгалтерским учетом, выполнены успешно. Переходим на форму задачи «Реквизиты клиента юридического лица» и устанавливается статус на заявке «Ввод параметров клиента»
    # :assert: На форме "Реквизиты клиента юридического лица" кнопка "Изменить связь" в блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" оранжевого цвета (в стиле ЕФР)
    # :step: Нажимаем на кнопку "Информация о руководителе отсутствует"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки руководителя" заполняем поле "Личный номер"
    value = '7002915A987PB4'
    # :assert: Кнопка "Поиск карточки клиента" оранжевого цвета (в стиле ЕФР)
    # :step: Нажимаем на кнопку "Поиск карточки клиента"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Заведение/актуализация карточки руководителя" нажимаем кнопку "Далее"
    # :assert: На форме "Реквизиты клиента юридического лица" кнопка "Изменить связь" в блоке "Информация о руководителе" оранжевого цвета (в стиле ЕФР)


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_5(app, db_credo):
    """
    {#
        :id:                56944_5
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка валидации полей "УНП/Идент. номер нерез.", "Название"
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК тестовый клиент ЮЛ имеет запрещенные символы в Названии(моя оборона;) и в Полном наименовании (ОТКРЫТОЕ АКЦИОНЕРНОЕ ОБЩЕСТВО моя оборона:). Страна регистрации, почтового адреса Беларусь. E-mail = нет. Иной E-mail = нет. Адрес сайта в интернете = нет.
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      Системная дата 23.03.2022
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      30
        :count_of_check:    29
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента" отличное от "РЕСПУБЛИКА БЕЛАРУСЬ"
    value = 'АВСТРАЛИЯ'
    # :step: Нажимаем кнопку "Поиск"
    # :assert: Отображается сообщение "Заполните одно из полей для поиска: 'УНП/Идент. номер нерез.' или 'Название'"
    # :step: В поле "УНП/Идент. номер нерез." вводим текстовое значение из 101 символа
    value = '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: Поле "УНП/Идент. номер нерез." заполнилось значением из 100 символов
    # :step: Заполняем поле "Название"
    value = 'Юрец'
    # :step: Нажимаем кнопку "Поиск"
    # :assert: Отображается сообщение "Поиск можно совершить по учетному номеру налогоплательщика либо по названию"
    # :step: В поле "Наименование страны регистрации клиента" меняем значение
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: В поле "УНП/Идент. номер нерез." вводим числовое значение из 8 символов
    value = '11111111'
    # :assert: Выводится сообщение "Неверный формат"
    # :step: В поле "УНП/Идент. номер нерез." вводим числовое значение из 10 символов
    value = '1111111111'
    # :assert: Выводится сообщение "Неверный формат"
    # :step: В поле "УНП/Идент. номер нерез." вводим числовое значение из 9 символов
    value = '111111111'
    # :assert: Сообщение об ошибке отсутствует
    # :step: Заполняем поле "УНП/Идент. номер нерез." пустым значением
    # :step: Заполняем поле "Название"
    value = 'МОЯ ОБОРОНА%'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента юридического лица" под полем  "Название" отображается сообщение "Неверный формат"
    # :assert: На форме "Реквизиты клиента юридического лица" под полем  "Полное наименование" отображается сообщение "Неверный формат"
    # :assert: В блоках "Адрес регистрации", "Почтовый адрес" чек-бокс не установлен (по умолчанию)
    # :assert: В блоке "Контакты" в полях "E-mail", "Иной E-mail", "Адрес сайта в интернете" установлены чек-боксы "Нет". Поля неактивны.
    # :step: На форме "Реквизиты клиента юридического лица" в поле "Название" вводим значение из 501 символов
    value
    # :assert: Поле "Название" заполнилось значением из 500 символов
    # :step: В поле "Название" вводим валидные
    value = 'УЦ HR 123 "-+().,=№/\'
    # :step: В поле "Полное наименование" вводим значение из 501 символов
    value
    # :assert: Поле "Полное наименование" заполнилось значением из 500 символов
    # :step: В поле "Полное наименование" вводим валидные символы
    value = 'УЦ HR 123 "-+().,=№/\'
    # :step: Нажимаем на поле "Тип сектора экономики (форма собственности)"
    # :assert: Выпадающий список значений сформирован в виде дерева из значений полученных из справочника ЕРК. Для выбора доступны значения только нижнего уровня иерархии.
    # :step: Заполняем поле "Сумма" значением
    value = '750'
    # :assert: Выводится сообщение "Неверный формат"
    # :step: Заполняем поле "Сумма" значением
    value = '750.1'
    # :assert: Выводится сообщение "Неверный формат"
    # :step: Заполняем поле "Сумма" значением
    value = '750,1'
    # :assert: Выводится сообщение "Неверный формат"
    # :step: Заполняем поле "Сумма" значением
    value = '750.10'
    # :assert: Сообщение об ошибке отсутствует
    # :step: В поле "Страна" блока "Место регистрации" выбираем значение
    value = 'Австралия'
    # :assert: Поле "Нестандартный адрес" отсутствует
    # :step: В поле "Страна" выбираем значение
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :assert: Отображается поле "Нестандартный адрес", чек-бокс по умолчанию не заполнен
    # :step: Заполняем чек-бокс "Нестандартный адрес"
    # :step: В поле "Область" вводим значение из 121 символов
    value = '1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: Поле "Область" заполнилось значением из 120 символов
    # :step: В поле "Район" вводим значение из 151 символов
    value = '1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: Поле "Район" заполнилось значением из 150 символов
    # :step: В поле "Сельсовет" вводим значение из 129 символов
    value = '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: Поле "Сельсовет" заполнилось значением из 128 символов
    # :step: В поле "Населенный пункт" вводим значение из 251 символа
    value = '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: Поле "Населенный пункт" заполнилось значением из 250 символов
    # :step: В поле "Страна" блока "Почтовый адрес" выбираем значение
    value = 'Австралия'
    # :assert: Поле "Нестандартный адрес" не отображается
    # :step: В блоке "Почтовый адрес" устанавливаем чек-бокс "Аналогично месту регистрации"
    # :step: Пытаемся ввести в поле "Дата регистрации" блока "Сведения о гос.регистрации (первичная)" дату больше текущей
    # :assert: В блоке "Сведения о гос. регистрации (первичная)" в поле "Дата регистрации" нельзя ввести дату больше 23.03.2022
    # :step: Пытаемся ввести в поле "Дата регистрации" блока "Сведения о гос.регистрации (последняя)" дату больше текущей
    # :assert: В блоке "Сведения о гос. регистрации (последняя)" в поле "Дата регистрации" нельзя ввести дату больше 23.03.2022
    # :step: Снять отметку в  чек-боксе "Нет" для поля "E-mail"
    # :step: Заполняем поле "E-mail"
    value = 'test@itw.by'
    # :step: Снять отметку в  чек-боксе "Нет" для поля "Иной E-mail"
    # :step: Заполняем поле "Иной E-mail"
    value = 'test1@itw.by'
    # :step: Снять отметку в чек-боксе "Нет" для поля "Адрес сайта в интернете"
    # :step: Заполняем поле "Адрес сайта в интернете"
    value = 'www.testitw.by'
    # :step: Установить отметку в чек-боксе "Нет" для поля "Адрес сайта в интернете"
    # :assert: Поля "E-mail", "Иной E-mail" и "Адрес сайта в интернете" стали неактивными
    # :step: Нажимаем кнопку "Добавить бенифициарного владельца"
    # :step: Заполняем поле "Имя латинскими буквами" 71 символами
    value = 'Z-ZZ'ZZ ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ'
    # :assert: Водится только 70 символов всегда в верхнем регистре и только латиницей
    # :step: Заполняем поле "Имя латинскими буквами"
    value = ' AL LS'
    # :assert: Выводится сообщение "Неверный формат"
    # :step: Заполняем поле "Фамилия латинскими буквами"
    value = 'AL LS '
    # :assert: Выводится сообщение "Неверный формат"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_6(app, db_credo):
    """
    {#
        :id:                56944_6
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка отсутствия блоков "Согласия" и "Подключение к ДБО" на форме "Заведение/актуализация карточки связанного с ИП физического лица"
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствуют тестовый клиент ИП
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    1
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'ИПЕШНИКС'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: В блоке "Информация о связанном с ИП физическом лице" нажимаем на карточку ФЛ
    # :assert: На форме "Заведение/актуализация карточки связанного с ИП физического лица" отсутствуют блоки "Согласия" и "Подключение к ДБО"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_7(app, db_credo):
    """
    {#
        :id:                56944_7
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка обязательности заполнения полей "Имя латинскими буквами" и "Фамилия латинскими буквами" если страна гражданства отличная от BY или RU
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ЮЛ. Руковидитель гражданин РБ
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    4
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'МОЯ ОБОРОНА%'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: В блоке "Информация о руководителе" нажимаем на карточку ФЛ

    # :newpage: #######################################################################################################

    # :step: На форме "Заведение/актуализация карточки руководителя" в поле "Гражданство" выбираем значение
    value = 'АВСТРАЛИЯ'
    # :step: Нажимаем кнопку "Далее"
    # :assert: Появилось сообщение об ошибке с текстом "На форме имеются ошибки", кнопка "Далее" не активна
    # :assert: Поля "Имя латинскими буквами" и "Фамилия латинскими буквами" обязательны для заполнения
    # :step: В поле "Гражданство" выбираем значение
    value = 'РОССИЙСКАЯ ФЕДЕРАЦИЯ'
    # :assert: Поля "Имя латинскими буквами" и "Фамилия латинскими буквами" необязательны для заполнения
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Выполнен переход на форму "Реквизиты клиента юридического лица"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_8(app, db_credo):
    """
    {#
        :id:                56944_8
        :priority:          Средний
        :module:            ЕФР
        :description:       Формирование «Анкеты вопросника для клиента – организации»
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовое ЮЛ
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'МОЯ ОБОРОНА'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Подтверждение статуса проверки клиента" отображается ссылка для скачивания "Анкета вопросник для клиента - организации"
    # :step: Скачиваем документ "Анкета вопросник для клиента - организации"
    # :assert: Сформировался файл с печатной формой "ВОПРОСНИК ДЛЯ КЛИЕНТА–ОРГАНИЗАЦИИ"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_9(app, db_credo):
    """
    {#
        :id:                56944_9
        :priority:          Средний
        :module:            ЕФР
        :description:       ЮЛ. В блоке «KYC статус:»  - отображаются статусы по субьектам, полученные в задаче «Проверка клиента в KYC(Siron)»
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовое ЮЛ
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "да"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У ЮЛ имеются данные руководителя и бенефициарных владельцев
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'МОЯ ОБОРОНА'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Выполнилась проверка KYC для клиента, руководителя и бенефициарных владельцев
    # :assert: На форме "Подтверждение статуса проверки клиента" в блоке "KYC статус:" отображаются статусы по субъектам, полученные в задаче «Проверка клиента в KYC(Siron)» (для клиента, руководителя и бенефициарного владельца = Совпадений нет после проверки)


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)



@pytest.mark.skip(reason="Template")
def test_56944_10(app, db_credo):
    """
    {#
        :id:                56944_10
        :priority:          Средний
        :module:            ЕФР
        :description:       ИП. В блоке «KYC статус:» - отображаются статусы по субьектам, полученные в задаче «Проверка клиента в KYC(Siron)»
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствуют тестовый ИП
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "да"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У ЮЛ имеются данные связанного с ИП физического лица
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'ИПЕШНИКС'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Выполнилась проверка KYC для клиента и связанного физического лица
    # :assert: На форме "Подтверждение статуса проверки клиента" в блоке «KYC статус:» отображаются статусы по субьектам, полученные в задаче «Проверка клиента в KYC(Siron)» (KYC статус для клиента и связанного физического лица = Совпадений нет после проверки)


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_11(app, db_credo):
    """
    {#
        :id:                56944_11
        :priority:          Средний
        :module:            ЕФР
        :description:       ЮЛ. В блоке «KYC статус:»  по всем субъектам статус «Запрос в KYC не выполнялся».
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствуют юридические лица
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "нет"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У ЮЛ имеются данные руководителя и бенефициарных владельцев
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    1
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'МОЯ ОБОРОНА'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Подтверждение статуса проверки клиента" KYC статус для клиента, руководителя и бенефициарного владельца = Запрос в KYC не выполнялся


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)



@pytest.mark.skip(reason="Template")
def test_56944_12(app, db_credo):
    """
    {#
        :id:                56944_12
        :priority:          Средний
        :module:            ЕФР
        :description:       ИП. В блоке «KYC статус:» по всем субъектам отобразить статус «Запрос в KYC не выполнялся».
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствуют тестовый клиент ИП.
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "нет"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У ЮЛ имеются данные связанного с ИП физического лица
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    1
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'ИПЕШНИКС'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Подтверждение статуса проверки клиента" KYC статус для клиента и связанного физического лица = Запрос в KYC не выполнялся


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_13(app, db_credo):
    """
    {#
        :id:                56944_13
        :priority:          Средний
        :module:            Ядро
        :description:       Проверка создания новых параметров
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      Пользователь авторизирован в СКЗ
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = ''
    VARIANT = ''

    # :newpage: #######################################################################################################

    # :step: Переходим в список продуктов
    # :step: Переходим в список параметров продукта changing_customer

    # :newpage: #######################################################################################################

    # :assert: В списке параметров присутствует текстовый параметр "kyc_emails" (Список адресов email УФМ для рассылки уведомлений о совпадении в Siron KYC)

    # :newpage: #######################################################################################################

    # :step: Переходим в список вариантов
    # :step: Переходим в список параметров варианта CORPORATEFIND

    # :newpage: #######################################################################################################

    # :assert: В списке параметров продукта "CORPORATEFIND" присутствует текстовый параметр "kyc_emails" (Список адресов email УФМ для рассылки уведомлений о совпадении в Siron KYC)


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_14(app, db_credo):
    """
    {#
        :id:                56944_14
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка получения из Siron статуса "check" = На проверке УФМ (произошло совпадение)  и отправки email на адреса из параметра «Список адресов email УФМ для рассылки уведомлений о совпадении в Siron KYC»
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ЮЛ
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "да"
        :precondition:      Пользователь авторизирован в СКЗ (Левданский Александр Вячеславович. Телефон: +375336435645)
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У ЮЛ имеются данные руководителя и бенефициарных владельцев
        :precondition:      Параметр kyc_emails на продукте/варианте заполнен значениями kosovec@itwlocal.by;maslov@itwlocal.by
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      20
        :count_of_check:    4
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: создалась заявка №2451416
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'МОЯ ОБОРОНА'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Добавить бенифициарного владельца"
    # :step: Заполняем поле "Фамилия"
    value = 'Лукашенко'
    # :step: Заполняем поле "Имя"
    value = 'Александр'
    # :step: Нажимаем кнопку "Добавить"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Подтверждение статуса проверки клиента" KYC статус для бенефициарного владельца "Лукашенко Александр" = На проверке УФМ (произошло совпадение)
    # :assert: Пользователям kosovec и maslov отправлены сообщения с темой «Совпадение в ЕФР со списками по заявке №2451416 и с текстом "Произошло совпадение в ЕФР со списками [Бенифициар] АЛЕКСАНДР ЛУКАШЕНКО с ID 2451469_5386c476. Работник банка: Левданский Александр Вячеславович. Телефон: +375336435645."
    # :assert: На форме отображаются кнопки "Отмена" и "Проверить статус"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_15(app, db_credo):
    """
    {#
        :id:                56944_15
        :priority:          Средний
        :module:            ЕФР
        :description:       На проверке УФМ произошло совпадение. Рассылка рассылки уведомлений о совпадении в Siron KYC не осуществляется.
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ЮЛ
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "да"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У ЮЛ имеются данные руководителя и бенефициарных владельцев
        :precondition:      Параметр kyc_emails на продукте/варианте не заполнен
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      20
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'МОЯ ОБОРОНА'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Добавить бенифициарного владельца"
    # :step: Заполняем поле "Фамилия"
    value = 'Лукашенко'
    # :step: Заполняем поле "Имя"
    value = 'Александр'
    # :step: Нажимаем кнопку "Добавить"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Подтверждение статуса проверки клиента" KYC статус для бенефициарного владельца "Лукашенко Александр" = На проверке УФМ (произошло совпадение)
    # :assert: Рассылка уведомлений о совпадении в Siron KYC отсутствует, ошибки нет


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_16(app, db_credo):
    """
    {#
        :id:                56944_16
        :priority:          Средний
        :module:            ЕФР
        :description:       Из Siron получен статус «block», но в поле «Комментарий» не определены слова permit или block обрабатыватся ситуация как будто получен комментарий «block». Отображение текста «Произошла ошибка KYC статуса. Свяжитесь с УФМ»
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ЮЛ
        :precondition:      по тестовому бенифициарному  владельцу из Siron получен статус «block» и в поле «Комментарий» не определены слова permit или block
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "да"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У ЮЛ имеются данные руководителя и бенефициарных владельцев
        :precondition:      Параметр kyc_emails на продукте/варианте заполнен значениями kosovec@itwlocal.by;maslov@itwlocal.by
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :comment:           Для моделирования данной ситуации отправляли kycStatus заявки банку чтобы нам пришёл статус "block" + Комментарий без permit или block
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      20
        :count_of_check:    3
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'МОЯ ОБОРОНА'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Добавить бенифициарного владельца"
    # :step: Заполняем поле "Фамилия"
    value = 'Лукашенко'
    # :step: Заполняем поле "Имя"
    value = 'Александр'
    # :step: Нажимаем кнопку "Добавить"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Подтверждение статуса проверки клиента" KYC статус для бенефициарного владельца "Лукашенко Александр" = Произошло совпадение УФМ (принято решение о блокировке) - как для статуса «block» + текст «block» в начале строки поля «Комментарий» ответа KYC
    # :assert: На форме отображается ошибка с текстом "Произошла ошибка KYC статуса. Свяжитесь с УФМ."
    # :assert: На форме отображаются кнопки "Завершить" и "Отмена"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_17(app, db_credo):
    """
    {#
        :id:                56944_17
        :priority:          Средний
        :module:            ЕФР
        :description:       Ошибка проверки клиента в KYC(Siron). Проверка отображения текста "Ошибка проверки клиента в KYC(Siron)", доступности задачи с ошибкой, отправки email пользователям с ролью admins.
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ЮЛ
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "да"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У ЮЛ имеются данные руководителя и бенефициарных владельцев
        :precondition:      Пользователь levdanskij авторизирован
        :precondition:      Пользователь levdanskij инициатор заявки
        :precondition:      Пользователь levdanskij без роли admins
        :precondition:      Пользователь maslov с ролью admins
        :precondition:      Пользователь kosovec без роли admins
        :precondition:      Для получения ошибки сервиса KYC удаляем несколько строк в файле KYCGetScorePersons_in.xsl
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      20
        :count_of_check:    10
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: создается заявка с №2451469
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'МОЯ ОБОРОНА'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме выводится ошибка с текстом "Ошибка проверки клиента в KYC(Siron)"
    # :assert: Статус заявки "Ошибка проверки клиента в KYC(Siron)"
    # :assert: Задача доступна пользователям levdanskij и maslov
    # :assert: Задача не доступна пользователю kosovec
    # :assert: Пользователю maslov отправлено сообщение об ошибке с темой "Ошибка проверки клиента в KYC(Siron) по заявке 2451469" с текстом "Ошибка сервиса"
    # :assert: Пользователям levdanskij и kosovec сообщения не отправлены
    # :step: Нажимаем кнопку "Завершить"
    # :assert: Запрос повторяется с результатом Ошибка проверки клиента в KYC(Siron)
    # :step: Возвращаем удалённые строки в файле KYCGetScorePersons_in.xsl
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Запрос повторяется, выполнилась проверка KYC для клиента, руководителя и бенефициарных владельцев
    # :assert: На форме "Подтверждение статуса проверки клиента" в блоке "KYC статус:" отображаются статусы по субъектам, полученные в задаче «Проверка клиента в KYC(Siron)» (для клиента, руководителя и бенефициарного владельца = Совпадений нет после проверки)


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_18(app, db_credo):
    """
    {#
        :id:                56944_18
        :priority:          Средний
        :module:            ЕФР
        :description:       Действие по кнопке "Назад" в зависимости от формы для клиента ЮЛ
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ЮЛ
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      20
        :count_of_check:    14
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'МОЯ ОБОРОНА'
    # :step: Нажимаем кнопку "Поиск"
    # :assert: Задача в статусе "Поиск карточки клиента"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров клиента"
    # :step: В блоке "Информация о руководителе" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров связанного субъекта"
    # :assert: Блоки «Согласия» и «Подключение к ДБО» не отображаются на форме "Заведение/актуализация карточки руководителя"
    # :step: Нажимаем кнопку "Назад"

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров клиента"
    # :step: В блоке "Информация о руководителе" нажимаем кнопку "Изменить связь"

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров связанного субъекта"
    # :step: На форме "Поиск карточки руководителя" вводим личный номер
    value = '7002915A987PB4'
    # :step: Нажимаем кнопку "Поиск карточки клиента"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров связанного субъекта"
    # :step: Нажимаем кнопку "Назад"

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Поиск карточки связанного субъекта"
    # :step: Нажимаем кнопку "Назад"

    # :newpage: #######################################################################################################

    # :step: В блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров связанного субъекта"
    # :assert: Блоки «Согласия» и «Подключение к ДБО» не отображаются на форме "Заведение/актуализация карточки лица, осуществляющем руководство бухгалтерским учетом"
    # :step: Нажимаем кнопку "Назад"

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров клиента"
    # :step: В блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" нажимаем кнопку "Изменить связь"

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров связанного субъекта"
    # :step: На форме "Поиск карточки лица, осуществляющем руководство бухгалтерским учетом" вводим личный номер
    value = '7002915A987PB4'
    # :step: Нажимаем кнопку "Поиск карточки клиента"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров связанного субъекта"
    # :step: Нажимаем кнопку "Назад"

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Поиск карточки связанного субъекта"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_19(app, db_credo):
    """
    {#
        :id:                56944_19
        :priority:          Средний
        :module:            ЕФР
        :description:       Действие по кнопке "Назад" в зависимости от формы для клиента ИП
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ИП
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      20
        :count_of_check:    8
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'ИПЕШНИКС'
    # :step: Нажимаем кнопку "Поиск"
    # :assert: Задача в статусе "Поиск карточки клиента"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров клиента"
    # :step: В блоке "Информация о связанном с ИП физическом лице" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров связанного субъекта"
    # :assert: Блоки «Согласия» и «Подключение к ДБО» не отображаются на форме "Заведение/актуализация карточки связанного с ИП физического лица"
    # :step: Нажимаем кнопку "Назад"

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров клиента"
    # :step: В блоке "Информация о связанном с ИП физическом лице" нажимаем кнопку "Изменить связь"

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров связанного субъекта"
    # :step: На форме "Поиск карточки связанного с ИП физического лица" вводим личный номер
    value = '7002915A987PB4'
    # :step: Нажимаем кнопку "Поиск карточки клиента"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров связанного субъекта"
    # :step: Нажимаем кнопку "Назад"

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Поиск карточки связанного субъекта"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_20(app, db_credo):
    """
    {#
        :id:                56944_20
        :priority:          Средний
        :module:            ЕФР
        :description:       Параметр «Проверять клиента в KYC» на заявке = «false» - переходить к задаче «Сохранение связанных субъектов»
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ИП
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "нет"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: «Проверять клиента в KYC» на заявке = «нет»
    # :step: На продукте/варианте меняем значение параметра doKyc ("Проверять клиента в KYC")
    value = 'да'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'ИПЕШНИКС'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"
    # :assert: Осуществляется переход к задаче «Сохранение связанных субъектов» (В истории выполнения процесса создана задача "Сохранение связанных субъектов")


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_21(app, db_credo):
    """
    {#
        :id:                56944_21
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка обязательности заполнения полей "Имя латинскими буквами" и "Фамилия латинскими буквами" если страна гражданства = BY
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ЮЛ. Руковидитель гражданин РБ
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'МОЯ ОБОРОНА%'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: В блоке "Информация о руководителе" нажимаем на карточку ФЛ

    # :newpage: #######################################################################################################

    # :step: На форме "Заведение/актуализация карточки руководителя" в поле "Гражданство" выбираем значение
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :assert: Поля "Имя латинскими буквами" и "Фамилия латинскими буквами" необязательны для заполнения
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Выполнен переход на форму "Реквизиты клиента юридического лица"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_56944_22(app, db_credo):
    """
    {#
        :id:                56944_22
        :priority:          Средний
        :module:            ЕФР
        :description:       Формирование «Анкеты вопросника для клиента – ИП»
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовое ИП
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'ИПЕШНИКС'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Подтверждение статуса проверки клиента" отображается ссылка для скачивания "Анкета вопросник для клиента - ИП"
    # :step: Скачиваем документ "Анкета вопросник для клиента - ИП"
    # :assert: Сформировался файл с печатной формой "ВОПРОСНИК ДЛЯ КЛИЕНТА–ИП"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

