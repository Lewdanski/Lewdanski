# -*- coding: utf-8 -*-

import os
import sys
import time
from datetime import datetime
import pytest
from assertpy import assert_that

# :suit_description: #53753: Внедрение фронтального решения для клиентов ЮЛ. Карточка клиента. #56944: Доработка карточки клиента юридического лица.

# :revision_date: 14.06.2022

# 53753 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Внедрение фронтального решения для клиентов ЮЛ. Карточка клиента.

@pytest.mark.skip(reason="Template")
def test_53753_1(app, db_credo):
    """
    {#
        :id:                53753_1
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка, что при поиске по УНП и Названию срабатывает валидация на форме "Поиск карточки клиента в учетной системе Банка". Проверка активации кнопки "Поиск". Поверка вывода сообщений пользователю. Проверка возможности поиска по маске в поле "Название". Проверка состава кнопок на форме
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует юридические лица
        :precondition:      На продукте/варианте параметр doKyc (Проверять клиента в KYC) = нет
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :source_point:      п.п. 3.1, 3.2, 3.3, 3.4, 3.6 ТЗ, RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      25
        :count_of_check:    19
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: На форме "Поиск карточки клиента в учетной системе Банка" отображаются кнопки "Поиск" и "Отмена".
    # :assert: Кнопка "Поиск" заблокирована
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента" = "БЕЛАРУСЬ"
    # :assert: Кнопка "Поиск" разблокирована

    # :step: Нажимаем кнопку "Поиск"
    # :assert: Отображается сообщение "Заполните одно из полей для поиска: 'УНП/Идент. номер нерез.' или 'Название'"

    # :step: Заполняем невалидным значением "УНП/Идент. номер нерез." < 9 символов
    value = '12345678'
    # :assert: Выводится сообщение об ошибке ввода "Неверный формат"
    # :assert: Кнопка "Поиск" блокируется

    # :step: Заполняем невалидным значением "УНП/Идент. номер нерез." > 9 символов
    value = '1234567890'
    # :assert: Выводится сообщение об ошибке ввода "Неверный формат"

    # :step: Заполняем невалидным значением "УНП/Идент. номер нерез." = 9 символов с буквами
    value = '123456AFT'
    # :assert: Выводится сообщение об ошибке ввода "Неверный формат"

    # :step: Заполняем невалидным значением "УНП/Идент. номер нерез." = 9 символов с спецсимволами
    value = '12345678#'
    # :assert: Выводится сообщение об ошибке ввода "Неверный формат"

    # :step: Заполняем невалидным значением "УНП/Идент. номер нерез." = 9 символов с пробелами
    value = '12345 789'
    # :assert: Выводится сообщение об ошибке ввода "Неверный формат"

    # :step: Заполняем валидным значением "УНП/Идент. номер нерез."
    value = '123456789'
    # :assert: сообщение об ошибке ввода "Неверный формат" убирается, кнопка "Поиск" разблокирована

    # :step: Выбираем значение поля "Наименование страны регистрации клиента" не равное "БЕЛАРУСЬ"
    value = 'РОССИЙСКАЯ ФЕДЕРАЦИЯ'
    # :step: Заполняем поле "УНП/Идент. номер нерез." < 100 символов
    value = '12345678'

    # :step: Нажимаем кнопку "Поиск"
    # :assert: Отрабатывает процесс Corporate.Find - см. request.log
    # :assert: Выполняется поиск карточки Клиента в ЕРК по типам субъектов «Юридические лица»( typeSubject="2") и «Индивидуальные предприниматели» (typeSubject="3") - см. ibank.log
    # :assert: Передается код страны в форме <gc:CodeNum>643</gc:CodeNum> и значение УНП в форме <gc:UnpOther>12345678</gc:UnpOther> - см. ibank.log
    # :assert: Совпадений не найдено. На форме три кнопки: "Отмена", "Повторить поиск", "Заведение карточки клиента". Сообщение пользоватею "Карточка данного клиента отсутствует в учетной системе Банка."

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" нажимаем "Повторить поиск"
    # :step: Выбираем значение поля "Наименование страны регистрации клиента" равное "БЕЛАРУСЬ"
    value = 'БЕЛАРУСЬ'
    # :step: Заполняем поле "УНП/Идент. номер нерез."
    value = '654987321'
    # :step: Нажимаем кнопку "Поиск"
    # :assert: передается код страны в форме <gc:CodeNum>112</gc:CodeNum> и значение УНП в форме <gc:UnpBy>654987321</gc:UnpBy> (ibank.log)

    # :step: Нажимаем "Повторить поиск"
    # :step: В поле "УНП/Идент. номер нерез." вводим текстовое значение из 101 символа
    value = '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: Поле "УНП/Идент. номер нерез." заполнилось значением из 100 символов

    # :step: Заполняем поле "УНП/Идент. номер нерез." валидным значением
    value = '123456789'
    # :step: Заполняем поле "Название" валидным значением
    value = 'бабры'
    # :step: Нажимаем кнопку "Поиск"
    # :assert: Выводится сообщение пользователю "Поиск можно совершить по учетному номеру налогоплательщика либо по названию"

    # :step: Очищаем поле "УНП/Идент. номер нерез."
    # :step: Заполняем поле "Название" маской по фрагменту краткого наименования существующего в ЕРК ЮЛ, с заменой любого символа (набора символов) значком %
    value = 'Б%БР%'
    # :step: Нажимаем кнопку "Поиск"
    # :assert: На форме отображаются клиенты, у которых Полное наименование либо его фрагмент совпадает с значением поля "Название". На форме две кнопки: "Повторить поиск" и "Заведение карточки клиента"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_2(app, db_credo):
    """
    {#
        :id:                53753_2
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка формата полей, валидации и доступности кнопок на форме «Реквизиты клиента юридического лица» для юридического лица с "Типом субъекта ЕРК" = 2. Проверка создания клиента ЮЛ в СКЗ и ЕРК
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В справочнике «Тип субъекта по классификации НБРБ» есть записи у которых «Тип субъекта ЕРК» = «2»
        :precondition:      Связанные субъекты ФЛ существуют в ЕРК, СКЗ, все ключевые данные присутствуют
        :precondition:      На продукте/варианте параметр doKyc (Проверять клиента в KYC) = нет
        :precondition:      В  разделе "Валюты" должны быть валюты, у которых в поле "Метки валют" указано значение "Карточка клиента юридического лица"
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :comment:           Текущая дата 09.02.2020
        :source_point:      п.п. 4.1, 4.3, 4.4, 4.5, 4.9, 4.10, 4.11, 4.13, 6.2 ТЗ, RM56944
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      60
        :count_of_check:    157
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :assert: Значения в списке = справочник СКЗ countries "Страны и государства"
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "УНП/Идент. номер нерез."
    value = '123456789'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем кнопку "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :assert: Осуществляется переход на форму "Реквизиты клиента юридического лица"
    # :assert: Отрабатывает процесс Corporate.Card - см. request.log
    # :assert: На форме предзаполнены поля "Наименование страны регистрации клиента" и "УНП/Идент. номер нерез." значениями, введенными на форме "Поиск карточки клиента в учетной системе Банка"
    # :assert: Кнопка "Далее" заблокирована
    # :assert: Поле "Вид деятельности (код ОКЭД)" заблокировано

    # :step: Выбираем значение поля "Наименование страны регистрации клиента" не равное "БЕЛАРУСЬ"
    value = 'РОССИЙСКАЯ ФЕДЕРАЦИЯ'
    # :step: Заполняем "УНП/Идент. номер нерез." валидным значением  < 100 символов
    value = '12345678*/#'
    # :step: Пытаемся заполнить "УНП/Идент. номер нерез." невалидным значением  > 100 символов (101)
    value = 'Равным образом рамки и место обучения кадров способствует подготовки и реализации существенных финанс'
    # :assert: Значение поля "УНП/Идент. номер нерез." обрезается до 100 символов (Равным образом рамки и место обучения кадров способствует подготовки и реализации существенных финан)

    # :step: Выбираем значение поля "Наименование страны регистрации клиента" = "БЕЛАРУСЬ"
    # :step: Заполняем невалидным значением "УНП/Идент. номер нерез." < 9 символов
    value = '12345678'
    # :assert: Выводится сообщение об ошибке ввода "Неверный формат"

    # :step: Заполняем невалидным значением "УНП/Идент. номер нерез." > 9 символов
    value = '1234567890'
    # :assert: Выводится сообщение об ошибке ввода "Неверный формат"

    # :step: Заполняем невалидным значением "УНП/Идент. номер нерез." = 9 символов, с буквами
    value = '123456AFT'
    # :assert: Выводится сообщение об ошибке ввода "Неверный формат"

    # :step: Заполняем невалидным значением "УНП/Идент. номер нерез." = 9 символов, с спецсимволами
    value = '12345678#'
    # :assert: Выводится сообщение об ошибке ввода "Неверный формат"

    # :step: Заполняем невалидным значением "УНП/Идент. номер нерез." = 9 символов, с пробелами
    value = '12345 789'
    # :assert: Выводится сообщение об ошибке ввода "Неверный формат"

    # :step: Заполняем числовым, целым (без пробелов) валидным значением "УНП/Идент. номер нерез." = 9 символов
    value = '123456789'

    # :step: Выбираем значение поля "Организационно-правовая форма клиента"
    value = 'ФОНД'
    # :assert: Значения для выбора = значения из справочника ЕРК "Организационно-правовая форма клиента"

    # :step: Заполняем "Название" невалидным значением > 500 символов (501)
    value
    # :assert: Поле "Название" заполнилось значением из 500 символов

    # :step: Заполняем "Полное наименование" невалидным значением > 500 символов (501)
    value
    # :assert: Поле "Название" заполнилось значением из 500 символов

    # :step: Очищаем поле "Название"
    # :assert: Выводится сообщение об ошибке "Значение обязательно для заполнения"

    # :step: Очищаем поле "Полное наименование"
    # :assert: Выводится сообщение об ошибке "Значение обязательно для заполнения"

    # :step: Заполняем "Название"
    value = 'УЦ HR 123 "-+().,=№/\'

    # :step: Заполняем "Полное наименование"
    value = 'Полное наименование'

    # :step: Выбираем "Тип субъекта" из выпадающего списка, у которого в справочнике «Тип субъекта по классификации НБРБ» поле «Тип субъекта ЕРК» = «2»
    value = 'фондовые и валютные биржи'
    # :assert: В списке в виде дерева отображаются значения поля «Наименование строки справочника»  справочника СКЗ "Тип субъекта по классификации НБРБ". Для выбора доступны значения только нижнего уровня иерархии
    # :assert: Поле "Вид деятельности (код ОКЭД)" разблокировано
    # :assert: Отображаются поля "Количество сотрудников", "Сумма", "Валюта"

    # :step: выбираем "Оргструктура" из выпадающего списка
    value = '10 - Юридические лица'
    # :assert: В списке для выбора отображаются значения поля "GSS_NAME" из справочника ЕРК "GC_SPR_SIMPLE_TYPE_ORG_STRUCT_FORM"

    # :step: Выбираем "Тип сектора экономики (форма собственности)" из выпадающего списка
    value = 'Государственная собственность (110+120)'
    # :assert: В списке для выбора отображаются значения поля "GSS_NAME" из справочника ЕРК "GC_SPR_SIMPLE_TYPE_OWNERSHIP"

    # :step: Выбираем несколько значений "Вид деятельности (код ОКЭД)" из выпадающего списка
    value = '01111 Выращивание зерновых и бобовых культур'
    value = '01112 Выращивание семян масличных культур'
    # :assert: В списке в виде дерева отображаются значения полей "GSS_NAME" справочника ЕРК "DET_OKVED" с учетом ограничения кодов для типа субъекта по справочнику «Тип субъекта по классификации НБРБ». Для выбора доступны значения только нижнего уровня иерархии. Возможен поиск по коду и наименованию
    # :assert: Доступен множественный выбор - выбираются оба варианта
    # :step: Убираем одно из значений "Вид деятельности (код ОКЭД)" - нажимаем на "х" на наименовании вида деятельности с подтверждением кнопкой "Удалить" в модальном окне
    # :assert: на форме остался один вид деятельности
    # :step: Выбираем еще значение "Вид деятельности (код ОКЭД)"
    value = ' 01131 Выращивание картофеля'
    # :assert: "Вид деятельности (код ОКЭД)" дополнился последним выбранным значением - всего два варианта

    # :step: Заполняем "Количество сотрудников" невалидным значением = буквы
    value = 'йцукен'
    # :assert: Выводится ошибка "Неверный формат"

    # :step: Заполняем "Количество сотрудников" невалидным числовым значением со знаком разделителем "."
    value = '15.3'
    # :assert: Выводится ошибка "Неверный формат"

    # :step: Заполняем поле "Количество сотрудников" невалидным числовым значением со знаком разделителем ","
    value = '15,3'
    # :assert: Выводится ошибка "Неверный формат"

    # :step: Пытаемся заполнить "Количество сотрудников" невалидным значением  > 10 символов
    value = '12345678901'
    # :assert: Числовое значение поля "Количество сотрудников" обрезается до 10 символов

    # :step: Пытаемся заполнить "Сумма" невалидным текстовым значением - буквы
    # :assert: Выводится ошибка "Неверный формат"

    # :step: Пытаемся заполнить невалидным значением поле "Сумма" > 100 символов (101)
    value = '15464564564564567567574546548945123489485132158498756423484954312647935313123123123131231231245346456'
    # :assert: Числовое значение поля "Сумма" обрезается до 100 символов

    # :step: Заполняем поле "Сумма" невалидным значением со знаком разделителем "."
    value = '15.3'
    # :assert: Выводится ошибка "Неверный формат"

    # :step: Заполняем поле "Сумма" невалидным значением со знаком разделителем ","
    value = '15,3'
    # :assert: Выводится ошибка "Неверный формат"

    # :step: Заполняем поле "Сумма" валидным значением
    value = '153000.3200'
    # :assert: значение делится на триады (153 000.32)

    # :step: Выбираем "Валюту" из выпадающего списка
    value = 'Белорусский рубль'
    # :assert: В списке отображаются валюты из раздела "Валюты", у которых в поле "Метки валют" указано значение "Карточка клиента юридического лица"

    # :step: Выбираем "Клиентский блок" из выпадающего списка
    value = 'Корпоративный бизнес'
    # :assert: В списке отображаются значения поля "GSS_NAME" из справочника ЕРК "GC_SPR_SIMPLE_TYPE_TYPE_CUSTBLOCK"

    # :step: Выбираем значение "Объем выручки" из выпадающего списка
    value = 'До 3 млн.USD'
    # :assert: В списке отображаются значения поля "GSS_NAME" из справочника ЕРК "GC_SPR_SIMPLE_TYPE_ANNUAL_REVENUE"

    # :step: Нажимаем на кнопку "Добавить бенефициарного владельца"  в разделе "Информация о бенефициарных владельцах" блока "Связанные субъекты"
    # :assert: отображается модальное окно "Информация о бенефициарных владельцах" для заполнения с активной кнопкой "Отмена", кнопка "Добавить" недоступна
    # :step: На форме "Информация о бенефициарных владельцах" заполняем невалидным значением "ФАМИЛИЯ" c сочетанием букв русского и латинского алфавита, нижний регистр
    value =  'йцукенqwerty'
    # :assert: Выводится сообщение "Неверный формат", символы переводятся в верхний регистр
    # :step: Заполняем невалидным значением "ФАМИЛИЯ" c пробелом в конце
    value =  'йцукен '
    # :assert: Выводится сообщение "Неверный формат", символы переводятся в верхний регистр
    # :step: Заполняем невалидным значением "ФАМИЛИЯ" c пробелом в начале
    value =  ' йцукен'
    # :assert: Выводится сообщение "Неверный формат", символы переводятся в верхний регистр
    # :step: Пытаемся заполнить невалидным значением "ФАМИЛИЯ" > 70 символов (71)
    value =  'СОЗЕРЦАНИЕНЕПРЕДСКАЗУЕМОГЕДОНИЗМОСМЫСЛЯЕТДЕДУКТИВНЫЙМЕТОДСТРУКТУРКОНЕЦЛ'
    # :assert: Текстовое значение поля "ФАМИЛИЯ" обрезается до 70 символов
    # :step: Заполняем невалидным значением "ИМЯ" c сочетанием букв русского и латинского алфавита, нижний регистр
    value =  'йцукенqwerty'
    # :assert: Выводится сообщение "Неверный формат", символы переводятся в верхний регистр
    # :step: На форме "Информация о бенефициарных владельцах" заполняем текстовое поле, невалидным значением "ИМЯ" c пробелом в конце
    value =  'йцукен '
    # :assert: Выводится сообщение "Неверный формат", символы переводятся в верхний регистр
    # :step: Заполняем текстовое поле, невалидным значением "ИМЯ" c пробелом в начале
    value =  ' йцукен'
    # :assert: Выводится сообщение "Неверный формат", символы переводятся в верхний регистр
    # :step: Пытаемся заполнить невалидным значением "ИМЯ" > 70 символов (71)
    value =  'СОЗЕРЦАНИЕНЕПРЕДСКАЗУЕМОГЕДОНИЗМОСМЫСЛЯЕТДЕДУКТИВНЫЙМЕТОДСТРУКТУРКОНЕЦЛ'
    # :assert: Текстовое значение поля "ИМЯ" обрезается до 70 символов
    # :assert: кнопка "Добавить" активируется
    # :step: Пытаемся заполнить "Дату рождения" выбором из календаря или ручным набором невалидным значением с датой > текущей дате
    value =  '09.02.2020'
    # :assert: нельзя ввести дату больше текущей
    # :step: Пытаемся ввести "Дату рождения" невалидным значением с датой = текущей дате
    value =  '09.02.2020'
    # :assert: нельзя ввести дату равной текущей
    # :step: Заполняем "Дату рождения"
    value =  '09.02.1985'
    # :step: Выбираем значение поля "Страна гражданства"
    value =  'БЕЛАРУСЬ'
    # :assert: значения в списке = справочник СКЗ countries "Страны и государства"
    # :step: Нажимаем на кнопку "Добавить"
    # :assert: Форма для ввода владельца закрывается, на форме "Реквизиты клиента юридического лица" отображается карточка с введенными данными бенефициарного владельца
    # :assert: Кнопки "Добавить сведения о счете", "Добавить сведения бенифициарного владельца", "Информация о руководителе отсутствует" и "Информация о лице, осуществляющем руководство бухгалтерским учетом отсутствует" оранжевого цвета (в стиле ЕФР)

    # :step: Нажимаем на кнопку "Добавить бенефициарного владельца"
    # :step: Заполняем поле "ФАМИЛИЯ" на форме "Информация о бенефициарных владельцах
    value =  'ФАМИЛИЯ'
    # :step: Заполняем поле"ИМЯ"
    value =  'ИМЯ'
    # :step: Заполняем поле "Имя латинскими буквами" 71 символами
    value = 'Z-ZZ'ZZ ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ'
    # :assert: Водится только 70 символов всегда в верхнем регистре и только латиницей
    # :step: Заполняем поле "Имя латинскими буквами"
    value = ' AL LS'
    # :assert: Выводится сообщение "Неверный формат"
    # :step: Заполняем поле "Фамилия латинскими буквами"
    value = 'AL LS '
    # :assert: Выводится сообщение "Неверный формат"
    # :step: Нажимаем на кнопку "Добавить"
    # :assert: На форме "Реквизиты клиента юридического лица" последовательно отображаются карточки с информацией о каждом из бенефициарных владельцев ЮЛ.

    # :step: Нажимаем "Информация о руководителе отсутствует" в разделе "Информация о руководителе" блока "Связанные субъекты"

    # :newpage: #######################################################################################################

    # :assert: Осуществляется переход на форму "Поиск карточки руководителя"
    # :step: заполняем личный номер клиента ФЛ
    value = '7218233A979PB9'
    # :assert: На форме "Реквизиты клиента юридического лица" кнопка "Изменить связь" в блоке "Информация о руководителе" оранжевого цвета (в стиле ЕФР)
    # :step: нажимаем "Поиск Карточки клиента"
    # :step: Выбираем карточку Клиента

    # :newpage: #######################################################################################################

    # :assert: переход на форму "Заведение/актуализация карточки руководителя"
    # :step: нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: В разделе "Информация о руководителе" появилась карточка связанного субъекта с отображением ФИО, Даты рождения, Регистрационного номера, данных ДУЛа из карточки клиента ФЛ
    # :step: Отмечаем чекбокс "Осуществляет руководство бухгалтерским учетом лично"
    # :assert: Карточка клиента из раздела "Информация о руководителе" переносится в раздел "Информация о лице, осуществляющем руководство бухгалтерским учетом"
    # :assert: В разделе "Информация о лице, осуществляющем руководство бухгалтерским учетом" по умолчанию выбрано значение «Должностное лицо с правом подписи» (радиобаттон)
    # :step: Снимаем отметку в чекбоксе "Осуществляет руководство бухгалтерским учетом лично"
    # :assert: Карточка клиента из раздела "Информация о лице, осуществляющем руководство бухгалтерским учетом" переносится в раздел "Информация о руководителе"

    # :step: Нажимаем "Информация о лице, осуществляющем руководство бухгалтерским учетом отсутствует" в разделе "Информация о лице, осуществляющем руководство бухгалтерским учетом" блока "Связанные субъекты"

    # :newpage: #######################################################################################################

    # :assert: переход на форму "Поиск карточки лица, осуществляющем руководство бухгалтерским учетом"
    # :step: заполняем личный номер клиента ФЛ
    value = '4030987A091PB3'
    # :step: нажимаем "Поиск Карточки клиента"
    # :assert: Кнопка "Поиск карточки клиента" оранжевого цвета (в стиле ЕФР)
    # :step: Выбираем карточку Клиента


    # :newpage: #######################################################################################################

    # :assert: переход на форму "Заведение/актуализация карточки лица, осуществляющем руководство бухгалтерским учетом"
    # :assert: Проверки лица, осуществляющего руководство бухгалтерским учетом, выполнены успешно. Переходим на форму задачи «Реквизиты клиента юридического лица» и устанавливается статус на заявке «Ввод параметров клиента»
    # :assert: На форме "Реквизиты клиента юридического лица" кнопка "Изменить связь" в блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" оранжевого цвета (в стиле ЕФР)
    # :step: нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Адрес регистрации" выбираем "Страна" из выпадающего списка
    value = 'Австралия'
    # :assert: Поле "Нестандартный адрес" отсутствует

    # :step: В поле "Страна" блока "Место регистрации" выбираем значение
    value =  'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :assert: значения в списке = справочник СКЗ countries "Страны и государства"

    # :step: Вводим "Город или населенный пункт"
    value =  'город Минск'
    # :assert: Выводится сообщение "Нужно выбрать наименование из предлагаемых значений"
    # :step: Выбираем "Город или населенный пункт" из списка
    value =  'МИНСК Г'
    # :assert: список для выбора = справочник СКЗ post_codes "Почтовые коды"
    # :step: Вводим "Улица"
    value =  'улица Советская'
    # :assert: Выводится сообщение "Нужно выбрать наименование из предлагаемых значений"
    # :step: Выбираем "Улицу" из списка = справочник СКЗ post_codes "Почтовые коды"
    value =  'СОВЕТСКАЯ УЛ'
    # :step: Вводим "Дом"
    value =  '99'
    # :assert: Выводится сообщение "Нужно выбрать наименование из предлагаемых значений"
    # :step: Выбираем "Дом"  из списка = справочник СКЗ post_codes "Почтовые коды
    value =  '14'
    # :step: Указываем "Квартира/офис"(Блок Адрес регистрации)
    value =  '22'

    # :step: Отмечаем чекбокс "Нестандартный адрес"
    # :assert: Форма дополняется полями "Область", "Район", "Сельсовет", "Тип населенного пункта", "Тип улицы", "Корпус", "Индекс" и "Примечание"

    # :step: В поле "Область" вводим значение из 121 символов
    value = '1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: Поле "Область" заполнилось значением из 120 символов
    # :step: Заполняем "Область" невалидным значением c символом "$"
    value =  'область$'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Область"
    value =  'ФQ123 \-/?:()+.,&@№%*"_'
    # :step: В поле "Район" вводим значение из 151 символов
    value = '1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: Поле "Район" заполнилось значением из 150 символов
    # :step: Заполняем "Район" невалидным значением c символом "$"
    value =  'область$'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Район"
    value =  'ФQ123 \-/?:()+.,&@№%*"_'

    # :step: В поле "Сельсовет" вводим значение из 129 символов
    value = '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: Поле "Сельсовет" заполнилось значением из 128 символов
    # :step: Заполняем "Сельсовет" невалидным значением c символом "$"
    value =  'область$'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Сельсовет"
    value =  'ФQ123 \-/?:()+.,&@№%*"_'

    # :step: Выбираем "Тип населенного пункта"
    value =  'ГОРОД'
    # :assert: значения в списке = справочник СКЗ type_town "Типы населенных пунктов"

    # :step: В поле "Населенный пункт" вводим значение из 251 символа
    value = '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: Поле "Населенный пункт" заполнилось значением из 250 символов
    # :step: Заполняем "Населенный пункт" невалидным значением c символом "$"
    value =  'область$'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Населенный пункт"
    value =  'ФQ123 \-/?:()+.,&@№%*"_'

    # :step: Выбираем "Тип улицы"
    value =  'УЛИЦА'
    # :assert: значения в списке = справочник СКЗ type_street "Типы улиц"

    # :step: Заполняем поле "Улица" невалидным значением > 100 символов (101)
    value =  'Возможность нахождения поисковых ключей в тексте и определения их количества полезна как для написани'
    # :assert: значение обрезается до 100 символов с переводом в верхний регистр
    # :step: Заполняем "Улица" невалидным значением c символом "$"
    value =  'область$'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Улица"
    value =  'ФQ123 \-/?:()+.,&@№%*"_'

    # :step: Заполняем поле "Дом" невалидным значением > 50 символов(51)
    value =  'этономердома11внемживутлюдииздругогогородавоттаквот'
    # :assert: значение обрезается до 10 символов с переводом в верхний регистр
    # :step: Заполняем "Дом" невалидным значением c символом "%"
    value =  'NQДОМ12%'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой"
    # :step: Заполняем поле "Дом"
    value =  'ФQ123 \-/?:()+.,&@№%*"_'

    # :step: Заполняем поле "Корпус" невалидным значением > 50 символов(51)
    value =  'этономеркорпуса11внемживутлюдииздругогогородавоттак'
    # :assert: значение обрезается до 10 символов с переводом в верхний регистр
    # :step: Заполняем "Корпус" невалидным значением c символом "$"
    value =  'NQДОМ12$'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой"
    # :step: Заполняем поле "Корпус"
    value =  'ФQ123 \-/?:()+.,&@№%*"_'

    # :step: Заполняем поле "Квартира/офис" невалидным значением > 50 символов(51)
    value =  'этономерквартиры11внемживутлюдииздругогогородавотда'
    # :assert: значение обрезается до 10 символов с переводом в верхний регистр
    # :step: Заполняем "Квартира/офис" невалидным значением c символом "$"
    value =  'NQДОМ12$'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой"
    # :step: Заполняем поле "Квартира/офис"
    value =  'ФQ123 \-/?:()+.,&@№%*"_'

    # :step: Заполняем "Индекс" невалидным значением > 20 символов (21)
    value =  'ПQ1 \-/?:()+.,&@№%*"_'
    # :assert:значение обрезается до 20 символов
    # :step: Заполняем "Индекс"
    value =  'ПQ1\-/?:()+.,&@№%*"_'

    # :step: Заполняем текстовое поле "Примечание" невалидным значением > 500 символов (501)
    value =  'Возможность нахождения поисковых ключей в тексте и определения их количества полезна как для написания нового текста, так и для оптимизации уже существующего. Расположение ключевых слов по группам и по частоте сделает навигацию по ключам удобной и быстрой. Сервис также найдет и морфологические варианты ключей, которые выделятся в тексте при нажатии на нужное ключевое слово. Данный параметр отображает процент наличия в тексте стоп-слов, фразеологизмов, а также словесных оборотов, фраз, соединитель'
    # :assert: значение обрезается до 500 символов с переводом в верхний регистр
    # :step: Заполняем "Примечание" значением c невалидными символом "$"
    value =  'ПРИМЕЧАНИЕ$'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой"
    # :step: Заполняем "Примечание"
    value =  'ПримечаниеФQ123 \-/?:()+.,&@№%*"_'
    # :assert: значение переводится в верхний регистр

    # :step: Устанавливаем отметку чекбокса "Аналогично месту регистрации" в блоке "Почтовый адрес"
    # :assert: в блоке "Почтовый адрес" не отображаются поля для ввода

    # :step: Снимаем отметку с чекбокса Аналогично месту регистрации
    # :assert: Ображается блок "Почтовый адрес" с полем для ввода "Страна", чекбокс "Нестандартный адрес" по умолчанию не установлен

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Почтовый адрес" выбираем "Страна" из списка
    value =  'БЕЛАРУСЬ'
    # :assert: значения в списке = справочник СКЗ countries "Страны и государства"
    # :step: Вводим "Город или населенный пункт"
    value =  'город Минск'
    # :assert: Выводится сообщение "Нужно выбрать наименование из предлагаемых значений"
    # :step: Выбираем "Город или населенный пункт" из списка
    value =  'МИНСК Г'
    # :assert: список для выбора = справочник СКЗ post_codes "Почтовые коды"
    # :step: Вводим "Улица"
    value =  'улица Советская'
    # :assert: Выводится сообщение "Нужно выбрать наименование из предлагаемых значений"
    # :step: Выбираем "Улицу" из списка = справочник СКЗ post_codes "Почтовые коды"
    value =  'СОВЕТСКАЯ УЛ'
    # :step: Вводим "Дом"
    value =  '99'
    # :assert: Выводится сообщение "Нужно выбрать наименование из предлагаемых значений"
    # :step: Выбираем "Дом"  из списка = справочник СКЗ post_codes "Почтовые коды
    value =  '14'
    # :step: Указываем "Квартира/офис"(Блок Адрес регистрации)
    value =  '22'

    # :step: Отмечаем чекбокс "Нестандартный адрес"
    # :assert: форма дополняется полями "Область", "Район", "Сельсовет", "Тип населенного пункта", "Тип улицы", "Корпус", "Индекс" и "Примечание"

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Почтовый адрес" заполняем "Область" невалидным значением > 120 символов (121)
    value =  '1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: значение обрезается до 120 символов
    # :step: Заполняем "Область" невалидным значением c символом "$"
    value =  'область$'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Область"
    value =  'NAMEПРОВЕРКА-1,2.'
    # :step: В поле "Район" вводим значение из 151 символов
    value = '1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: Поле "Район" заполнилось значением из 150 символов
    # :step: Заполняем "Район" невалидным значением c символом "$"
    value =  'область$'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Район"
    value =  'ФQ123 \-/?:()+.,&@№%*"_'

    # :step: В поле "Сельсовет" вводим значение из 129 символов
    value = '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: Поле "Сельсовет" заполнилось значением из 128 символов
    # :step: Заполняем "Сельсовет" невалидным значением c символом "/"
    value =  'область/'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Сельсовет"
    value =  'ФQ123 \-/?:()+.,&@№%*"_'

    # :step: Выбираем "Тип населенного пункта"
    value =  'ГОРОД'
    # :assert: значения в списке = справочник СКЗ type_town "Типы населенных пунктов"

    # :step: В поле "Населенный пункт" вводим значение из 251 символа
    value = '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: Поле "Населенный пункт" заполнилось значением из 250 символов
    # :step: Заполняем "Населенный пункт" невалидным значением c символом "$"
    value =  'область$'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Населенный пункт"
    value =  'ФQ123 \-/?:()+.,&@№%*"_'

    # :step: Выбираем "Тип улицы"
    value =  'УЛИЦА'
    # :assert: значения в списке = справочник СКЗ type_street "Типы улиц"

    # :step: Заполняем поле "Улица" невалидным значением > 100 символов (101)
    value =  'Возможность нахождения поисковых ключей в тексте и определения их количества полезна как для написани'
    # :assert: значение обрезается до 100 символов с переводом в верхний регистр
    # :step: Заполняем "Улица" невалидным значением c символом "$"
    value =  'область$'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Улица"
    value =  'ФQ123 \-/?:()+.,&@№%*"_'

    # :step: Заполняем поле "Дом" невалидным значением > 50 символов(51)
    value =  'этономердома11внемживутлюдииздругогогородавоттаквот'
    # :assert: значение обрезается до 10 символов с переводом в верхний регистр
    # :step: Заполняем "Дом" невалидным значением c символом "$"
    value =  'NQДОМ12$'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой"
    # :step: Заполняем поле "Дом"
    value =  'ФQ123 \-/?:()+.,&@№%*"_'

    # :step: Заполняем поле "Корпус" невалидным значением > 50 символов(51)
    value =  'этономеркорпуса11внемживутлюдииздругогогородавоттак'
    # :assert: значение обрезается до 10 символов с переводом в верхний регистр
    # :step: Заполняем "Корпус" невалидным значением c символом "$"
    value =  'NQДОМ12$'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой"
    # :step: Заполняем поле "Корпус"
    value =  'ФQ123 \-/?:()+.,&@№%*"_'

    # :step: Заполняем поле "Квартира/офис" невалидным значением > 50 символов(51)
    value =  'этономерквартиры11внемживутлюдииздругогогородавотда'
    # :assert: значение обрезается до 10 символов с переводом в верхний регистр
    # :step: Заполняем "Квартира/офис" невалидным значением c символом "$"
    value =  'NQДОМ12$'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой"
    # :step: Заполняем поле "Квартира/офис"
    value =  'ФQ123 \-/?:()+.,&@№%*"_'

    # :step: Заполняем "Индекс" невалидным значением > 20 символов (21)
    value =  'ПQ1 \-/?:()+.,&@№%*"_'
    # :assert:значение обрезается до 20 символов
    # :step: Заполняем "Квартира/офис" невалидным значением c символом "$"
    value =  'NQДОМ12$'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой"
    # :step: Заполняем "Индекс"
    value =  'ПQ1\-/?:()+.,&@№%*"_'

    # :step: Заполняем текстовое поле "Примечание" невалидным значением > 500 символов (501)
    value =  'Возможность нахождения поисковых ключей в тексте и определения их количества полезна как для написания нового текста, так и для оптимизации уже существующего. Расположение ключевых слов по группам и по частоте сделает навигацию по ключам удобной и быстрой. Сервис также найдет и морфологические варианты ключей, которые выделятся в тексте при нажатии на нужное ключевое слово. Данный параметр отображает процент наличия в тексте стоп-слов, фразеологизмов, а также словесных оборотов, фраз, соединитель'
    # :assert: значение обрезается до 500 символов с переводом в верхний регистр
    # :step: Заполняем "Примечание" значением c невалидными символом "$"
    value =  'ПРИМЕЧАНИЕ$'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой"
    # :step: Заполняем "Примечание"
    value =  'ПримечаниеФQ123 \-/?:()+.,&@№%*"_'
    # :assert: значение переводится в верхний регистр

    # :step: Отмечаем чекбокс "Аналогично месту регистрации"

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Наименование регистрирующего органа"
    value =  'регистрирующий орган'
    # :step: Выбираем "Наименование документа о регистрации" из списка
    value =  'Устав'
    # :assert: значения в списке =  значения поля "GSS_NAME" из справочника ЕРК "GC_SPR_SIMPLE_TYPE_RDOCS"
    # :step: Пытаемся заполнить "Дату регистрации" выбором в календаре или ручным вводом датой больше текущей
    value =  '10.02.2021'
    # :assert: Дата не устанавливается
    # :step: Заполняем поле "Дата регистрации" датой равной текущей
    value =  '09.02.2021'
    # :step: Заполняем поле "Дата регистрации" датой меньше текущей
    value =  '01.02.2021'
    # :step: Заполняем поле "Регистрационный номер"
    value =  '1111/12'
    # :step: Очищаем поле "Наименование регистрирующего органа"
    # :assert: Выводится сообщение "Значение обязательно для заполнения"
    # :step: Заполняем поле "Наименование регистрирующего органа"
    value =  'регистрирующий орган'

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Сведения о гос.регистрации(последняя)" заполняем поле "Наименование регистрирующего органа"
    value =  'регистрирующий орган 2'
    # :assert: отображается сообщение пользователю "Необходимо заполнить все поля или оставить пустыми"
    # :step: Выбираем "Наименование документа о регистрации" из списка
    value =  'Дополнение к уставу'
    # :assert: значения в списке =  значения поля "GSS_NAME" из справочника ЕРК "GC_SPR_SIMPLE_TYPE_RDOCS"
    # :step: Пытаемся заполнить "Дату регистрации" выбором в календаре или ручным вводом датой больше текущей
    value =  '10.02.2021'
    # :assert: Дата не устанавливается
    # :step: Заполняем поле "Дата регистрации" датой равной текущей
    value =  '09.02.2021'
    # :step: Заполняем поле "Дата регистрации" датой меньше текущей
    value =  '01.02.2021'
    # :step: Заполняем поле "Регистрационный номер"
    value =  '1111/12-01'
    # :assert: удаляется сообщение "Необходимо заполнить все поля или оставить пустыми"

    # :assert: На форме "Реквизиты клиента юридического лица" в блоке "Контакты" в блоке "Контакты" присутствует поле "Служебная информация"
    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Контакты" заполняем поле "Мобильный телефон контактного лица" невалидным значением > 50 символов (51)
    value =  '299123456789132545678912346587913235468745621345123'
    # :assert: значение обрезается до 50 символов
    # :step: Заполняем поле "Мобильный телефон контактного лица" невалидным значением, начинающимся с "375" и > 12 символов (13)
    value =  '3752929295555'
    # :assert: Выводится сообщение об ошибке ввода "Неверный формат"
    # :step: Заполняем поле "Мобильный телефон контактного лица" валидным значением начинающимся с "375"
    value =  '375292929555'
    # :step: Очищаем поле "Мобильный телефон контактного лица"
    # :assert: Выводится сообщение об ошибке "Значение обязательно для заполнения"

    # :step: Заполняем поле "ФИО контактного лица"  невалидным значением > 200 символов (201)
    value =  'Возможность нахождения поисковых ключей в тексте и определения их количества полезна как для написания нового текста, так и для оптимизации уже существующего. Расположение ключевых слов по группам и по'
    # :assert: значение обрезается до 200 символов

    # :step: Заполняем поле "Городской телефон клиента" невалидным значением > 50 символов (51)
    value =  '299123456789132545678912346587913235468745621345123'
    # :assert: значение обрезается до 50 символов
    # :step: Заполняем поле "Городской телефон клиента" невалидным значением начинающимся с "375" и > 12 символов
    value =  '3752929295555'
    # :assert: Выводится сообщение об ошибке ввода "Неверный формат"
    # :step: Очищаем поле "Городской телефон клиента"
    # :assert: Выводится сообщение об ошибке "Значение обязательно для заполнения"
    # :step: Заполняем поле "Городской телефон клиента" валидным значением начинающимся с "375"
    value =  '375292929555'
    # :step: Снять отметку в  чек-боксе "Нет" для поля "E-mail"
    # :assert: В блоке "Контакты" в полях "E-mail", "Иной E-mail", "Адрес сайта в интернете" установлены чек-боксы "Нет". Поля неактивны.

    # :step: Заполняем поле "E-mail" невалидным значением
    value = 'Тест'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "E-mail" невалидным значением
    value = 't_e-s.t/te'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "E-mail" невалидным значением
    value = 't_e-s.t/te@s.@t.t'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "E-mail" невалидным значением
    value = 't_e-s.t/te@s.@t.tes1'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "E-mail" невалидным значением
    value = 't_e-s.t/te@s.@t.testt'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "E-mail" невалидным значением > 200 символов (201)
    value = 'Возможностьнахожденияпоисковыхключейвтекстеиопределенияихколичестваполезнакакдлянаписанияновоготекстатакидляоптимизацииужесуществующегорасположениеключевыхсловпогруппамипочастотесделаетнавигациюпокл.рф'
    # :assert: Значение обрезается до 200 символов, выводится сообщение "Неверный формат"
    # :step: Заполняем поле "E-mail" валидным значением
    value = 't_e-s.t/te@s.t.test'

    # :step: Снять отметку в  чек-боксе "Нет" для поля "Иной E-mail"
    # :step: Заполняем поле "Иной E-mail" невалидным значением
    value = 'Тест'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "Иной E-mail" невалидным значением
    value = 't_e-s.t/te'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "Иной E-mail" невалидным значением
    value = 't_e-s.t/te@s.@t.t'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "Иной E-mail" невалидным значением
    value = 't_e-s.t/te@s.@t.tes1'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "Иной E-mail" невалидным значением
    value = 't_e-s.t/te@s.@t.testt'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "Иной E-mail" невалидным значением > 200 символов (201)
    value = 'Возможностьнахожденияпоисковыхключейвтекстеиопределенияихколичестваполезнакакдлянаписаниянового@текстатакидляоптимизацииужесуществующегорасположениеключевыхсловпогруппамипочастотесделаетнавигациюпокл.рф'
    # :assert: Значение поля "Иной E-mail" обрезается до 200 символов, выводится сообщение "Неверный формат"
    # :step: Заполняем поле "Иной E-mail" валидным значением
    value = 't_e-s.t/te@s.t.test'

    # :step: Снять отметку в чек-боксе "Нет" для поля "Адрес сайта в интернете"
    # :step: Заполняем поле "Адрес сайта в интернете" невалидным значением, без 'www'
    value =  'sait.com'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "Адрес сайта в интернете" невалидным значением > 200 символов (201)
    value = 'www.взможностьнахожденияпоисковыхключейвтекстеиопределенияихколичестваполезнакакдлянаписаниянового@текстатакидляоптимизацииужесуществующегорасположениеключевыхсловпогруппамипочастотесделаетнавигациюпокл.рф'
    # :assert: Значение обрезается до 200 символов, отображается сообщение "Неверный формат"
    # :step: заполняем поле "Адрес сайта в интернете"
    value =  'www.sait.бел'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "Дата идентификации ПОД/ФТ"
    # :assert: Поле "Дата идентификации ПОД/ФТ" обязательно для заполнения
    value =  '09.02.2021'
    # :assert: Дата выбирается только из календаря и может быть только текущей
    # :step: выбираем "Ответственное подразделение" из списка
    value =  'Управление сопровождения розничных операций'
    # :assert: значения списка = Подразделения обслуживания из справочника ерк GC_SPR_SIMPLE_TYPE (BankDepartment)

    # :assert: Кнопка "Далее" разблокирована

    # :step: На форме "Реквизиты клиента юридического лица" очищаем "Название"
    # :assert: Кнопка "Далее" блокируется
    # :step: Вводим значением "Название"
    value = 'Вот это фирмочка'
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Подтверждение статуса проверки клиента" отображается ссылка для скачивания "Анкета вопросник для клиента - организации"
    # :step: Скачиваем документ "Анкета вопросник для клиента - организации"
    # :assert: Сформировался файл с печатной формой "ВОПРОСНИК ДЛЯ КЛИЕНТА–ОРГАНИЗАЦИИ"
    # :step: На форме Подтверждение статуса проверки клиента нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: заявка завершается с созданием клиента ЮЛ в СКЗ, ЕРК

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_3(app, db_credo):
    """
    {#
        :id:                53753_3
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка корректности статусов заявки при редактировании юридического клиента
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      Тестовое юридическое лицо существует в ЕРК, все ключевые данные присутствуют
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :source_point:      п.п. 1.5, 2.1, 3.7.3, 5.2, 5.3, 5.4, 5.5, 6.3.3, 6.4, 11.7 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 5
        :time_of_test:      15
        :count_of_check:    11
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: Заявка в статусе "Поиск карточки клиента"
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" нажимаем кнопку "Отмена"

    # :newpage: #######################################################################################################

    # :assert: Заявка в статусе "Завершить без оформления"
    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: осуществляется переход на форму задачи «Поиск карточки клиента в учетной системе Банка»
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "УНП/Идент. номер нерез."
    value = '375896412'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :assert: Заявка в статусе "Ввод параметров клиента"
    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Информация о руководителе" нажимаем кнопку "Изменить связь"

    # :newpage: #######################################################################################################

    # :assert: Заявка в статусе "Поиск карточки связанного субъекта"
    # :step: На форме "Поиск карточки руководителя" заполняем личный номер клиента
    value = '6131183M846PB7'
    # :step: Нажимаем "Поиск Карточки клиента"
    # :step: Выбираем карточку Клиента

    # :newpage: #######################################################################################################

    # :assert: Заявка в статусе "Ввод параметров связанного субъекта"
    # :step: На форме "Заведение/актуализация карточки руководителя" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" нажимаем кнопку "Изменить связь"

    # :newpage: #######################################################################################################

    # :assert: Заявка в статусе "Поиск карточки связанного субъекта"
    # :step: На форме "Поиск карточки лица, осуществляющем руководство бухгалтерским учетом в учетной системе Банка" заполняем личный номер клиента
    value = '5140283C239GB6'
    # :step: Нажимаем "Поиск Карточки клиента"
    # :step: Выбираем карточку Клиента

    # :newpage: #######################################################################################################

    # :assert: Заявка в статусе "Ввод параметров связанного субъекта"
    # :step: На форме "Заведение/актуализация карточки лица, осуществляющем руководство бухгалтерским учетом" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Заявка в статусе "Ввод параметров клиента"
    # :step: На форме "Подтверждение статуса проверки клиента" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Заявка в статусе "Окончена обработка"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_4(app, db_credo):
    """
    {#
        :id:                53753_4
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка сохранения учетного номера плательщика
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :comment:           Параметр "Учетный номер плательщика" находиться в СКЗ. В списке юридических лиц переходим на "Параметры юридического лица" сохраненного клиента
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 5
        :time_of_test:      15
        :count_of_check:    3
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = 'ОАО ПОПЫТКА100503'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем кнопку "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из поля "Наименование страны регистрации клиента" = "БЕЛАРУСЬ"
    # :step: На форме "Реквизиты клиента юридического лица" заполняем числовым, целым (без пробелов) валидным значением "УНП/Идент. номер нерез." = 9 символов
    value = '123456789'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение поля "Организационно-правовая форма клиента"
    value = 'ИНДИВИДУАЛЬНЫЙ ПРЕДПРИНИМАТЕЛЬ'
    # :assert: Поле заполнилось значением "ИП"
    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Название"
    value = 'ОАО ПОПЫТКА100503'
    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Полное наименование"
    value = 'ПОПЫТКА'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из списка "Тип субъекта
    value = 'ИНДИВИДУАЛЬНЫЕ ПРЕДПРИНИМАТЕЛИ'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Оргструктура"
    value = '10 - Юридические лица'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Тип сектора экономики (форма собственности)"
    value = 'Государственная собственность (110+120)'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Вид деятельности (код ОКЭД)"
    value = '01111 Выращивание зерновых и бобовых культур'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Клиентский блок"
    value = 'Малый бизнес'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Объем выручки"
    value = 'До 3 млн.USD'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информацию о связанном физическом лице" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: заполняем поле "Личный номер"
    value = '6131183M846PB7'

    # :step: Нажимаем на кнопку "Поиск Карточки клиента"

    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Адрес регистрации" заполняем поле "Страна"
    value =  'БЕЛАРУСЬ'
    # :step: Указываем Город или населенный пункт из справочника «Почтовые коды»(Блок Адрес регистрации)
    value =  'МИНСК Г'
    # :step: Указываем Улица  из справочника «Почтовые коды»(Блок Адрес регистрации)
    value =  'СОВЕТСКАЯ УЛ'
    # :step: Указываем Дом  из справочника «Почтовые коды»(Блок Адрес регистрации)
    value =  '14'
    # :step: Указываем Квартира/офис(Блок Адрес регистрации)
    value =  '22'

    # :step: На форме "Реквизиты клиента юридического лица" на блоке Почтовый адрес" Устанавливаем отметку чекбокса "Аналогично месту регистрации"

    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "Наименование регистрирующего органа"
    value =  'РЕГОРГ'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из поля "Наименование документа о регистрации"
    value =  'Дополнение к уставу'
    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "Дата регистрации"
    value =  '16.10.2020'
    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "Регистрационный номер"
    value =  '123'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "Мобильный телефон контактного лица"
    value =  '+375295222222'

    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из поля "Ответственное подразделение"
    value =  'Управление сопровождения розничных операций'
    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Подтверждение статуса проверки клиента" отображается ссылка для скачивания "Анкета вопросник для клиента - ИП"
    # :step: Скачиваем документ "Анкета вопросник для клиента - ИП"
    # :assert: Сформировался файл с печатной формой "ВОПРОСНИК ДЛЯ КЛИЕНТА–ИП"
    # :assert: В анкете в пункте 2 сохранён "Учетный номер плательщика"
    # :assert: В приложении 1 анкеты в поле УНП внесён "Учетный номер плательщика"
    # :assert: Параметр "Учетный номер плательщика" из заявки сохранился в СКЗ

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_5(app, db_credo):
    """
    {#
        :id:                53753_5
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка сохранения учетного номера для нерезидента
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :comment:           Параметр "Учетный номер в другой стране для нерезидента" находиться в СКЗ. В списке юридических лиц переходим на "Параметры юридического лица" сохраненного клиента
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 5
        :time_of_test:      15
        :count_of_check:    3
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'АВСТРАЛИЯ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = 'TES123456789T'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем кнопку "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение поля "Организационно-правовая форма клиента"
    value = 'ИНДИВИДУАЛЬНЫЙ ПРЕДПРИНИМАТЕЛЬ'
    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Название"
    value = 'ОАО ПОПЫТКА100503'
    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Полное наименование"
    value = 'ПОПЫТКА'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из списка "Тип субъекта
    value = 'ИНДИВИДУАЛЬНЫЕ ПРЕДПРИНИМАТЕЛИ'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Оргструктура"
    value = '10 - Юридические лица'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Тип сектора экономики (форма собственности)"
    value = 'Государственная собственность (110+120)'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Вид деятельности (код ОКЭД)"
    value = '01111 Выращивание зерновых и бобовых культур'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Клиентский блок"
    value = 'Малый бизнес'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Объем выручки"
    value = 'До 3 млн.USD'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информацию о связанном физическом лице" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: заполняем поле "Личный номер"
    value = '6131183M846PB7'

    # :step: Нажимаем на кнопку "Поиск Карточки клиента"

    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Адрес регистрации" заполняем поле "Страна"
    value =  'БЕЛАРУСЬ'
    # :step: Указываем Город или населенный пункт из справочника «Почтовые коды»(Блок Адрес регистрации)
    value =  'МИНСК Г'
    # :step: Указываем Улица  из справочника «Почтовые коды»(Блок Адрес регистрации)
    value =  'СОВЕТСКАЯ УЛ'
    # :step: Указываем Дом  из справочника «Почтовые коды»(Блок Адрес регистрации)
    value =  '14'
    # :step: Указываем Квартира/офис(Блок Адрес регистрации)
    value =  '22'

    # :step: На форме "Реквизиты клиента юридического лица" на блоке Почтовый адрес" Устанавливаем отметку чекбокса "Аналогично месту регистрации"

    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "Наименование регистрирующего органа"
    value =  'РЕГОРГ'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из поля "Наименование документа о регистрации"
    value =  'Дополнение к уставу'
    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "Дата регистрации"
    value =  '16.10.2020'
    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "Регистрационный номер"
    value =  '123'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "Мобильный телефон контактного лица"
    value =  '+375295222222'

    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из поля "Ответственное подразделение"
    value =  'Управление сопровождения розничных операций'
    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение статуса проверки клиента" нажимаем "Анкета вопросник для клиента – ИП"
    # :assert: В анкете в пункте 2 сохранён "Учетный номер в другой стране для нерезидента"
    # :assert: В приложении 1 анкеты в поле УНП внесён "Учетный номер в другой стране для нерезидента"
    # :assert: Параметр "Учетный номер в другой стране для нерезидента" из заявки сохранился в СКЗ

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_6(app, db_credo):
    """
    {#
        :id:                53753_6
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка заведения карточки клиента ФЛ в СКЗ и ЕРК в ходе изменения связанного субъекта  - руководителя юридического лица
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      Тестовый клиент (Юридическое лицо) существует в ЕРК
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :comment:           Запрос поиска юридического лица в ЕРК аналогичен поиску физического лица
        :source_point:      п.п. 4.8, 8.2 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      15
        :count_of_check:    15
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "УНП/Идент. номер нерез."
    value = '321121123'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Выбираем карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информация о руководителе" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: Производим поиска карточки клиента по Личному номеру
    value = '4240267E020PB7'

    # :assert: Отображается сообщение "Карточка данного клиента отсутствует в учетной системе банка."

    # :step: Нажимаем "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :assert: Отображается форма "Заведение/актуализация карточки руководителя"
    # :step: указываем Гражданство
    value = 'АВСТРАЛИЯ'
    # :step: Нажимаем кнопку "Далее"
    # :assert: Появилось сообщение об ошибке с текстом "На форме имеются ошибки", кнопка "Далее" не активна
    # :assert: Поля "Имя латинскими буквами" и "Фамилия латинскими буквами" обязательны для заполнения
    # :step: В поле "Гражданство" выбираем значение
    value = 'РОССИЙСКАЯ ФЕДЕРАЦИЯ'
    # :assert: Поля "Имя латинскими буквами" и "Фамилия латинскими буквами" необязательны для заполнения

    # :step: указываем Гражданство
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :assert: Поля "Имя латинскими буквами" и "Фамилия латинскими буквами" необязательны для заполнения
    # :assert: значение поля Резидентство = БЕЛАРУСЬ
    # :assert: значение поля Тип документа = Паспорт
    # :assert: значение поля Страна выдачи документа = БЕЛАРУСЬ

    # :step: указываем Фамилия (валидные символы А-ЯЁІЎ-‘')
    value = 'СІУП ЕРУ-МЕН'

    # :step: указываем Имя (валидные символы А-ЯЁІЎ-‘')
    value = 'В У-МЎІЕН'

    # :step: указываем Отчество (при наличии) (валидные символы А-ЯЁІЎ-‘')
    value = 'ЛЕІЎТ-АЮЎ ЩИЙ'

    # :step: указываем Пол
    value = 'Мужской'

    # :step: указываем Имя латинскими буквами
    value = 'WOMAN'

    # :step: указываем Фамилия латинскими буквами
    value = 'SUPER-PUPER'

    # :step: указываем Дата рождения
    value = '20.04.1987'

    # :step: указываем Личный номер
    value = '4240267E020PB7'

    # :step: указываем Серия и номер документа
    value = 'AB1233677'

    # :step: указываем Кем выдан документ
    value = 'СЫН МАМИНОЙ ПОДРУГИ'

    # :step: указываем Дата выдачи
    value = '20.01.2000'

    # :step: указываем Срок действия документа
    value = '20.10.2029'

    # :step: указываем Страна рождения(Блок Место рождения)
    value = 'БЕЛАРУСЬ'

    # :step: указываем Область(Блок Место рождения)
    value = 'ОБЛАСТЬ'

    # :step: указываем Район(Блок Место рождения)
    value = 'РАЙОН'

    # :step: указываем Тип населенного пункта(Блок Место рождения)
    value = 'Город'

    # :step: указываем Населенный пункт(Блок Место рождения)
    value = 'БРЕСТ'

    # :step: указываем Страна(Блок Место регистрации)
    value = 'БЕЛАРУСЬ'

    # :step: указываем Город или населенный пункт(Блок Место регистрации)
    value = 'МИНСК Г'

    # :step: указываем Улица(Блок Место регистрации)
    value = 'ЛЕНИНА ул'

    # :step: указываем Дом(Блок Место регистрации)
    value = '10'

    # :step: указываем Квартира(Блок Место регистрации)
    value = '18'

    # :step: снимаем отметку с чекбокса Аналогично месту регистрации
    # :assert: отображается блок Место проживания

    # :step: указываем Страна(Блок Место проживания)
    value = 'БЕЛАРУСЬ'

    # :step: указываем Город или населенный пункт(Блок Место проживания)
    value = 'БРЕСТ г, БРЕСТСКАЯ обл'

    # :step: указываем Улица(Блок Место проживания)
    value = 'ЛЕНИНА ул'

    # :step: указываем Дом(Блок Место проживания)
    value = '11'

    # :step: указываем Квартира(Блок Место проживания)
    value = '33'

    # :step: указываем Мобильный телефон
    value = '+375251231234'

    # :step: указываем Домашний  телефон
    value = '+375162434315'

    # :step: указываем Иной телефон
    value = '+375251231236'

    # :step: указываем Иной телефон
    value = '+375251231237'

    # :step: указываем Номер факса
    value = '+375162434318'

    # :step: указываем E-mail
    value = 'CREDOSPAM@ITWORKS.BY'

    # :step: указываем Место работы
    value = 'ОАО РОГАиКОПЫТА'

    # :step: указываем Занимаемая должность
    value = 'Бухгалтер'

    # :step: указываем Адрес места работы
    value = 'советская 13-15'
    # :step: Нажимаем "Добавить место работы"
    # :assert: отобразился блок #1, с указанными данными о работе
    # :assert: напротив блока с работой #1 отображается кнопка "Удалить"

    # :step: Нажимаем "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента юридического лица" в блоке "Информация о руководителе" появилась карточка связанного физического лица
    # :assert: На форме "Реквизиты клиента юридического лица" все внесенная информация сохранилась и отобразилась на карточке связанного физического лица

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение статуса проверки клиента" нажимаем "Анкета вопросник для клиента – организации"
    # :assert: В анкете в пункте 8 выбран первый чекбокс, в таблице внесены данные которые указывали на форме "Заведение/актуализация карточки руководителя"
    # :assert: В анкете в пункте 29.2 в графе "(инициалы, фамилия)" проставлена фамилия и инициалы руководителя
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: В СКЗ создался новый клиент с данным, которые указывали на форме "Заведение/актуализация карточки руководителя""
    # :assert: В ЕРК создался новый клиент с данным, которые указывали на форме "Заведение/актуализация карточки руководителя""
    # :step: Отправляем запрос через Postman на поиск ЮЛ в ЕРК
    # :assert: в ЕРК у юридического лицп в тэге <Link> существует клиент с параметром sprValue="Руководитель" с данным, которые указывали на форме "Заведение/актуализация карточки руководителя"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_7(app, db_credo):
    """
    {#
        :id:                53753_7
        :priority:          Средний
        :module:            ЕФР
        :description:       Действие по кнопке "Назад" в зависимости от формы для клиента ИП
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ИП
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      20
        :count_of_check:    8
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'ИПЕШНИКС'
    # :step: Нажимаем кнопку "Поиск"
    # :assert: Задача в статусе "Поиск карточки клиента"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров клиента"
    # :step: В блоке "Информация о связанном с ИП физическом лице" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров связанного субъекта"
    # :assert: Блоки «Согласия» и «Подключение к ДБО» не отображаются на форме "Заведение/актуализация карточки связанного с ИП физического лица"
    # :step: Нажимаем кнопку "Назад"

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров клиента"
    # :step: В блоке "Информация о связанном с ИП физическом лице" нажимаем кнопку "Изменить связь"

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров связанного субъекта"
    # :step: На форме "Поиск карточки связанного с ИП физического лица" вводим личный номер
    value = '7002915A987PB4'
    # :step: Нажимаем кнопку "Поиск карточки клиента"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров связанного субъекта"
    # :step: Нажимаем кнопку "Назад"

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Поиск карточки связанного субъекта"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_8(app, db_credo):
    """
    {#
        :id:                53753_8
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка заведения карточки физического лица в СКЗ и ЕРК в ходе изменения связанного ФЛ для индивидуального предпринимателя
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      Тестовый клиент (Индивидуальный предприниматель) существует в ЕРК и СКЗ
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :comment:           Запрос поиска юридического лица в ЕРК аналогичен поиску физического лица
        :source_point:      п.п. 5, 8.2, 9.11 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      15
        :count_of_check:    14
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "УНП/Идент. номер нерез."
    value = '321121123'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Выбираем карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информация о связанном с ИП физическом лице" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки связанного физического лица" производим поиска карточки клиента по Личному номеру
    value = '4240267E020PB7'

    # :assert: отображается сообщение "Карточка данного клиента отсутствует в учетной системе банка."

    # :step: Нажимаем "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :assert: Отображается форма "Заведение/актуализация карточки связанного физического лица"

    # :step: Указываем Фамилия (валидные символы А-ЯЁІЎ-‘')
    value = 'СІУП ЕРУ-МЕН'

    # :step: Указываем Имя (валидные символы А-ЯЁІЎ-‘')
    value = 'В У-МЎІЕН'

    # :step: Указываем Отчество (при наличии) (валидные символы А-ЯЁІЎ-‘')
    value = 'ЛЕІЎТ-АЮЎ ЩИЙ'

    # :step: Указываем Пол
    value = 'Мужской'

    # :step: Указываем Имя латинскими буквами
    value = 'WOMAN'

    # :step: Указываем Фамилия латинскими буквами
    value = 'SUPER-PUPER'

    # :step: Указываем Гражданство
    value = 'БЕЛАРУСЬ'
    # :assert: Значение поля Резидентство = БЕЛАРУСЬ
    # :assert: Значение поля Тип документа = Паспорт
    # :assert: Значение поля Страна выдачи документа = БЕЛАРУСЬ

    # :step: Указываем Дата рождения
    value = '20.04.1987'

    # :step: Указываем Личный номер
    value = '4240267E020PB7'

    # :step: Указываем Серия и номер документа
    value = 'AB1233677'

    # :step: Указываем Кем выдан документ
    value = 'СЫН МАМИНОЙ ПОДРУГИ'

    # :step: Указываем Дата выдачи
    value = '20.01.2000'

    # :step: Указываем Срок действия документа
    value = '20.10.2029'

    # :step: Указываем Страна рождения(Блок Место рождения)
    value = 'БЕЛАРУСЬ'

    # :step: Указываем Область(Блок Место рождения)
    value = 'ОБЛАСТЬ'

    # :step: Указываем Район(Блок Место рождения)
    value = 'РАЙОН'

    # :step: Указываем Тип населенного пункта(Блок Место рождения)
    value = 'Город'

    # :step: Указываем Населенный пункт(Блок Место рождения)
    value = 'БРЕСТ'

    # :step: Указываем Страна(Блок Место регистрации)
    value = 'БЕЛАРУСЬ'

    # :step: Указываем Город или населенный пункт(Блок Место регистрации)
    value = 'МИНСК Г'

    # :step: Указываем Улица(Блок Место регистрации)
    value = 'ЛЕНИНА ул'

    # :step: Указываем Дом(Блок Место регистрации)
    value = '10'

    # :step: Указываем Квартира(Блок Место регистрации)
    value = '18'

    # :step: Снимаем отметку с чекбокса Аналогично месту регистрации
    # :assert: Отображается блок Место проживания

    # :step: Указываем Страна(Блок Место проживания)
    value = 'БЕЛАРУСЬ'

    # :step: Указываем Город или населенный пункт(Блок Место проживания)
    value = 'БРЕСТ г, БРЕСТСКАЯ обл'

    # :step: Указываем Улица(Блок Место проживания)
    value = 'ЛЕНИНА ул'

    # :step: Указываем Дом(Блок Место проживания)
    value = '11'

    # :step: Указываем Квартира(Блок Место проживания)
    value = '33'

    # :step: Указываем Мобильный телефон
    value = '+375251231234'

    # :step: Указываем Домашний  телефон
    value = '+375162434315'

    # :step: Указываем Иной телефон
    value = '+375251231236'

    # :step: Указываем Иной телефон
    value = '+375251231237'

    # :step: Указываем Номер факса
    value = '+375162434318'

    # :step: Указываем E-mail
    value = 'CREDOSPAM@ITWORKS.BY'

    # :step: Указываем Место работы
    value = 'ОАО РОГАиКОПЫТА'

    # :step: Указываем Занимаемая должность
    value = 'Бухгалтер'

    # :step: Указываем Адрес места работы
    value = 'советская 13-15'
    # :step: Нажимаем "Добавить место работы"
    # :assert: отобразился блок #1, с указанными данными о работе
    # :assert: напротив блока с работой #1 отображается кнопка "Удалить"

    # :step: Нажимаем "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента юридического лица" в блоке "Информация о связанном с ИП физическом лице" появилась карточка связанного физического лица

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение статуса проверки клиента" нажимаем "Анкета вопросник для клиента – организации"
    # :assert: В анкете в пункте 8 выбран первый чекбокс, в таблице внесены данные которые указывали на форме "Заведение/актуализация карточки связанного физического лица"
    # :assert: В анкете в пункте 29.2 в графе "(инициалы, фамилия)" проставлена фамилия и инициалы связанного физического лица
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: в СКЗ создался новый клиент с данным, которые указывали на форме "Заведение/актуализация карточки связанного физического лица"
    # :assert: в ЕРК создался новый клиент с данным, которые указывали на форме "Заведение/актуализация карточки связанного физического лица"
    # :step: Отправляем запрос через Postman на поиск ЮЛ в ЕРК
    # :assert: В ЕРК у юридического лица в тэге <SoloIdentity/PersonCode> записан ЕРК код связанного ФЛ

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_9(app, db_credo):
    """
    {#
        :id:                53753_9
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка заведения карточки физического лица в СКЗ , ЕРК, при изменении связанного субъекта -  лица, осуществляющего руководство бухгалтерским учетом
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      Тестовый клиент (Юридическое лицо) существует в ЕРК
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :comment:           Запрос поиска юридического лица в ЕРК аналогичен поиску физического лица
        :source_point:      п.п. 6.2, 8.2 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      15
        :count_of_check:    13
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "УНП/Идент. номер нерез."
    value = '321121123'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Выбираем карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки связанного физического лица" производим поиска карточки клиента по Личному номеру
    value = '4240267E020PB7'

    # :assert: отображается сообщение "Карточка данного клиента отсутствует в учетной системе банка."

    # :step: Нажимаем "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :assert: отображается форма "Заведение/актуализация карточки лица, осуществляющем руководство бухгалтерским учетом"

    # :step: указываем Фамилия (валидные символы А-ЯЁІЎ-‘')
    value = 'СІУП ЕРУ-МЕН'

    # :step: указываем Имя (валидные символы А-ЯЁІЎ-‘')
    value = 'В У-МЎІЕН'

    # :step: указываем Отчество (при наличии) (валидные символы А-ЯЁІЎ-‘')
    value = 'ЛЕІЎТ-АЮЎ ЩИЙ'

    # :step: указываем Пол
    value = 'Мужской'

    # :step: указываем Имя латинскими буквами
    value = 'WOMAN'

    # :step: указываем Фамилия латинскими буквами
    value = 'SUPER-PUPER'

    # :step: указываем Гражданство
    value = 'БЕЛАРУСЬ'
    # :assert: значение поля Резидентство = БЕЛАРУСЬ
    # :assert: значение поля Тип документа = Паспорт
    # :assert: значение поля Страна выдачи документа = БЕЛАРУСЬ

    # :step: указываем Дата рождения
    value = '20.04.1987'

    # :step: указываем Личный номер
    value = '4240267E020PB7'

    # :step: указываем Серия и номер документа
    value = 'AB1233677'

    # :step: указываем Кем выдан документ
    value = 'СЫН МАМИНОЙ ПОДРУГИ'

    # :step: указываем Дата выдачи
    value = '20.01.2000'

    # :step: указываем Срок действия документа
    value = '20.10.2029'

    # :step: указываем Страна рождения(Блок Место рождения)
    value = 'БЕЛАРУСЬ'

    # :step: указываем Область(Блок Место рождения)
    value = 'ОБЛАСТЬ'

    # :step: указываем Район(Блок Место рождения)
    value = 'РАЙОН'

    # :step: указываем Тип населенного пункта(Блок Место рождения)
    value = 'Город'

    # :step: указываем Населенный пункт(Блок Место рождения)
    value = 'БРЕСТ'

    # :step: указываем Страна(Блок Место регистрации)
    value = 'БЕЛАРУСЬ'

    # :step: указываем Город или населенный пункт(Блок Место регистрации)
    value = 'МИНСК Г'

    # :step: указываем Улица(Блок Место регистрации)
    value = 'ЛЕНИНА ул'

    # :step: указываем Дом(Блок Место регистрации)
    value = '10'

    # :step: указываем Квартира(Блок Место регистрации)
    value = '18'

    # :step: снимаем отметку с чекбокса Аналогично месту регистрации
    # :assert: отображается блок Место проживания

    # :step: указываем Страна(Блок Место проживания)
    value = 'БЕЛАРУСЬ'

    # :step: указываем Город или населенный пункт(Блок Место проживания)
    value = 'БРЕСТ г, БРЕСТСКАЯ обл'

    # :step: указываем Улица(Блок Место проживания)
    value = 'ЛЕНИНА ул'

    # :step: указываем Дом(Блок Место проживания)
    value = '11'

    # :step: указываем Квартира(Блок Место проживания)
    value = '33'

    # :step: указываем Мобильный телефон
    value = '+375251231234'

    # :step: указываем Домашний  телефон
    value = '+375162434315'

    # :step: указываем Иной телефон
    value = '+375251231236'

    # :step: указываем Иной телефон
    value = '+375251231237'

    # :step: указываем Номер факса
    value = '+375162434318'

    # :step: указываем E-mail
    value = 'CREDOSPAM@ITWORKS.BY'

    # :step: указываем Место работы
    value = 'ОАО РОГАиКОПЫТА'

    # :step: указываем Занимаемая должность
    value = 'Бухгалтер'

    # :step: указываем Адрес места работы
    value = 'советская 13-15'
    # :step: Нажимаем "Добавить место работы"
    # :assert: отобразился блок #1, с указанными данными о работе
    # :assert: напротив блока с работой #1 отображается кнопка "Удалить"

    # :step: Нажимаем "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента юридического лица" в блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" появилась карточка связанного физического лица

    # :assert: в СКЗ создался новый клиент с данным, которые указывали на форме "Заведение/актуализация карточки лица, осуществляющем руководство бухгалтерским учетом"
    # :assert: в ЕРК создался новый клиент с данным, которые указывали на форме "Заведение/актуализация карточки лица, осуществляющем руководство бухгалтерским учетом"

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение статуса проверки клиента" нажимаем "Анкета вопросник для клиента – организации"
    # :assert: В анкете в пункте 9 выбран первый чекбокс, в таблице внесены данные которые указывали на форме "Заведение/актуализация карточки лица, осуществляющем руководство бухгалтерским учетом"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Отправляем запрос через Postman на поиск юридического лица в ЕРК

    # :assert: В ЕРК у юридического лица присутствует лицо, осуществляющее руководство бухгалтерским учетом в тэге "<gc:Links>" с sprCode="ChiefAccountant"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_10(app, db_credo):
    """
    {#
        :id:                53753_10
        :priority:          Средний
        :module:            ЕФР
        :description:       ИП. В блоке «KYC статус:» по всем субъектам отобразить статус «Запрос в KYC не выполнялся».
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствуют тестовый клиент ИП.
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "нет"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У ЮЛ имеются данные связанного с ИП физического лица
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    1
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'ИПЕШНИКС'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Подтверждение статуса проверки клиента" KYC статус для клиента и связанного физического лица = Запрос в KYC не выполнялся


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_11(app, db_credo):
    """
    {#
        :id:                53753_11
        :priority:          Средний
        :module:            ЕФР
        :description:       ЮЛ. В блоке «KYC статус:»  по всем субъектам статус «Запрос в KYC не выполнялся».
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствуют юридические лица
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "нет"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У ЮЛ имеются данные руководителя и бенефициарных владельцев
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    1
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'МОЯ ОБОРОНА'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Подтверждение статуса проверки клиента" KYC статус для клиента, руководителя и бенефициарного владельца = Запрос в KYC не выполнялся


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_12(app, db_credo):
    """
    {#
        :id:                53753_12
        :priority:          Средний
        :module:            ЕФР
        :description:       Действие по кнопке "Назад" в зависимости от формы для клиента ЮЛ
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ЮЛ
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      20
        :count_of_check:    14
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'МОЯ ОБОРОНА'
    # :step: Нажимаем кнопку "Поиск"
    # :assert: Задача в статусе "Поиск карточки клиента"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров клиента"
    # :step: В блоке "Информация о руководителе" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров связанного субъекта"
    # :assert: Блоки «Согласия» и «Подключение к ДБО» не отображаются на форме "Заведение/актуализация карточки руководителя"
    # :step: Нажимаем кнопку "Назад"

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров клиента"
    # :step: В блоке "Информация о руководителе" нажимаем кнопку "Изменить связь"

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров связанного субъекта"
    # :step: На форме "Поиск карточки руководителя" вводим личный номер
    value = '7002915A987PB4'
    # :step: Нажимаем кнопку "Поиск карточки клиента"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров связанного субъекта"
    # :step: Нажимаем кнопку "Назад"

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Поиск карточки связанного субъекта"
    # :step: Нажимаем кнопку "Назад"

    # :newpage: #######################################################################################################

    # :step: В блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров связанного субъекта"
    # :assert: Блоки «Согласия» и «Подключение к ДБО» не отображаются на форме "Заведение/актуализация карточки лица, осуществляющем руководство бухгалтерским учетом"
    # :step: Нажимаем кнопку "Назад"

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров клиента"
    # :step: В блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" нажимаем кнопку "Изменить связь"

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров связанного субъекта"
    # :step: На форме "Поиск карточки лица, осуществляющем руководство бухгалтерским учетом" вводим личный номер
    value = '7002915A987PB4'
    # :step: Нажимаем кнопку "Поиск карточки клиента"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Ввод параметров связанного субъекта"
    # :step: Нажимаем кнопку "Назад"

    # :newpage: #######################################################################################################

    # :assert: Задача в статусе "Поиск карточки связанного субъекта"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_13(app, db_credo):
    """
    {#
        :id:                53753_13
        :priority:          Средний
        :module:            ЕФР
        :description:       ЮЛ. В блоке «KYC статус:»  - отображаются статусы по субьектам, полученные в задаче «Проверка клиента в KYC(Siron)»
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовое ЮЛ
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "да"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У ЮЛ имеются данные руководителя и бенефициарных владельцев
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: Заявка создана. В списке параметров заявки есть параметр "Проверять клиента в KYC" со значением "да"
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'МОЯ ОБОРОНА'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Выполнилась проверка KYC для клиента, руководителя и бенефициарных владельцев
    # :assert: На форме "Подтверждение статуса проверки клиента" в блоке "KYC статус:" отображаются статусы по субъектам, полученные в задаче «Проверка клиента в KYC(Siron)» (для клиента, руководителя и бенефициарного владельца = Совпадений нет после проверки)


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)



@pytest.mark.skip(reason="Template")
def test_53753_14(app, db_credo):
    """
    {#
        :id:                53753_14
        :priority:          Средний
        :module:            ЕФР
        :description:       ИП. В блоке «KYC статус:» - отображаются статусы по субьектам, полученные в задаче «Проверка клиента в KYC(Siron)»
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствуют тестовый ИП
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "да"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У ЮЛ имеются данные связанного с ИП физического лица
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'ИПЕШНИКС'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Выполнилась проверка KYC для клиента и связанного физического лица
    # :assert: На форме "Подтверждение статуса проверки клиента" в блоке «KYC статус:» отображаются статусы по субьектам, полученные в задаче «Проверка клиента в KYC(Siron)» (KYC статус для клиента и связанного физического лица = Совпадений нет после проверки)


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_15(app, db_credo):
    """
    {#
        :id:                53753_15
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка, что при поиске по названию пердается в запрос наименовнаие и код страны
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :source_point:      п. 3.4 ТЗ
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      15
        :count_of_check:    1
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = 'TEST'

    # :step: Нажимаем кнопку "Поиск"

    # :assert: В логах request.log в запросе на поиск клиента передается код страны в форме <gc:CodeNum>643</gc:CodeNum> и значение УНП в форме <gc:UnpOther>12345678</gc:UnpOther>

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_16(app, db_credo):
    """
    {#
        :id:                53753_16
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка, что по факту поиска отображается суммарный результат поиска ЮЛ и ИП
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      в ЕРК существует клиент у которого «Тип субъекта ЕРК» = «3» (тестовый Клиент 1)
        :precondition:      в ЕРК существует клиент у которого «Тип субъекта ЕРК» = «2» (тестовый Клиент 2)
        :precondition:      в ЕРК существует клиенты с одинаковыми короткими именами у которых «Тип субъекта ЕРК» = «3» количеством = 2, и клиенты с таким же коротким именем у которых «Тип субъекта ЕРК» = «2» количеством = 2 (тестовый Клиент 3)
        :precondition:      в ЕРК существует клиенты с одинаковыми короткими именами у которых «Тип субъекта ЕРК» = «3» количеством = 4, и клиенты с таким же коротким именем у которых «Тип субъекта ЕРК» = «2» количеством = 4 (тестовый Клиент 4)
        :source_point:      п. 3.5 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 30
        :time_of_test:      20
        :count_of_check:    4
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "УНП/Идент. номер нерез." (тестовый Клиент 1)
    value = '555222333'
    # :step: Нажимаем кнопку "Поиск"
    # :assert: результат поиска - одно совпадение. Отображается один клиент

    # :step: Нажимаем кнопку "Повторить поиск"
    # :assert: возвращаемся на форму поика

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" очищаем поле "УНП/Идент. номер нерез." (тестовый Клиент 2)
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование" (тестовый Клиент 3)
    # :assert: Результат поиска - 4 совпадения. Отображается 4 клиента

    # :step: Нажимаем кнопку "Повторить поиск"
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование" (тестовый Клиент 4)
    # :assert: Результат поиска - 8 совпадений. Отображается 8 клиентов

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_17(app, db_credo, db_forpost):
    """
    {#
        :id:                53753_17
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка работы уведомления об обновлении карточки клиента более года назад согласно параметру indDT
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      На шлюз отправляем запрос save legal client to erk с тегами:  <gc:Corporate changeDT="2020-08-03T15:25:54" indDT="2019-07-31T15:20:32" indAuthor="admin" changeType="0" changeAuthor="admin" ignoreCollision="1" createDT="2020-07-30T11:22:12">
        :precondition:      Параметр "indDT" меньше текущей даты более чем на 1 год
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :comment:           Запрос на сохранение ЮЛ в ЕРК прикреплен к задаче
        :source_point:      п. 4.2 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :time_of_test:      10
        :precondition_time: 10
        :count_of_check:    1
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ""
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :step: Отправляем запрос через Postman на сохранение ЮЛ в ЕРК

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "УНП/Идент. номер нерез."
    value = '555222333'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Выбираем карточку созданного клиента
    # :assert: На форме "Реквизиты клиента юридического лица" выводится уведомление «Обновление карточки клиента было выполнено более 1 года назад!»

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_18(app, db_credo, db_forpost):
    """
    {#
        :id:                53753_18
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка работы уведомления о обновлении карточки клиента более года назад согласно параметру createDT
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      На шлюз отправляем запрос save legal client to erk с тегами:  <gc:Corporate changeDT="2020-08-03T15:25:54" indAuthor="admin" changeType="0" changeAuthor="admin" ignoreCollision="1" createDT="2019-07-30T11:22:12">
        :precondition:      Параметр "createDT" в ЕРК меньше текущей даты более чем на 1 год
        :precondition:      Параметр "indDT" в ерк не заполнен
        :source_point:      п.п. 4.2 ТЗ
        :tc_type:           +
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :comment:           Запрос на сохранение ЮЛ в ЕРК прикреплен к задаче
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :time_of_test:      10
        :precondition_time: 10
        :count_of_check:    1
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ""
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :step: Отправляем запрос через Postman на сохранение ЮЛ в ЕРК

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "УНП/Идент. номер нерез."
    value = '555222333'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Выбираем карточку созданного клиента

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента юридического лица" выводится уведомление «Обновление карточки клиента было выполнено более 1 года назад!»

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_19(app, db_credo):
    """
    {#
        :id:                53753_19
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка соответствия результата поиска полной карточки юридического лица и всех связанных субъектов с данными в ЕРК
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      У тестового юридического лица заполнены все теги в ЕРК
        :precondition:      У тестового юридического лица есть связанные субъекты
        :precondition:      У тестовых клиентов связанных с юридическим лицом заполнены все поля
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :comment:           Запрос поиска юридического лица в ЕРК аналогичен поиску физического лица
        :source_point:      п. 3.7.1, 4.3 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 20
        :time_of_test:      15
        :count_of_check:    4
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :step: Отправляем запрос через Postman на поиск юридического лица в ЕРК
    # :step: Отправляем запросы через Postman на поиск клиентов в ЕРК

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "УНП/Идент. номер нерез."
    value = '321121123'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Выбираем карточку клиента

    # :newpage: #######################################################################################################

    # :assert: Все поля полной карточки клиента юридичиского лица заполнены данными из ЕРК
    # :assert: У юридического лица заполнены карточки "Информация о руководителе" и "Информация о лице, осуществляющем руководство бухгалтерским учетом" теми же клиентами, что и в ЕРК
    # :assert: Данные в блоке "Информация о руководителе" на карточке клиента соответствуют данным клиента в ЕРК
    # :assert: Данные в блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" на карточке клиента соответствуют данным клиента в ЕРК

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_20(app, db_credo):
    """
    {#
        :id:                53753_20
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка соответствия результата поиска полной карточки индивидуального предпринимателя и всех связанных субъектов с данными в ЕРК
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      У тестового индивидуального предпринимателя заполнены все теги в ЕРК
        :precondition:      У тестового индивидуального предпринимателя есть связанные субъекты
        :precondition:      У тестового клиента связанного с юридическим лицом заполнены все поля
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :comment:           Запрос поиска юридического лица в ЕРК аналогичен поиску физического лица
        :source_point       п. 3.7.1
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 20
        :time_of_test:      15
        :count_of_check:    3
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :step: Отправляем запрос через Postman на поиск индивидуального предпринимателя в ЕРК
    # :step: Отправляем запрос через Postman на поиск клиента в ЕРК

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "УНП/Идент. номер нерез."
    value = '321121123'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Выбираем карточку клиента

    # :newpage: #######################################################################################################

    # :assert: Все поля полной карточки клиента индивидуального предпринимателя заполнены данными из ЕРК
    # :assert: У индивидуального предпринимателя заполнена карточка "Информация о связанном с ИП физическом лице" тем же клиентом, что и в ЕРК
    # :assert: Данные в блоке "Информация о связанном с ИП физическом лице" на карточке клиента соответствуют данным клиента в ЕРК

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_21(app, db_credo):
    """
    {#
        :id:                53753_21
        :priority:          Средний
        :module:            ЕФР
        :description:       На проверке УФМ произошло совпадение. Рассылка рассылки уведомлений о совпадении в Siron KYC не осуществляется.
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ЮЛ
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "да"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У ЮЛ имеются данные руководителя и бенефициарных владельцев
        :precondition:      Параметр kyc_emails на продукте/варианте не заполнен
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      20
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'МОЯ ОБОРОНА'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Добавить бенифициарного владельца"
    # :step: Заполняем поле "Фамилия"
    value = 'Лукашенко'
    # :step: Заполняем поле "Имя"
    value = 'Александр'
    # :step: Нажимаем кнопку "Добавить"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Подтверждение статуса проверки клиента" KYC статус для бенефициарного владельца "Лукашенко Александр" = На проверке УФМ (произошло совпадение)
    # :assert: Рассылка уведомлений о совпадении в Siron KYC отсутствует, ошибки нет


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_22(app, db_credo):
    """
    {#
        :id:                53753_22
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка получения из Siron статуса "check" = На проверке УФМ (произошло совпадение)  и отправки email на адреса из параметра «Список адресов email УФМ для рассылки уведомлений о совпадении в Siron KYC»
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ЮЛ
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "да"
        :precondition:      Пользователь авторизирован в СКЗ (Левданский Александр Вячеславович. Телефон: +375336435645)
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У ЮЛ имеются данные руководителя и бенефициарных владельцев
        :precondition:      Параметр kyc_emails на продукте/варианте заполнен значениями kosovec@itwlocal.by;maslov@itwlocal.by
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      20
        :count_of_check:    4
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: создалась заявка №2451416
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'МОЯ ОБОРОНА'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Добавить бенифициарного владельца"
    # :step: Заполняем поле "Фамилия"
    value = 'Лукашенко'
    # :step: Заполняем поле "Имя"
    value = 'Александр'
    # :step: Нажимаем кнопку "Добавить"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Подтверждение статуса проверки клиента" KYC статус для бенефициарного владельца "Лукашенко Александр" = На проверке УФМ (произошло совпадение)
    # :assert: Пользователям kosovec и maslov отправлены сообщения с темой «Совпадение в ЕФР со списками по заявке №2451416 и с текстом "Произошло совпадение в ЕФР со списками [Бенифициар] АЛЕКСАНДР ЛУКАШЕНКО с ID 2451469_5386c476. Работник банка: Левданский Александр Вячеславович. Телефон: +375336435645."
    # :assert: На форме отображаются кнопки "Отмена" и "Проверить статус"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_23(app, db_credo):
    """
    {#
        :id:                53753_23
        :priority:          Средний
        :module:            ЕФР
        :description:       Ошибка проверки клиента в KYC(Siron). Проверка отображения текста "Ошибка проверки клиента в KYC(Siron)", доступности задачи с ошибкой, отправки email пользователям с ролью admins.
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ЮЛ
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "да"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У ЮЛ имеются данные руководителя и бенефициарных владельцев
        :precondition:      Пользователь levdanskij авторизирован
        :precondition:      Пользователь levdanskij инициатор заявки
        :precondition:      Пользователь levdanskij без роли admins
        :precondition:      Пользователь maslov с ролью admins
        :precondition:      Пользователь kosovec без роли admins
        :precondition:      Для получения ошибки сервиса KYC удаляем несколько строк в файле KYCGetScorePersons_in.xsl
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      20
        :count_of_check:    10
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: создается заявка с №2451469
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'МОЯ ОБОРОНА'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме выводится ошибка с текстом "Ошибка проверки клиента в KYC(Siron)"
    # :assert: Статус заявки "Ошибка проверки клиента в KYC(Siron)"
    # :assert: Задача доступна пользователям levdanskij и maslov
    # :assert: Задача не доступна пользователю kosovec
    # :assert: Пользователю maslov отправлено сообщение об ошибке с темой "Ошибка проверки клиента в KYC(Siron) по заявке 2451469" с текстом "Ошибка сервиса"
    # :assert: Пользователям levdanskij и kosovec сообщения не отправлены
    # :step: Нажимаем кнопку "Завершить"
    # :assert: Запрос повторяется с результатом Ошибка проверки клиента в KYC(Siron)
    # :step: Возвращаем удалённые строки в файле KYCGetScorePersons_in.xsl
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Запрос повторяется, выполнилась проверка KYC для клиента, руководителя и бенефициарных владельцев
    # :assert: На форме "Подтверждение статуса проверки клиента" в блоке "KYC статус:" отображаются статусы по субъектам, полученные в задаче «Проверка клиента в KYC(Siron)» (для клиента, руководителя и бенефициарного владельца = Совпадений нет после проверки)


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_24(app, db_credo):
    """
    {#
        :id:                53753_24
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка корректности статусов заявки при редактировании индивидуального предпринимателя
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      Тестовый индивидуальный предприниматель существует в ЕРК, все ключевые данные присутствуют
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :source_point:      п.п. 1.5, 2.1 3.7.3, 5.2, 5.3, 5.4, 5.5, 6.3.3, 11.7 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 5
        :time_of_test:      15
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "УНП/Идент. номер нерез."
    value = '453781649'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :assert: Заявка в статусе "Поиск карточки связанного субъекта"
    # :step: На форме "Поиск карточки связанного физического лица" заполняем личный номер клиента
    value = '6131183M846PB7'
    # :step: нажимаем "Поиск Карточки клиента"
    # :step: Выбираем карточку Клиента

    # :newpage: #######################################################################################################

    # :assert: Заявка в статусе "Ввод параметров связанного субъекта"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_25(app, db_credo):
    """
    {#
        :id:                53753_25
        :priority:          Средний
        :module:            Ядро
        :description:       Проверка создания справочника "Тип субъекта по классификации НБРБ"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = нет
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 5
        :time_of_test:      10
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = ''
    VARIANT = ''

    # :newpage: #######################################################################################################

    # :step: Переходим в меню СКЗ
    # :step: Переходим в список справочников
    # :assert: В списке справочников присутсвует "Тип субъекта по классификации НБРБ"
    # :step: Переходим к списку полей справочника "Тип субъекта по классификации НБРБ"
    # :assert: В списке полей справочника присутсвуют "Код ЕРК", "Код группы" и "Тип субъекта ЕРК"

    logrecord = "{time} [{module}] -- [{method}] Test success!!!".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(file)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_53753_26(app, db_credo):
    """
    {#
        :id:                53753_26
        :priority:          Средний
        :module:            Ядро
        :description:       Проверка создания справочника "ТИП СЧЕТА"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = нет
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 5
        :time_of_test:      10
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = ''
    VARIANT = ''

    # :newpage: #######################################################################################################

    # :step: Переходим в меню СКЗ
    # :step: Переходим в список справочников
    # :assert: В списке справочников присутсвует "ТИП СЧЕТА"
    # :step: Переходим к списку полей справочника "ТИП СЧЕТА"
    # :assert: В списке полей справочника присутсвуют "Код Бисквит", "Использование в процессах"

    logrecord = "{time} [{module}] -- [{method}] Test success!!!".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(file)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_27(app, db_credo):
    """
    {#
        :id:                53753_27
        :priority:          Средний
        :description:       Форма "Поиск карточки клиента в учетной системе Банка". Проверка наличия всех элементов интерфейса
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      Вараметр пользователя useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В файле itwCredo-system.properties параметр supportPhone = 8017 229 15 49
        :precondition:      Параметр пользователя location_sales "Точка продаж" = Отдел розничных операций / г.Минск ул.Притыцкого 60/2
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      30
        :count_of_check:    13
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: В верхней части формы "Поиск карточки клиента в учетной системе Банка" размещается статичная шапка с надписью "Белгазпромбанк Техподдержка: 8017 229 15 49"
    # :assert: Номер телефона – значение конфигурационного параметра supportPhone (itwCredo-system.properties)
    # :assert: На форме присутствует значок "Меню-гамбургер"
    # :assert: На форме по центру относительно шапки присутствует надпись «ЕДИНОЕ ФРОНТАЛЬНОЕ РЕШЕНИЕ»
    # :assert: На форме слева от значка «Меню-гамбургера» присутствует ФИО пользователя и точка продаж пользователя
    # :assert: ФИО пользователя и точка продаж пользователя не кликабельны
    # :assert: Точка продаж пользователя – значение строки «Точка продаж» в параметрах пользователя
    # :step: Пробуем кликнуть по надписи "Белгазпромбанк Техподдержка: 8017 229 15 49"
    # :assert: Некликабельно
    # :step: Пробуем кликнуть по значку «Меню-гамбургер»
    # :assert: Меню является кликабельным – при нажатии на значок раскрывается меню с доступными для выбора пунктами
    # :step: Повторно нажимаем на значок «Меню-гамбургер»
    # :assert: Открытое «Меню-гамбургер» скрывается
    # :step: Кликаем по значку «Меню-гамбургер»
    # :step: Нажимаем на любую часть формы
    # :assert: Открытое «Меню-гамбургер» скрывается
    # :step: Кликаем по значку «Меню-гамбургер»
    # :step: Нажимаем "Сменить пароль"
    # :assert: Открытое «Меню-гамбургер» скрывается

    # :newpage: #######################################################################################################

    # :step: На форме "Смена пароля" кликаем по надписи "ЕДИНОЕ ФРОНТАЛЬНОЕ РЕШЕНИЕ"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" пробуем кликнуть по надписи "ЕДИНОЕ ФРОНТАЛЬНОЕ РЕШЕНИЕ"

    # :newpage: #######################################################################################################

    # :assert: Осуществляется переход на форму "Поиск клиента"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_28(app, db_credo):
    """
    {#
        :id:                53753_28
        :priority:          Средний
        :description:       Форма "Реквизиты клиента юридического лица". Проверка наличия всех элементов интерфейса
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      Параметр пользователя useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      Параметр пользователя location_sales "Точка продаж" = Отдел розничных операций / г.Минск ул.Притыцкого 60/2
        :precondition:      В файле itwCredo-system.properties параметр supportPhone = 8017 229 15 49
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      30
        :count_of_check:    10
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '151511516'
    # :step: Нажимаем "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :assert: В верхней части формы "Реквизиты клиента юридического лица" размещается статичная шапка с надписью "Белгазпромбанк Техподдержка: 8017 229 15 49"
    # :assert: Номер телефона – значение конфигурационного параметра supportPhone (itwCredo-system.properties)
    # :assert: На форме присутствует значок "Меню-гамбургер"
    # :assert: На форме по центру относительно шапки присутствует надпись «ЕДИНОЕ ФРОНТАЛЬНОЕ РЕШЕНИЕ»
    # :assert: На форме слева от значка «Меню-гамбургера» присутствует ФИО пользователя и точка продаж пользователя
    # :assert: ФИО пользователя и точка продаж пользователя не кликабельны
    # :assert: Точка продаж пользователя – значение строки «Точка продаж» в параметрах пользователя
    # :step: Пробуем кликнуть по надписи "Белгазпромбанк Техподдержка: 8017 229 15 49"
    # :assert: Некликабельно
    # :step: Пробуем кликнуть по значку «Меню-гамбургер»
    # :assert: Меню является кликабельным – при нажатии на значок раскрывается меню с доступными для выбора пунктами
    # :step: Повторно нажимаем на значок «Меню-гамбургер»
    # :assert: Открытое «Меню-гамбургер» скрывается
    # :step: Кликаем по значку «Меню-гамбургер»
    # :step: Нажимаем на любую часть формы
    # :assert: Открытое «Меню-гамбургер» скрывается
    # :step: Кликаем по значку «Меню-гамбургер»
    # :step: Нажимаем "Сменить пароль"
    # :assert: Открытое «Меню-гамбургер» скрывается

    # :newpage: #######################################################################################################

    # :step: На форме "Смена пароля" кликаем по надписи "ЕДИНОЕ ФРОНТАЛЬНОЕ РЕШЕНИЕ"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '151511516'
    # :step: Нажимаем "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лиц" пробуем кликнуть по надписи "ЕДИНОЕ ФРОНТАЛЬНОЕ РЕШЕНИЕ"

    # :newpage: #######################################################################################################

    # :assert: Осуществляется переход на форму "Поиск клиента"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_29(app, db_credo):
    """
    {#
        :id:                53753_29
        :priority:          Средний
        :description:       Формы поиск третьего лица в учетной системе банка. Проверка наличия всех элементов интерфейса
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      параметр пользователя useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      Параметр пользователя location_sales "Точка продаж" = Отдел розничных операций / г.Минск ул.Притыцкого 60/2
        :precondition:      В файле itwCredo-system.properties параметр supportPhone = 8017 229 15 49
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      30
        :count_of_check:    10
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '151511516'
    # :step: Нажимаем "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Информация о руководителе" нажимаем кнопку "Изменить связь"

    # :newpage: #######################################################################################################

    # :assert: В верхней части формы "Поиск карточки руководителя" размещается статичная шапка с надписью "Белгазпромбанк Техподдержка: 8017 229 15 49"
    # :assert: Номер телефона – значение конфигурационного параметра supportPhone (itwCredo-system.properties)
    # :assert: На форме присутствует значок "Меню-гамбургер"
    # :assert: На форме по центру относительно шапки присутствует надпись «ЕДИНОЕ ФРОНТАЛЬНОЕ РЕШЕНИЕ»
    # :assert: На форме слева от значка «Меню-гамбургера» присутствует ФИО пользователя и точка продаж пользователя
    # :assert: ФИО пользователя и точка продаж пользователя не кликабельны
    # :assert: Точка продаж пользователя – значение строки «Точка продаж» в параметрах пользователя
    # :step: Пробуем кликнуть по надписи "Белгазпромбанк Техподдержка: 8017 229 15 49"
    # :assert: Некликабельно
    # :step: Пробуем кликнуть по значку «Меню-гамбургер»
    # :assert: Меню является кликабельным – при нажатии на значок раскрывается меню с доступными для выбора пунктами
    # :step: Повторно нажимаем на значок «Меню-гамбургер»
    # :assert: Открытое «Меню-гамбургер» скрывается
    # :step: Кликаем по значку «Меню-гамбургер»
    # :step: Нажимаем на любую часть формы
    # :assert: Открытое «Меню-гамбургер» скрывается
    # :step: Кликаем по значку «Меню-гамбургер»
    # :step: Нажимаем "Сменить пароль"
    # :assert: Открытое «Меню-гамбургер» скрывается

    # :newpage: #######################################################################################################

    # :step: На форме "Смена пароля" кликаем по надписи "ЕДИНОЕ ФРОНТАЛЬНОЕ РЕШЕНИЕ"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '151511516'
    # :step: Нажимаем "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Информация о руководителе" нажимаем кнопку "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки руководителя" пробуем кликнуть по надписи "ЕДИНОЕ ФРОНТАЛЬНОЕ РЕШЕНИЕ"

    # :newpage: #######################################################################################################

    # :assert: Осуществляется переход на форму "Поиск клиента"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_30(app, db_credo):
    """
    {#
        :id:                53753_30
        :priority:          Средний
        :description:       Форма "Подтверждение статуса проверки клиента". Проверка наличия всех элементов интерфейса
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      Параметр пользователя useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      Параметр пользователя location_sales "Точка продаж" = Отдел розничных операций / г.Минск ул.Притыцкого 60/2
        :precondition:      В файле itwCredo-system.properties параметр supportPhone = 8017 229 15 49
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      30
        :count_of_check:    10
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '151511516'
    # :step: Нажимаем "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: В верхней части формы "Подтверждение статуса проверки клиента" размещается статичная шапка с надписью "Белгазпромбанк Техподдержка: 8017 229 15 49"
    # :assert: Номер телефона – значение конфигурационного параметра supportPhone (itwCredo-system.properties)
    # :assert: На форме присутствует значок "Меню-гамбургер"
    # :assert: На форме по центру относительно шапки присутствует надпись «ЕДИНОЕ ФРОНТАЛЬНОЕ РЕШЕНИЕ»
    # :assert: На форме слева от значка «Меню-гамбургера» присутствует ФИО пользователя и точка продаж пользователя
    # :assert: ФИО пользователя и точка продаж пользователя не кликабельны
    # :assert: Точка продаж пользователя – значение строки «Точка продаж» в параметрах пользователя
    # :step: Пробуем кликнуть по надписи "Белгазпромбанк Техподдержка: 8017 229 15 49"
    # :assert: Некликабельно
    # :step: Пробуем кликнуть по значку «Меню-гамбургер»
    # :assert: Меню является кликабельным – при нажатии на значок раскрывается меню с доступными для выбора пунктами
    # :step: Повторно нажимаем на значок «Меню-гамбургер»
    # :assert: Открытое «Меню-гамбургер» скрывается
    # :step: Кликаем по значку «Меню-гамбургер»
    # :step: Нажимаем на любую часть формы
    # :assert: Открытое «Меню-гамбургер» скрывается
    # :step: Кликаем по значку «Меню-гамбургер»
    # :step: Нажимаем "Сменить пароль"
    # :assert: Открытое «Меню-гамбургер» скрывается

    # :newpage: #######################################################################################################

    # :step: На форме "Смена пароля" кликаем по надписи "ЕДИНОЕ ФРОНТАЛЬНОЕ РЕШЕНИЕ"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '151511516'
    # :step: Нажимаем "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение статуса проверки клиента" пробуем кликнуть по надписи "ЕДИНОЕ ФРОНТАЛЬНОЕ РЕШЕНИЕ"

    # :newpage: #######################################################################################################

    # :assert: Осуществляется переход на форму "Поиск клиента"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_31(app, db_credo):
    """
    {#
        :id:                53753_31
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка формирования печатных форм и их сохранение в парметрах заявки
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      Тестовый клиент существует в ЕРК, все ключевые данные присутствуют
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :source_point:      п.п. 10.1, 10.2, 10.3, 10.4 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      25
        :count_of_check:    4
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'РОССИЙСКАЯ ФЕДЕРАЦИЯ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '12345678'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Анкета отображается в виде ссылки для скачивания
    # :step: На форме "Подтверждение статуса проверки клиента" нажимаем "Анкета вопросник для клиента – организации"
    # :assert:  Анкета сформирована в формате "docx"
    # :assert: Анкета соответствует шаблону "Анкета вопросник для клиента – организации"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: В СКЗ в параметре заявки doc_anketa сохранён документ "Анкета вопросник для клиента – организации", доступен для скачивания

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_32(app, db_credo):
    """
    {#
        :id:                53753_32
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка корректности работы блока сведений о счетах в других банках и отражения этих сведений в анкете
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      Тестовый клиент существует в ЕРК, все ключевые данные присутствуют
        :precondition:      У тестового клиенте нет сведений о счетах в других банках
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      25
        :count_of_check:    14
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'CorporateFind'
    VARIANT = 'CustomerFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '151511516'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о счетах, открытых в других банках (при наличии)" нажимаем "Добавить сведения о счете"
    # :assert: Появляется модальное с полями "Код банка", "Номер счета", "Тип счета", "Валюта счета"
    # :step: Нажимаем на поле "Код банка"
    # :assert: Всплывает модальное окно с полями справочника «Наименование», «Тип кода», «Код», «Страна», «Город», «Адрес» и полем для поиска
    # :step: Вводим в поле поиска частичное наименование банка
    value = 'belar'
    # :assert: В таблице выводятся банки у который в наименовании присутствует введённое значение
    # :step: Вводим в поле поиска тип кода
    value = 'BIC'
    # :assert: В таблице выводятся банки у который в типе кода присутствует введённое значение
    # :step: Вводим в поле поиска частичный код банк
    value = 'AA'
    # :assert: В таблице выводятся банки у который в коде присутствует введённое значение
    # :step: Выбираем банк из таблицы
    # :assert: На форме "Сведения о счетах" появилась ошибка "Необходимо заполнить все поля"
    # :assert: На форме "Сведения о счетах" поле "Наименование банка" заполнилось автоматически
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о счетах, открытых в других банках (при наличии)" заполняем поле "Номер счета"
    value =  '123456'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о счетах, открытых в других банках (при наличии)" заполняем поле "Тип счета"
    value =  'Благотворительный'
    # :assert: В поле "Тип счета" выводятся значения из справочника СКЗ «Тип счета», у которых в поле «Использование счета в процессах» указана метка «#Карточка клиента юридического лица»
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о счетах, открытых в других банках (при наличии)" заполняем поле "Валюта счета"
    value =  'ЕВРО'
    # :assert: В поле "Валюта счета" выводятся значения из из раздела «Валюты», у которых в поле «Метки» указано значение «#Карточка клиента юридического лица»
    # :assert: На форме "Сведения о счетах" пропадает ошибка "Необходимо заполнить все поля"
    # :step: Нажимаем "Добавить"
    # :assert: На блоке "Сведения о счетах, открытых в других банках (при наличии)" появилась счета в другом банке

    # :step: Нажимаем "Добавить сведения о счете"
    # :step: Нажимаем на поле "Код банка"
    # :step: Вводим в поле поиска наименование банка
    value = 'ABN AMRO BANK N.V. BELGIAN BRANCH PELIKAANSTRAAT 70-76, ANTWERPEN, BELGIUM'
    # :step: Выбираем банк из таблицы
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о счетах, открытых в других банках (при наличии)" заполняем невалидным значением поле "Номер счета" с кириллицей
    value =  'счет-1/1.2'
    # :assert: Выводится сообщение об ошибке ввода "Неверный формат"
    # :step: Заполняем поле "Номер счета" невалидным значением с спецсимволом "$"
    value =  'schet-1/1.2$'
    # :assert: Выводится сообщение об ошибке ввода "Неверный формат"
    # :step: Заполняем поле "Номер счета"
    value =  'schet-1/1.2'
    # :step: Заполняем поле "Тип счета"
    value =  'СПЕЦИАЛЬНЫЙ СЧЕТ'
    # :step: Заполняем поле "Валюта счета"
    value =  'Белорусский рубль'
    # :step: Нажимаем "Добавить"
    # :assert: На блоке "Сведения о счетах, открытых в других банках (при наличии)" появилась второй счет в другом банке

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение статуса проверки клиента" нажимаем "Анкета вопросник для клиента – организации"
    # :assert: В анкете в пункте 19 через ";" перечислены счета, открытые в других банках (наименование или код банка; тип счета, валюта счета)
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: В ЕРК у клиента появился тег <gc:OtherBanksAccounts>#123456#EUR#11#AAPEGB21XXX#AAC CAPITAL PARTNERS LIMITED 1 CAREY LANE, LONDON, UNITED KINGDOM@#schet-1/1#BYN#R2#ABNABE2AIDJ#ABN AMRO BANK N.V. BELGIAN BRANCH PELIKAANSTRAAT 70-76, ANTWERPEN, BELGIUM</gc:OtherBanksAccounts>

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_33(app, db_credo):
    """
    {#
        :id:                53753_33
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка корректности удаления сведений о счетах в других банках
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      Тестовый клиент существует в ЕРК, все ключевые данные присутствуют
        :precondition:      У тестового клиента есть сведения о счетах в других банках
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      25
        :count_of_check:    3
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'CorporateFind'
    VARIANT = 'CustomerFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '151511516'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Сведения о счетах, открытых в других банках (при наличии)" удаляем карточку со счетом, открытом в другом банке
    # :assert: На форме "Реквизиты клиента юридического лица" в блоке "Сведения о счетах, открытых в других банках (при наличии)" удалилась карточка со счетом, открытом в другом банке

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение статуса проверки клиента" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: В СКЗ на параметрах юридического лица удалилось значение параметра "otherBanksAccounts"
    # :step: В Postman посылаем запрос на поиск юридического лица
    # :assert: В ЕРК у юридического лица нет тега <gc:OtherBanksAccounts>

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_53753_34(app, db_credo):
    """
    {#
        :id:                53753_34
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка вывода ошибки при сохранении ЮЛ и отправки e-mail пользователям с ролью admins
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Инициатор заявки пользователь semenov имеет роль msb_front_office
        :precondition:      Инициатор заявки пользователь semenov не имеет роль admins
        :precondition:      Пользователь gulevich имеет роль admins
        :precondition:      Пользователь maslov не имеет роли admins
        :precondition:      Тестовый клиент существует в ЕРК, все ключевые данные присутствуют
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :source_point:      п.п. 9.4, 9.5, 9.6, 9.7, 9.8, 9.9 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      25
        :count_of_check:    7
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'CorporateFind'
    VARIANT = 'CustomerFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'РОССИЙСКАЯ ФЕДЕРАЦИЯ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '12345678'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем кнопку "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение поля "Организационно-правовая форма клиента"
    value = 'ФОНД'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Название"
    value = '123456789'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Полное наименование"
    value = '123'

    # :step: Выбираем значение из выпадающего списка "Тип субъекта", у которого в справочнике «Тип субъекта» поле «Тип субъекта ЕРК» = «3»
    value = 'ИНДИВИДУАЛЬНЫЕ ПРЕДПРИНИМАТЕЛИ'

    # :step: Выбираем значение из выпадающего списка "Оргструктура"
    value = '10 - Юридические лица'

    # :step: Выбираем значение из выпадающего списка "Тип сектора экономики (форма собственности)"
    value = 'Государственная собственность (110+120)'

    # :step: Выбираем значение из выпадающего списка "Вид деятельности (код ОКЭД)"
    value = '01111 Выращивание зерновых и бобовых культур'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем числовым, целым (без пробелов) значением "Количество сотрудников"
    value = '12'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем числовым, целым (без пробелов) значением "Сумма"
    value = '15464'

    # :step: Выбираем значение из выпадающего списка "Валюты"
    value = 'Белорусский рубль'

    # :step: Выбираем значение из выпадающего списка "Клиентский блок"
    value = 'Корпоративный бизнес'

    # :step: Выбираем значение из выпадающего списка "Объем выручки"
    value = 'До 3 млн.USD'

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информацию о связанном физическом лице"

    # :newpage: #######################################################################################################

    # :step: заполняем поле "Личный номер"
    value = '6131183M846PB7'

    # :step: Нажимаем на кнопку "Поиск Карточки клиента"

    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Адрес регистрации" заполняем поле "Страна"
    value =  'БЕЛАРУСЬ'
    # :step: Указываем Город или населенный пункт (Блок Адрес регистрации)
    value =  'МИНСК Г'
    # :step: Указываем Улицу (Блок Адрес регистрации)
    value =  'СОВЕТСКАЯ УЛ'
    # :step: Указываем Дом(Блок Адрес регистрации)
    value =  '14'
    # :step: Указываем Квартира/офис(Блок Адрес регистрации)
    value =  '22'
    # :step: Устанавливаем отметку чекбокса "Аналогично месту регистрации"

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Наименование регистрирующего органа"
    value =  'регистрирующий орган'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" выбираем значение из поля "Наименование документа о регистрации"
    value =  'дополнение к уставу'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Дата регистрации"
    value =  '20.06.2019'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Регистрационный номер"
    value =  '1111'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Ответственное подразделение"
    value =  'Управление сопровождения розничных операций'

    # :step: Изменим настройки доступа сервера к ЕРК (адрес = значение параметра "erk") в файле "..\standalone\configuration\itwGateWS-url.properties" на недействующие

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Заявка переходит на форму "Отображение ошибки поиска клиента" с ошибкой: "ERROR: Connection to http://172.22.157.12:2522 refused"
    # :assert: В СКЗ по заявке существует задача "Отображение ошибки поиска клиента"
    # :assert: Задача с ошибкой доступна пользователю gulevich и инициатору заявки
    # :assert: Задача с ошибкой не доступна пользователю maslov
    # :assert: Всем пользователям с ролью admins приходит сообщение с темой «Ошибка сохранения карточки клиента юридического лица по заявке <#>» и текстом ошибки

    # :step: Вернем исходные (рабочие и валидные) настройки доступа сервера к ЕРК (адрес = значение параметра "erk") в файле "..\standalone\configuration\itwGateWS-url.properties"
    # :step: Выполняем задачу "Отображение ошибки поиска клиента" по заявке

    # :newpage: #######################################################################################################

    # :assert: Переходим на задачу "Подтверждение статуса проверки клиента"
    # :step: Нажимаем кнопку "Завершить" на форме "Подтверждение статуса проверки клиента"

    # :newpage: #######################################################################################################

    # :assert: Заявка переходит в статус "Окончена обработка"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_35(app, db_credo):
    """
    {#
        :id:                53753_35
        :priority:          Средний
        :module:            Ядро
        :description:       Проверика создания пунктов меню и параметров продукта/варианта
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = нет
        :source_point:      п.п. 1.2, 1.4, 1.6, 1.7, 9.13
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 5
        :time_of_test:      15
        :count_of_check:    7
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = ''
    VARIANT = ''

    # :newpage: #######################################################################################################

    # :step: Переходим в меню
    # :assert: В меню присутствует пункт "Список юридических лиц"
    # :step: Снимаем с пользователя права доступа "Работа с юридическим лицом"
    # :assert: В меню отстутствует пункт "Список юридических лиц"
    # :step: Устанавливаем пользователю права доступа "Работа с юридическим лицом"
    # :step: Переходим в список продуктов
    # :step: Переходим к списку вариантов продукта "Регистрация/изменение данных клиента"
    # :assert: На продукте "Регистрация/изменение данных клиента" существует вариант "Регистрация/изменение данных юридического лица"
    # :assert: Для варианта "Регистрация/изменение данных юридического лица" создан новый процесс by.itworks.credo.Corporate.Find
    # :step: Переходим к параметрам варианта "Регистрация/изменение данных юридического лица"
    # :assert: В списке присутствует параметр "Проверять клиента в KYC" (doKyc). Логический
    # :assert: В списке присутствует параметр "Логин пользователя в АБС Бисквит" (login_bisquit). Текстовый
    # :assert: Предусмотрен ручной сброс кеша. Описание в WIKI http://192.168.0.4:8088/projects/main_skz/wiki/Analytics

    # :newpage: #######################################################################################################

    # :step: Переходим в список продуктов
    # :step: Переходим в список параметров продукта changing_customer

    # :newpage: #######################################################################################################

    # :assert: В списке параметров присутствует текстовый параметр "kyc_emails" (Список адресов email УФМ для рассылки уведомлений о совпадении в Siron KYC)

    # :newpage: #######################################################################################################

    # :step: Переходим в список вариантов
    # :step: Переходим в список параметров варианта CORPORATEFIND

    # :newpage: #######################################################################################################

    # :assert: В списке параметров продукта "CORPORATEFIND" присутствует текстовый параметр "kyc_emails" (Список адресов email УФМ для рассылки уведомлений о совпадении в Siron KYC)

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_36(app, db_credo):
    """
    {#
        :id:                53753_36
        :priority:          Средний
        :module:            Ядро
        :description:       Проверка доступа оформления заявки для роли msb_front_office
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      В списке ролей существует роль "msb_front_office"
        :precondition:      У пользователя есть роль "msb_front_office"
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :source_point:      п.п. 1.8
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    3
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер
    value = '5071190M547PB3'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберете продукт" в блоке "Действия с продуктами"
    value = 'Регестрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберете вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: Заявка переходит на форму "Поиск карточки клиента в учетной системе Банка"
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '151511516'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Отмена"
    # :assert: На заявке пользователь видит задачу "Реквизиты клиента юридического лица"
    # :step: У пользвователя удаляем роль "msb_front_office"
    # :assert: На заявке пользователь не видит задачу "Реквизиты клиента юридического лица"

    logrecord = "{time} [{module}] -- [{method}] Test success!!!".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(file)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_37(app, db_credo):
    """
    {#
        :id:                53753_37
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка вывода ошибки при сохранении карточки руководителя и отправки e-mail пользователям с ролью admins
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Инициатор заявки пользователь semenov имеет роль msb_front_office
        :precondition:      Инициатор заявки пользователь semenov не имеет роль admins
        :precondition:      Пользователь gulevich имеет роль admins
        :precondition:      Пользователь maslov не имеет роли admins
        :precondition:      Тестовый клиент существует в ЕРК, все ключевые данные присутствуют
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :source_point:      п.п. 8.4, 8.5, 8.6, 8.7, 8.8, 8.9 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      25
        :count_of_check:    7
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'CorporateFind'
    VARIANT = 'CustomerFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'РОССИЙСКАЯ ФЕДЕРАЦИЯ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '12345678'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем кнопку "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение поля "Организационно-правовая форма клиента"
    value = 'ФОНД'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Название"
    value = '123456789'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Полное наименование"
    value = '123'

    # :step: Выбираем значение из выпадающего списка "Тип субъекта", у которого в справочнике «Тип субъекта» поле «Тип субъекта ЕРК» = «2»
    value = 'фондовые и валютные биржи'

    # :step: Выбираем значение из выпадающего списка "Оргструктура"
    value = '10 - Юридические лица'

    # :step: Выбираем значение из выпадающего списка "Тип сектора экономики (форма собственности)"
    value = 'Государственная собственность (110+120)'

    # :step: Выбираем значение из выпадающего списка "Вид деятельности (код ОКЭД)"
    value = '01111 Выращивание зерновых и бобовых культур'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем числовым, целым (без пробелов) значением "Количество сотрудников"
    value = '12'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем числовым, целым (без пробелов) значением "Сумма"
    value = '15464'

    # :step: Выбираем значение из выпадающего списка "Валюты"
    value = 'Белорусский рубль'

    # :step: Выбираем значение из выпадающего списка "Клиентский блок"
    value = 'Корпоративный бизнес'

    # :step: Выбираем значение из выпадающего списка "Объем выручки"
    value = 'До 3 млн.USD'

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информацию о руководителе" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: заполняем поле "Личный номер"
    value = '6131183M846PB7'

    # :step: Нажимаем на кнопку "Поиск Карточки клиента"

    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: Меняем телефон на карточке клиента
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Адрес регистрации" заполняем поле "Страна"
    value =  'БЕЛАРУСЬ'
    # :step: Указываем Город или населенный пункт (Блок Адрес регистрации)
    value =  'МИНСК Г'
    # :step: Указываем Улицу (Блок Адрес регистрации)
    value =  'СОВЕТСКАЯ УЛ'
    # :step: Указываем Дом(Блок Адрес регистрации)
    value =  '14'
    # :step: Указываем Квартира/офис(Блок Адрес регистрации)
    value =  '22'
    # :step: Устанавливаем отметку чекбокса "Аналогично месту регистрации"

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Наименование регистрирующего органа"
    value =  'регистрирующий орган'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" выбираем значение из поля "Наименование документа о регистрации"
    value =  'дополнение к уставу'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Дата регистрации"
    value =  '20.06.2019'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Регистрационный номер"
    value =  '1111'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Ответственное подразделение"
    value =  'Управление сопровождения розничных операций'

    # :step: В СКЗ на параметрах клиента в теге <docs> устанавливаем параметр isUsed="false"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Заявка переходит на форму "Отображение ошибки сохранения данных клиента" с ошибкой: "Ошибка сохранения карточки руководителя"
    # :assert: В СКЗ на заявке установлен статус "Ошибка сохранения связанного субъекта"
    # :assert: В СКЗ по заявке существует задача "Отображение ошибки сохранения данных клиента"
    # :assert: Задача с ошибкой доступна пользователю gulevich и инициатору заявки
    # :assert: Задача с ошибкой не доступна пользователю maslov
    # :assert: Всем пользователям с ролью admins приходит сообщение об ошибке с темой «Ошибка сохранения карточки руководителя по заявке <#>» и текстом ошибки

    # :step: Вернем исходное значение параметру isUsed="true"
    # :step: Выполняем задачу "Отображение ошибки сохранения данных клиента" по заявке

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Завершить" на форме "Подтверждение статуса проверки клиента"

    # :newpage: #######################################################################################################

    # :assert: Заявка переходит в статус "Окончена обработка"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_38(app, db_credo):
    """
    {#
        :id:                53753_38
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка вывода ошибки при сохранении лица, осуществляющем руководство бухгалтерским учетом и отправки e-mail пользователям с ролью admins
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Инициатор заявки пользователь semenov имеет роль msb_front_office
        :precondition:      Инициатор заявки пользователь semenov не имеет роль admins
        :precondition:      Пользователь gulevich имеет роль admins
        :precondition:      Пользователь maslov не имеет роли admins
        :precondition:      Тестовый клиент существует в ЕРК, все ключевые данные присутствуют
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :source_point:      п.п. 8.4, 8.5, 8.6, 8.7, 8.8, 8.9 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      25
        :count_of_check:    7
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'CorporateFind'
    VARIANT = 'CustomerFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'РОССИЙСКАЯ ФЕДЕРАЦИЯ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '12345678'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем кнопку "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение поля "Организационно-правовая форма клиента"
    value = 'ФОНД'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Название"
    value = '123456789'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Полное наименование"
    value = '123'

    # :step: Выбираем значение из выпадающего списка "Тип субъекта", у которого в справочнике «Тип субъекта» поле «Тип субъекта ЕРК» = «3»
    value = 'фондовые и валютные биржи'

    # :step: Выбираем значение из выпадающего списка "Оргструктура"
    value = '10 - Юридические лица'

    # :step: Выбираем значение из выпадающего списка "Тип сектора экономики (форма собственности)"
    value = 'Государственная собственность (110+120)'

    # :step: Выбираем значение из выпадающего списка "Вид деятельности (код ОКЭД)"
    value = '01111 Выращивание зерновых и бобовых культур'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем числовым, целым (без пробелов) значением "Количество сотрудников"
    value = '12'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем числовым, целым (без пробелов) значением "Сумма"
    value = '15464'

    # :step: Выбираем значение из выпадающего списка "Валюты"
    value = 'Белорусский рубль'

    # :step: Выбираем значение из выпадающего списка "Клиентский блок"
    value = 'Корпоративный бизнес'

    # :step: Выбираем значение из выпадающего списка "Объем выручки"
    value = 'До 3 млн.USD'

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты"  в блоке "Информацию о лица, осуществляющем руководство бухгалтерским учетом" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: заполняем поле "Личный номер"
    value = '6131183M846PB7'

    # :step: Нажимаем на кнопку "Поиск Карточки клиента"

    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: Меняем телефон на карточке клиента
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Адрес регистрации" заполняем поле "Страна"
    value =  'БЕЛАРУСЬ'
    # :step: Указываем Город или населенный пункт (Блок Адрес регистрации)
    value =  'МИНСК Г'
    # :step: Указываем Улицу (Блок Адрес регистрации)
    value =  'СОВЕТСКАЯ УЛ'
    # :step: Указываем Дом(Блок Адрес регистрации)
    value =  '14'
    # :step: Указываем Квартира/офис(Блок Адрес регистрации)
    value =  '22'
    # :step: Устанавливаем отметку чекбокса "Аналогично месту регистрации"

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Наименование регистрирующего органа"
    value =  'регистрирующий орган'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" выбираем значение из поля "Наименование документа о регистрации"
    value =  'дополнение к уставу'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Дата регистрации"
    value =  '20.06.2019'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Регистрационный номер"
    value =  '1111'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Ответственное подразделение"
    value =  'Управление сопровождения розничных операций'

    # :step: В СКЗ на параметрах клиента в теге <docs> устанавливаем параметр isUsed="false"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Заявка переходит на форму "Отображение ошибки сохранения данных клиента" с ошибкой: "Ошибка сохранения карточки лица, осуществляющем руководство бухгалтерским учетом"
    # :assert: В СКЗ на заявке установлен статус "Ошибка сохранения связанного субъекта"
    # :assert: В СКЗ по заявке существует задача "Отображение ошибки сохранения данных клиента"
    # :assert: Всем пользователям с ролью admins приходит сообщение об ошибке с темой «Ошибка сохранения карточки лица, осуществляющем руководство бухгалтерским учетом по заявке <#>» и текстом ошибки.
    # :assert: Задача с ошибкой доступна пользователю gulevich и инициатору заявки
    # :assert: Задача с ошибкой не доступна пользователю maslov
    # :step: Вернем исходное значение параметру isUsed="true"
    # :step: Выполняем задачу "Отображение ошибки сохранения данных клиента" по заявке

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Завершить" на форме "Подтверждение статуса проверки клиента"

    # :newpage: #######################################################################################################

    # :assert: Заявка переходит в статус "Окончена обработка"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_39(app, db_credo):
    """
    {#
        :id:                53753_39
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка вывода ошибки при сохранении карточки связанного физического лица и отправки e-mail пользователям с ролью admins
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Инициатор заявки пользователь semenov имеет роль msb_front_office
        :precondition:      Инициатор заявки пользователь semenov не имеет роль admins
        :precondition:      Пользователь gulevich имеет роль admins
        :precondition:      Пользователь maslov не имеет роли admins
        :precondition:      Тестовый клиент существует в ЕРК, все ключевые данные присутствуют
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :source_point:      п.п. 8.4, 8.5, 8.6, 8.7, 8.8, 8.9 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      25
        :count_of_check:    7
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'CorporateFind'
    VARIANT = 'CustomerFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'РОССИЙСКАЯ ФЕДЕРАЦИЯ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '12345678'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем кнопку "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение поля "Организационно-правовая форма клиента"
    value = 'ФОНД'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Название"
    value = '123456789'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Полное наименование"
    value = '123'

    # :step: Выбираем значение из выпадающего списка "Тип субъекта", у которого в справочнике «Тип субъекта» поле «Тип субъекта ЕРК» = «3»
    value = 'ИНДИВИДУАЛЬНЫЕ ПРЕДПРИНИМАТЕЛИ'

    # :step: Выбираем значение из выпадающего списка "Оргструктура"
    value = '10 - Юридические лица'

    # :step: Выбираем значение из выпадающего списка "Тип сектора экономики (форма собственности)"
    value = 'Государственная собственность (110+120)'

    # :step: Выбираем значение из выпадающего списка "Вид деятельности (код ОКЭД)"
    value = '01111 Выращивание зерновых и бобовых культур'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем числовым, целым (без пробелов) значением "Количество сотрудников"
    value = '12'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем числовым, целым (без пробелов) значением "Сумма"
    value = '15464'

    # :step: Выбираем значение из выпадающего списка "Валюты"
    value = 'Белорусский рубль'

    # :step: Выбираем значение из выпадающего списка "Клиентский блок"
    value = 'Корпоративный бизнес'

    # :step: Выбираем значение из выпадающего списка "Объем выручки"
    value = 'До 3 млн.USD'

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информацию о связанном физическом лице" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: заполняем поле "Личный номер"
    value = '6131183M846PB7'

    # :step: Нажимаем на кнопку "Поиск Карточки клиента"

    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: Меняем телефон на карточке клиента
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Адрес регистрации" заполняем поле "Страна"
    value =  'БЕЛАРУСЬ'
    # :step: Указываем Город или населенный пункт (Блок Адрес регистрации)
    value =  'МИНСК Г'
    # :step: Указываем Улицу (Блок Адрес регистрации)
    value =  'СОВЕТСКАЯ УЛ'
    # :step: Указываем Дом(Блок Адрес регистрации)
    value =  '14'
    # :step: Указываем Квартира/офис(Блок Адрес регистрации)
    value =  '22'
    # :step: Устанавливаем отметку чекбокса "Аналогично месту регистрации"

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Наименование регистрирующего органа"
    value =  'регистрирующий орган'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" выбираем значение из поля "Наименование документа о регистрации"
    value =  'дополнение к уставу'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Дата регистрации"
    value =  '20.06.2019'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Регистрационный номер"
    value =  '1111'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Ответственное подразделение"
    value =  'Управление сопровождения розничных операций'

    # :step: В СКЗ в параметрах связанного клиента "docs" устанавливаем isUsed="false"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Заявка переходит на форму "Отображение ошибки сохранения данных клиента" с ошибкой: "Ошибка сохранения карточки связанного физического лица"
    # :assert: В СКЗ на заявке установлен статус "Ошибка сохранения связанного субъекта"
    # :assert: В СКЗ по заявке существует задача "Отображение ошибки сохранения данных клиента"
    # :assert: Задача с ошибкой доступна пользователю gulevich и инициатору заявки
    # :assert: Задача с ошибкой не доступна пользователю maslov
    # :assert: Всем пользователям с ролью admins приходит сообщение об ошибке с темой «Ошибка сохранения карточки связанного физического лица по заявке <#>» и текстом ошибки

    # :step: Вернем исходное значение параметру isUsed="true"
    # :step: Выполняем задачу "Отображение ошибки сохранения данных клиента" по заявке

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Завершить" на форме "Подтверждение статуса проверки клиента"

    # :newpage: #######################################################################################################

    # :assert: Заявка переходит в статус "Окончена обработка"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_40(app, db_credo):
    """
    {#
        :id:                53753_40
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка подтверждение статуса клиента
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      Тестовый клиент не существует в ЕРК
        :precondition:      На продукте/варианте параметр doKyc (Проверять клиента в KYC) = да
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :source_point:      п.п. 10.5, 10.6 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      25
        :count_of_check:    4
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'CorporateFind'
    VARIANT = 'CustomerFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'РОССИЙСКАЯ ФЕДЕРАЦИЯ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '12345678'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем кнопку "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение поля "Организационно-правовая форма клиента"
    value = 'ФОНД'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Название"
    value = '123456789'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Полное наименование"
    value = '123'

    # :step: Выбираем значение из выпадающего списка "Тип субъекта", у которого в справочнике «Тип субъекта» поле «Тип субъекта ЕРК» = «3»
    value = 'ИНДИВИДУАЛЬНЫЕ ПРЕДПРИНИМАТЕЛИ'

    # :step: Выбираем значение из выпадающего списка "Оргструктура"
    value = '10 - Юридические лица'

    # :step: Выбираем значение из выпадающего списка "Тип сектора экономики (форма собственности)"
    value = 'Государственная собственность (110+120)'

    # :step: Выбираем значение из выпадающего списка "Вид деятельности (код ОКЭД)"
    value = '01111 Выращивание зерновых и бобовых культур'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем числовым, целым (без пробелов) значением "Количество сотрудников"
    value = '12'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем числовым, целым (без пробелов) значением "Сумма"
    value = '15464'

    # :step: Выбираем значение из выпадающего списка "Валюты"
    value = 'Белорусский рубль'

    # :step: Выбираем значение из выпадающего списка "Клиентский блок"
    value = 'Корпоративный бизнес'

    # :step: Выбираем значение из выпадающего списка "Объем выручки"
    value = 'До 3 млн.USD'

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информацию о связанном физическом лице" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: заполняем поле "Личный номер"
    value = '6131183M846PB7'

    # :step: Нажимаем на кнопку "Поиск Карточки клиента"

    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Адрес регистрации" заполняем поле "Страна"
    value =  'БЕЛАРУСЬ'
    # :step: Указываем Город или населенный пункт (Блок Адрес регистрации)
    value =  'МИНСК Г'
    # :step: Указываем Улицу (Блок Адрес регистрации)
    value =  'СОВЕТСКАЯ УЛ'
    # :step: Указываем Дом(Блок Адрес регистрации)
    value =  '14'
    # :step: Указываем Квартира/офис(Блок Адрес регистрации)
    value =  '22'
    # :step: Устанавливаем отметку чекбокса "Аналогично месту регистрации"

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Наименование регистрирующего органа"
    value =  'регистрирующий орган'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" выбираем значение из поля "Наименование документа о регистрации"
    value =  'дополнение к уставу'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Дата регистрации"
    value =  '20.06.2019'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Регистрационный номер"
    value =  '1111'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Ответственное подразделение"
    value =  'Управление сопровождения розничных операций'

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Проверить статус" на форме "Подтверждение статуса проверки клиента"
    # :assert: Кнопка "Проверить статус" недоступна для нажатия пока идет проверка клиентов
    # :assert: После получения ответа обновляется результат в блоке "Статус KYC"
    # :assert: Кнопка "Завершить" доступна для нажатия
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Заявка переходит в статус "Окончена обработка"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_41(app, db_credo):
    """
    {#
        :id:                53753_41
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка отображения карточки ФЛ у руководителя бухгалтерским учетом
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В справочнике «Тип субъекта» есть записи у которых «Тип субъекта ЕРК» = «3»
        :precondition:      Тестовый клиент присутствует в ЕРК и СКЗ
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      15
        :count_of_check:    4
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'CorporateFind'
    VARIANT = 'CustomerFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '151511516'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" по умолчанию выбрано "Должностное лицо с правом подписи"
    # :assert: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" кнопка "Изменить связь" присутствует
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" выбираем "Руководство бухгалтерским учетом передано юридическому лицу/индивидуальному предпринимателю"
    # :assert: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" кнопка "Изменить связь" исчезает
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" выбираем "Должностное лицо без права подписи"
    # :assert: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" кнопка "Изменить связь" не появляется

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_42(app, db_credo):
    """
    {#
        :id:                53753_42
        :priority:          Средний
        :module:            Ядро
        :description:       Проверка отображения краткого наименования в списке заявок в поле «Клиент»
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = нет
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      В списке заявок присутствуют заявки «Регистрация/изменение данных юридического лица»
        :source_point:      п.п. 1.5
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    1
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'CorporateFind'
    VARIANT = 'CustomerFind'

    # :newpage: #######################################################################################################

    # :step: Переходим в "Список заявок"
    # :assert: При отображении заявок, созданных на варианте «Регистрация/изменение данных юридического лица» в списке заявок в поле «Клиент» отображается Полное наименование клиента

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_43(app, db_credo):
    """
    {#
        :id:                53753_43
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка изменения физического лица, для индивидуального предпринимателя
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В справочнике «Тип субъекта» есть записи у которых «Тип субъекта ЕРК» = «3»
        :precondition:      Тестовый клиент (Индивидуальный предприниматель) присутствует в ЕРК и СКЗ
        :precondition:      Тестовый клиент (Физическое лицо) присутствует в ЕРК и СКЗ
        :precondition:      У тестируемого индивидуального предпринимателя есть связанное ФЛ
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :comment:           Запрос поиска юридического лица в ЕРК аналогичен поиску физического лица
        :source_point:      п.п. 9.10, 9.12 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      15
        :count_of_check:    3
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'CorporateFind'
    VARIANT = 'CustomerFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '134257680'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Информация о связанном с ИП физическом лице" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки связанного физического лица" производим поиска карточки клиента по Личному номеру
    value = '4240267E020PB7'

    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "форма "Заведение/актуализация карточки связанного физического лица" нажимаем "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента юридического лица" в блоке "Информация о связанном с ИП физическом лице" появилась карточка нового связанного физического лица

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Отправляем запрос через Postman на поиск ЮЛ в ЕРК
    # :assert: В ЕРК у юридического лица в тэге <SoloIdentity/PersonCode> записан ЕРК код связанного ФЛ
    # :assert: В ЕРК у юридического лица нет информации о старом связанном ФЛ

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_44(app, db_credo):
    """
    {#
        :id:                53753_44
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка изменения связанных физических лиц, для юридического лица
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      Тестовый клиент присутствует в ЕРК и СКЗ
        :precondition:      У тестируемого юридического лица есть связанные ФЛ
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :comment:           Запрос поиска юридического лица в ЕРК аналогичен поиску физического лица
        :source_point:      п.п. 9.10 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      15
        :count_of_check:    4
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'CorporateFind'
    VARIANT = 'CustomerFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '111111113'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Информация о руководителе" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки руководителя" производим поиска карточки клиента по Личному номеру
    value = '4240267E020PB7'

    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента" нажимаем "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента юридического лица" в блоке "Информация о руководителе" появилась карточка нового связанного физического лица

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки лица, осуществляющем руководство бухгалтерским учетом" производим поиска карточки клиента по Личному номеру
    value = '4240267E020PB7'

    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента" нажимаем "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента юридического лица" в блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" появилась карточка нового связанного физического лица

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Отправляем запрос через Postman на поиск ЮЛ в ЕРК
    # :assert: В ЕРК у юридического лица в тэге <Link> записана информация о новых связанных ФЛ
    # :assert: В ЕРК у юридического лица нет информации о старых связанных ФЛ

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_45(app, db_credo):
    """
    {#
        :id:                53753_45
        :priority:          Средний
        :module:            Ядро
        :description:       Проверка доступа оформления заявки для роли msb_front_office%
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      В списке ролей существует роль "msb_front_office_123"
        :precondition:      У пользователя только одна роль - "msb_front_office_123"
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :source_point:      п.п. 1.8
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    3
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер
    value = '5071190M547PB3'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберете продукт" в блоке "Действия с продуктами"
    value = 'Регестрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберете вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: Заявка переходит на форму "Поиск карточки клиента в учетной системе Банка"
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '151511516'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Отмена"

    # :assert: На заявке пользователь видит задачу "Реквизиты клиента юридического лица"
    # :step: У пользвователя удаляем роль "msb_front_office_123"
    # :assert: На заявке пользователь не видит задачу "Реквизиты клиента юридического лица"

    logrecord = "{time} [{module}] -- [{method}] Test success!!!".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(file)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_46(app, db_credo):
    """
    {#
        :id:                53753_46
        :priority:          Средний
        :module:            ЕФР
        :description:       Параметр «Проверять клиента в KYC» на заявке = «false» - переходить к задаче «Сохранение связанных субъектов»
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ИП
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "нет"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: «Проверять клиента в KYC» на заявке = «нет»
    # :step: На продукте/варианте меняем значение параметра doKyc ("Проверять клиента в KYC")
    value = 'да'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'ИПЕШНИКС'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"
    # :assert: Осуществляется переход к задаче «Сохранение связанных субъектов» (В истории выполнения процесса создана задача "Сохранение связанных субъектов")


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_47(app, db_credo):
    """
    {#
        :id:                53753_47
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка заполнения параметра "login_bisquit"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      Тестовый клиент существует в ЕРК, все ключевые данные присутствуют
        :precondition:      У тестового клиента в ЕРК отсутствует тег <gc:BankManager>
        :precondition:      На пользователе заполнен параметр "Логин пользователя в Бисквит" (login_bisquit) = login_bisquit!!!
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :source_point:      п. 9.14
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      15
        :count_of_check:    3
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: Заявка переходит на форму "Поиск карточки клиента в учетной системе Банка"
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '151511516'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку изменить связь у связанного субъекта

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки лица, осуществляющем руководство бухгалтерским учетом" заполняем поле личный номер
    value = '7915192A580PB1'
    # :step: Нажимаем кнопку "Поиска Карточки клиента"
    # :step: Нажимаем карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение статуса проверки клиента" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: На заявке создан параметр "Логин пользователя в АБС Бисквит" (login_bisquit) = login_bisquit!!!
    # :assert: В ЕРК на юридическом клиенте появился тег <gc:BankManager>login_bisquit!!!</gc:BankManager>

    logrecord = "{time} [{module}] -- [{method}] Test success!!!".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(file)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_48(app, db_credo, db_forpost):
    """
    {#
        :id:                53753_48
        :priority:          Средний
        :module:            ЯДРО
        :description:       Проверка сохранения createDT
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      Тестовый клиент существует в СКЗ и ЕРК
        :precondition:      У клиента отсутствует значение атрибута createDT
        :source_point:      п.п. 9.15 ТЗ
        :tc_type:           +
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :comment:           Текущая дата (sysdate) 09.02.2020
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :time_of_test:      10
        :precondition_time: 15
        :count_of_check:    1
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ""
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "УНП/Идент. номер нерез."
    value = '555222333'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Выбираем карточку созданного клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение статуса проверки клиента" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: В ЕРК на юридическом клиенте createDT сохраняется текущая дата (sysdate) = 09.02.2020

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_53753_49(app, db_credo):
    """
    {#
        :id:                53753_49
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка подтверждение статуса юридического клиента
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Инициатор заявки пользователь semenov имеет роль msb_front_office
        :precondition:      Инициатор заявки пользователь semenov не имеет роль admins
        :precondition:      Пользователь gulevich имеет роль admins
        :precondition:      Пользователь maslov не имеет роли admins
        :precondition:      Тестовый клиент не существует в ЕРК
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :precondition:      В файле \credo_data\_java\by\itworks\process\Corporate\Card.groovy закоментированы строки "if (!(corpKYCStatuses.corpStatus).equalsIgnoreCase(corporate.getParameter("kycStatus"))) {" и "} else {logger.debug("corpStatus не менялся");}"
        :precondition:      В файле \credo_data\_java\by\itworks\process\Corporate\Card.groovy строка "params.put("kycDate", (corporate.getParameter("kycDate")).substring(0, 10));" заменена на строку "params.put("kycDate", corporate.getParameter("kycDate"));"
        :source_point:      п.п. 11.2, 11.3, 11.4, 11.5, 11.6, 11.7 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      25
        :count_of_check:    6
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'CorporateFind'
    VARIANT = 'CustomerFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'РОССИЙСКАЯ ФЕДЕРАЦИЯ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '12345678'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем кнопку "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение поля "Организационно-правовая форма клиента"
    value = 'ФОНД'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Название"
    value = '123456789'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Полное наименование"
    value = '123'

    # :step: Выбираем значение из выпадающего списка "Тип субъекта", у которого в справочнике «Тип субъекта» поле «Тип субъекта ЕРК» = «3»
    value = 'ИНДИВИДУАЛЬНЫЕ ПРЕДПРИНИМАТЕЛИ'

    # :step: Выбираем значение из выпадающего списка "Оргструктура"
    value = '10 - Юридические лица'

    # :step: Выбираем значение из выпадающего списка "Тип сектора экономики (форма собственности)"
    value = 'Государственная собственность (110+120)'

    # :step: Выбираем значение из выпадающего списка "Вид деятельности (код ОКЭД)"
    value = '01111 Выращивание зерновых и бобовых культур'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем числовым, целым (без пробелов) значением "Количество сотрудников"
    value = '12'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем числовым, целым (без пробелов) значением "Сумма"
    value = '15464'

    # :step: Выбираем значение из выпадающего списка "Валюты"
    value = 'Белорусский рубль'

    # :step: Выбираем значение из выпадающего списка "Клиентский блок"
    value = 'Корпоративный бизнес'

    # :step: Выбираем значение из выпадающего списка "Объем выручки"
    value = 'До 3 млн.USD'

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информацию о связанном физическом лице" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: заполняем поле "Личный номер"
    value = '6131183M846PB7'

    # :step: Нажимаем на кнопку "Поиск Карточки клиента"

    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Адрес регистрации" заполняем поле "Страна"
    value =  'БЕЛАРУСЬ'
    # :step: Указываем Город или населенный пункт (Блок Адрес регистрации)
    value =  'МИНСК Г'
    # :step: Указываем Улицу (Блок Адрес регистрации)
    value =  'СОВЕТСКАЯ УЛ'
    # :step: Указываем Дом(Блок Адрес регистрации)
    value =  '14'
    # :step: Указываем Квартира/офис(Блок Адрес регистрации)
    value =  '22'
    # :step: Устанавливаем отметку чекбокса "Аналогично месту регистрации"

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Наименование регистрирующего органа"
    value =  'регистрирующий орган'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" выбираем значение из поля "Наименование документа о регистрации"
    value =  'дополнение к уставу'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Дата регистрации"
    value =  '20.06.2019'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Регистрационный номер"
    value =  '1111'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Контакты" заполняем поле "Мобильный телефон контактного лица"
    value =  '+375295556644'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Ответственное подразделение"
    value =  'Управление сопровождения розничных операций'
    # :step: В файле в standalone\configuration\itwGateWS-url.properties ломаем адрес kyc.url
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Проверить статус" на форме "Подтверждение статуса проверки клиента "
    # :assert: На форме появилась ошибка "getScorePersons, пустой ответ"
    # :assert: Заявка переходит в статус "Ошибка сохранения клиента"
    # :assert: Задача с ошибкой доступна пользователю gulevich и инициатору заявки
    # :assert: Задача с ошибкой не доступна пользователю maslov
    # :assert: Пользователю с ролью admins отправлено письмо с темой «Ошибка обновления статуса KYC в ЕРК по заявке <#>» и текстом ошибки
    # :step: В файле \credo_data\_java\by\itworks\process\Corporate\Card.groovy возвращаем строку "params.put("kycDate", (corporate.getParameter("kycDate")).substring(0, 10));" вместо "params.put("kycDate", corporate.getParameter("kycDate"));"
    # :step: Выполняем задачу "Ошибка проверки KYC" по заявке
    # :assert: Заявка переходит на форму "Подтверждение статуса проверки клиента"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_50(app, db_credo):
    """
    {#
        :id:                53753_50
        :priority:          Средний
        :module:            Ядро
        :description:       Проверка создания таблицы юр.лица и таблицы для хранения параметров юр.лиц в БД СКЗ. Проверка сохранения данных ЮЛ и ИП в таблице ЮЛ
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      У пользователя есть роль "msb_front_office"
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      На продукте/варианте параметр doKyc (Проверять клиента в KYC) = нет
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :source_point:      п.п. 1.1, 1.3
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      25
        :count_of_check:    4
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер
    value = '5071190M547PB3'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберете продукт" в блоке "Действия с продуктами"
    value = 'Регестрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберете вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = 'ОАО ПОПЫТКА100503'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем кнопку "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из поля "Наименование страны регистрации клиента" = "БЕЛАРУСЬ"
    # :step: На форме "Реквизиты клиента юридического лица" заполняем числовым, целым (без пробелов) валидным значением "УНП/Идент. номер нерез." = 9 символов
    value = '123456789'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение поля "Организационно-правовая форма клиента"
    value = 'ИНДИВИДУАЛЬНЫЙ ПРЕДПРИНИМАТЕЛЬ'
    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Название"
    value = 'ОАО ПОПЫТКА100503'
    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Полное наименование"
    value = 'ПОПЫТКА'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из списка "Тип субъекта
    value = 'ИНДИВИДУАЛЬНЫЕ ПРЕДПРИНИМАТЕЛИ'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Оргструктура"
    value = '10 - Юридические лица'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Тип сектора экономики (форма собственности)"
    value = 'Государственная собственность (110+120)'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Вид деятельности (код ОКЭД)"
    value = '01111 Выращивание зерновых и бобовых культур'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Клиентский блок"
    value = 'Малый бизнес'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Объем выручки"
    value = 'До 3 млн.USD'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информацию о связанном физическом лице" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: заполняем поле "Личный номер"
    value = '5071190M547PB3'

    # :step: Нажимаем на кнопку "Поисе Карточки клиента"

    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Адрес регистрации" заполняем поле "Страна"
    value =  'БЕЛАРУСЬ'
    # :step: Указываем Город или населенный пункт из справочника «Почтовые коды»(Блок Адрес регистрации)
    value =  'МИНСК Г'
    # :step: Указываем Улица  из справочника «Почтовые коды»(Блок Адрес регистрации)
    value =  'СОВЕТСКАЯ УЛ'
    # :step: Указываем Дом  из справочника «Почтовые коды»(Блок Адрес регистрации)
    value =  '14'
    # :step: Указываем Квартира/офис(Блок Адрес регистрации)
    value =  '22'

    # :step: На форме "Реквизиты клиента юридического лица" на блоке Почтовый адрес" Устанавливаем отметку чекбокса "Аналогично месту регистрации"

    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "Наименование регистрирующего органа"
    value =  'РЕГОРГ'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из поля "Наименование документа о регистрации"
    value =  'Дополнение к уставу'
    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "Дата регистрации"
    value =  '16.10.2020'
    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "Регистрационный номер"
    value =  '123'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "Мобильный телефон контактного лица"
    value =  '+375295222222'

    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из поля "Ответственное подразделение"
    value =  'Управление сопровождения розничных операций'
    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение статуса проверки клиента" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: В БД, существует таблица CORPORATES
    # :assert: В БД, существует таблица CORPORATES_PARAMETERS
    # :assert: В таблице CORPORATES появилась запись с созданным ИП
    # :assert: В таблице CORPORATES_PARAMETERS появилась запись с параметрами созданного ИП

    logrecord = "{time} [{module}] -- [{method}] Test success!!!".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(file)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_51(app, db_credo):
    """
    {#
        :id:                53753_51
        :priority:          Средний
        :module:            Ядро
        :description:       Проверка создания таблицы юр.лица и таблицы для хранения параметров юр.лиц в БД СКЗ. Проверка сохранения данных ЮЛ и ИП в таблице ЮЛ
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      У пользователя только одна роль - "msb_front_office"
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      На продукте/варианте параметр doKyc (Проверять клиента в KYC) = нет
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :source_point:      п.п. 1.3
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      25
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер
    value = '5071190M547PB3'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберете продукт" в блоке "Действия с продуктами"
    value = 'Регестрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберете вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = 'ОАО ПОПЫТКА100503'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем кнопку "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из поля "Наименование страны регистрации клиента" = "БЕЛАРУСЬ"
    # :step: На форме "Реквизиты клиента юридического лица" заполняем числовым, целым (без пробелов) валидным значением "УНП/Идент. номер нерез." = 9 символов
    value = '123456789'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение поля "Организационно-правовая форма клиента"
    value = 'инвестиционные фонды'
    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Название"
    value = 'ОАО ПОПЫТКА100503'
    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Полное наименование"
    value = 'ПОПЫТКА'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из списка "Тип субъекта
    value = 'ИНДИВИДУАЛЬНЫЕ ПРЕДПРИНИМАТЕЛИ'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Оргструктура"
    value = '10 - Юридические лица'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Тип сектора экономики (форма собственности)"
    value = 'Государственная собственность (110+120)'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Вид деятельности (код ОКЭД)"
    value = '01111 Выращивание зерновых и бобовых культур'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Клиентский блок"
    value = 'Малый бизнес'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из выпадающего списка "Объем выручки"
    value = 'До 3 млн.USD'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информацию о руководителе" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: заполняем поле "Личный номер"
    value = '5071190M547PB3'

    # :step: Нажимаем на кнопку "Поисе Карточки клиента"

    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информацию о руководителе" устанавливаем чекбокс "Осуществляет руководство бухгалтерским учетом лично"
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Адрес регистрации" заполняем поле "Страна"
    value =  'БЕЛАРУСЬ'
    # :step: Указываем Город или населенный пункт из справочника «Почтовые коды»(Блок Адрес регистрации)
    value =  'МИНСК Г'
    # :step: Указываем Улица  из справочника «Почтовые коды»(Блок Адрес регистрации)
    value =  'СОВЕТСКАЯ УЛ'
    # :step: Указываем Дом  из справочника «Почтовые коды»(Блок Адрес регистрации)
    value =  '14'
    # :step: Указываем Квартира/офис(Блок Адрес регистрации)
    value =  '22'

    # :step: На форме "Реквизиты клиента юридического лица" на блоке Почтовый адрес" Устанавливаем отметку чекбокса "Аналогично месту регистрации"

    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "Наименование регистрирующего органа"
    value =  'РЕГОРГ'
    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из поля "Наименование документа о регистрации"
    value =  'Дополнение к уставу'
    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "Дата регистрации"
    value =  '16.10.2020'
    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "Регистрационный номер"
    value =  '123'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "Мобильный телефон контактного лица"
    value =  '+375295222222'

    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение из поля "Ответственное подразделение"
    value =  'Управление сопровождения розничных операций'
    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение статуса проверки клиента" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: В таблице CORPORATES появилась запись с созданным юр.лицом
    # :assert: В таблице CORPORATES_PARAMETERS появилась запись с параметрами созданного юр.лица

    logrecord = "{time} [{module}] -- [{method}] Test success!!!".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(file)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_52(app, db_credo):
    """
    {#
        :id:                53753_52
        :priority:          Средний
        :module:            Ядро
        :description:       Проверика создания конфигурационного файла itwCredo-kyc.properties
        :source_point:      п. 7.3
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 5
        :time_of_test:      5
        :count_of_check:    1
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = ''
    VARIANT = ''

    # :newpage: #######################################################################################################

    # :assert: в бэке существует конфигурационный файл itwCredo-kyc.properties с настройками для вызова сервиса KYC (логин и пароль доступа к сервису, адрес и порт сервиса, настройки для прокси, настройки проверки по спискам - параметры тега «params»)

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_53(app, db_credo):
    """
    {#
        :id:                53753_53
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка редактирования связанных физических лиц, для юридического лица
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      Тестовый клиент (Юридическое лицо) присутствует в ЕРК и СКЗ
        :precondition:      У тестируемого юридического лица есть связанные ФЛ
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      15
        :count_of_check:    6
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'CorporateFind'
    VARIANT = 'CustomerFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '111111113'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Информация о руководителе" нажимаем на карточку руководителя

    # :newpage: #######################################################################################################

    # :assert: Осуществляется переход на форму "Заведение/актуализация карточки руководителя"
    # :assert: Заявка переходит в статус "Ввод параметров связанного субъекта"
    # :assert: У физического лица предзаполнены все данные из ЕРК
    # :step: На форме "Заведение/актуализация карточки руководителя" нажимаем "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Информация о лице, осуществляющем руководство бухгалтерским учетом" нажимаем на карточку физического лица

    # :newpage: #######################################################################################################

    # :assert: Осуществляется переход на форму "Заведение/актуализация карточки лица, осуществляющем руководство бухгалтерским учетом"
    # :assert: Заявка переходит в статус "Ввод параметров связанного субъекта"
    # :assert: У физического лица предзаполнены все данные из ЕРК


@pytest.mark.skip(reason="Template")
def test_53753_54(app, db_credo):
    """
    {#
        :id:                53753_54
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка редактирования связанного физического лица для индивидуального предпринимателя
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      Тестовый клиент (Юридическое лицо) присутствует в ЕРК и СКЗ
        :precondition:      У тестируемого юридического лица есть связанные ФЛ
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :source_point:      п. 5.4 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      15
        :count_of_check:    3
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'CorporateFind'
    VARIANT = 'CustomerFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '111111113'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Информация о связанном с ИП физическом лице" нажимаем на карточку физического лица
    # :assert: На форме "Заведение/актуализация карточки связанного с ИП физического лица" отсутствуют блоки "Согласия" и "Подключение к ДБО"

    # :newpage: #######################################################################################################

    # :assert: Осуществляется переход на форму "Заведение/актуализация карточки связанного физического лица"
    # :assert: Заявка переходит в статус "Ввод параметров связанного субъекта"
    # :assert: У физического лица предзаполнены все данные из ЕРК


@pytest.mark.skip(reason="Template")
def test_53753_55(app, db_credo):
    """
    {#
        :id:                53753_55
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка подтверждение статуса связанных физических лиц
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Инициатор заявки пользователь semenov имеет роль msb_front_office
        :precondition:      Инициатор заявки пользователь semenov не имеет роль admins
        :precondition:      Пользователь gulevich имеет роль admins
        :precondition:      Пользователь maslov не имеет роли admins
        :precondition:      Тестовый клиент не существует в ЕРК
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :precondition:      В файле \credo_data\_java\by\itworks\process\Corporate\Card.groovy закоментированы строки "if (isNullOrEmpty(errorText) && !(corpKYCStatuses.relationStatus).equalsIgnoreCase(client.getParameter("kycStatus"))) {" и "} else {logger.debug("relationStatus не менялся");}"
        :precondition:      В файле \credo_data\_java\by\itworks\process\Corporate\Card.groovy строка "params.put("kycDate", (client.getParameter("kycDate")).substring(0, 10));" заменена на строку "params.put("kycDate", (client.getParameter("kycDate")));"
        :source_point:      п.п. 11.2, 11.3, 11.4, 11.5, 11.6, 11.7 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      25
        :count_of_check:    6
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'CorporateFind'
    VARIANT = 'CustomerFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'РОССИЙСКАЯ ФЕДЕРАЦИЯ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '12345678'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем кнопку "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение поля "Организационно-правовая форма клиента"
    value = 'ФОНД'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Название"
    value = '123456789'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Полное наименование"
    value = '123'

    # :step: Выбираем значение из выпадающего списка "Тип субъекта", у которого в справочнике «Тип субъекта» поле «Тип субъекта ЕРК» = «3»
    value = 'ИНДИВИДУАЛЬНЫЕ ПРЕДПРИНИМАТЕЛИ'

    # :step: Выбираем значение из выпадающего списка "Оргструктура"
    value = '10 - Юридические лица'

    # :step: Выбираем значение из выпадающего списка "Тип сектора экономики (форма собственности)"
    value = 'Государственная собственность (110+120)'

    # :step: Выбираем значение из выпадающего списка "Вид деятельности (код ОКЭД)"
    value = '01111 Выращивание зерновых и бобовых культур'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем числовым, целым (без пробелов) значением "Количество сотрудников"
    value = '12'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем числовым, целым (без пробелов) значением "Сумма"
    value = '15464'

    # :step: Выбираем значение из выпадающего списка "Валюты"
    value = 'Белорусский рубль'

    # :step: Выбираем значение из выпадающего списка "Клиентский блок"
    value = 'Корпоративный бизнес'

    # :step: Выбираем значение из выпадающего списка "Объем выручки"
    value = 'До 3 млн.USD'

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информацию о связанном физическом лице" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: заполняем поле "Личный номер"
    value = '6131183M846PB7'

    # :step: Нажимаем на кнопку "Поиск Карточки клиента"

    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Адрес регистрации" заполняем поле "Страна"
    value =  'БЕЛАРУСЬ'
    # :step: Указываем Город или населенный пункт (Блок Адрес регистрации)
    value =  'МИНСК Г'
    # :step: Указываем Улицу (Блок Адрес регистрации)
    value =  'СОВЕТСКАЯ УЛ'
    # :step: Указываем Дом(Блок Адрес регистрации)
    value =  '14'
    # :step: Указываем Квартира/офис(Блок Адрес регистрации)
    value =  '22'
    # :step: Устанавливаем отметку чекбокса "Аналогично месту регистрации"

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Наименование регистрирующего органа"
    value =  'регистрирующий орган'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" выбираем значение из поля "Наименование документа о регистрации"
    value =  'дополнение к уставу'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Дата регистрации"
    value =  '20.06.2019'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Регистрационный номер"
    value =  '1111'
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Контакты" заполняем поле "Мобильный телефон контактного лица"
    value =  '+375295556644'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Ответственное подразделение"
    value =  'Управление сопровождения розничных операций'
    # :step: В файле в standalone\configuration\itwGateWS-url.properties ломаем адрес kyc.url
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Проверить статус" на форме "Подтверждение статуса проверки клиента "
    # :assert: На форме появилась ошибка "getScorePersons, пустой ответ"
    # :assert: Заявка переходит в статус "Ошибка сохранения клиента"
    # :assert: Задача с ошибкой доступна пользователю gulevich и инициатору заявки
    # :assert: Задача с ошибкой не доступна пользователю maslov
    # :assert: В случае возникновения ошибки сохранения отправить email на пользователей с ролью admins с темой «Ошибка обновления статуса KYC в ЕРК по заявке <#>» и текстом ошибки
    # :step: В файле \credo_data\_java\by\itworks\process\Corporate\Card.groovy возвращаем строку "params.put("kycDate", (client.getParameter("kycDate")).substring(0, 10));" вместо "params.put("kycDate", (client.getParameter("kycDate")));"
    # :step: Выполняем задачу "Ошибка проверки KYC" по заявке
    # :assert: Заявка переходит на форму "Подтверждение статуса проверки клиента"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_56(app, db_credo):
    """
    {#
        :id:                53753_56
        :priority:          Средний
        :module:            ЕФР
        :description:       Из Siron получен статус «block», но в поле «Комментарий» не определены слова permit или block обрабатыватся ситуация как будто получен комментарий «block». Отображение текста «Произошла ошибка KYC статуса. Свяжитесь с УФМ»
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ЮЛ
        :precondition:      по тестовому бенифициарному  владельцу из Siron получен статус «block» и в поле «Комментарий» не определены слова permit или block
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "да"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У ЮЛ имеются данные руководителя и бенефициарных владельцев
        :precondition:      Параметр kyc_emails на продукте/варианте заполнен значениями kosovec@itwlocal.by;maslov@itwlocal.by
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :comment:           Для моделирования данной ситуации отправляли kycStatus заявки банку чтобы нам пришёл статус "block" + Комментарий без permit или block
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      20
        :count_of_check:    3
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'МОЯ ОБОРОНА'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Добавить бенифициарного владельца"
    # :step: Заполняем поле "Фамилия"
    value = 'Лукашенко'
    # :step: Заполняем поле "Имя"
    value = 'Александр'
    # :step: Нажимаем кнопку "Добавить"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Подтверждение статуса проверки клиента" KYC статус для бенефициарного владельца "Лукашенко Александр" = Произошло совпадение УФМ (принято решение о блокировке) - как для статуса «block» + текст «block» в начале строки поля «Комментарий» ответа KYC
    # :assert: На форме отображается ошибка с текстом "Произошла ошибка KYC статуса. Свяжитесь с УФМ."
    # :assert: На форме отображаются кнопки "Завершить" и "Отмена"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_57(app, db_credo):
    """
    {#
        :id:                53753_57
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка формата полей, валидации и доступности кнопок на форме «Реквизиты клиента юридического лица» для индивидуального предпринимателя с "Типом субъекта ЕРК" = 3. Проверка создания клиента ИП в СКЗ и ЕРК
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В справочнике «Тип субъекта по классификации НБРБ» есть записи у которых «Тип субъекта ЕРК» = «3»
        :precondition:      Связанные субъекты ФЛ существуют в ЕРК, СКЗ, все ключевые данные присутствуют
        :precondition:      На продукте/варианте параметр doKyc (Проверять клиента в KYC) = нет
        :precondition:      В  разделе "Валюты" должны быть валюты, у которых в поле "Метки валют" указано значение "Карточка клиента юридического лица"
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :comment:           Текущая дата 09.02.2020
        :source_point:      п. 4.1, 4.3, 4.5, 4.9, 4.10, 4.11 ТЗ
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 10
        :time_of_test:      60
        :count_of_check:    108
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '123456789'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем кнопку "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Организационно-правовая форма клиента"
    value = 'ФОНД'
    # :assert: Значения для выбора = значения из справочника ЕРК "Организационно-правовая форма клиента"

    # :step: Заполняем "Название"
    value = 'Название'

    # :step: Заполняем "Полное наименование"
    value = 'Полное наименование'

    # :step: Выбираем "Тип субъекта" из выпадающего списка, у которого в справочнике «Тип субъекта по классификации НБРБ» поле «Тип субъекта ЕРК» = «3»
    value = 'ИНДИВИДУАЛЬНЫЕ ПРЕДПРИНИМАТЕЛИ'
    # :assert: Поле "Вид деятельности (код ОКЭД)" разблокировано

    # :step: выбираем "Оргструктура" из выпадающего списка
    value = '10 - Юридические лица'
    # :assert: В списке для выбора отображаются значения поля "GSS_NAME" из справочника ЕРК "GC_SPR_SIMPLE_TYPE_LEGALFORM_DOC"

    # :step: Выбираем "Тип сектора экономики (форма собственности)" из выпадающего списка
    value = 'Государственная собственность (110+120)'
    # :assert: В списке для выбора отображаются значения поля "GSS_NAME" из справочника ЕРК "GC_SPR_SIMPLE_TYPE_ORG_STRUCT_FORM"

    # :step: Выбираем несколько значений "Вид деятельности (код ОКЭД)" из выпадающего списка
    value = '01111 Выращивание зерновых и бобовых культур'
    value = '01112 Выращивание семян масличных культур'
    # :assert: В списке в виде дерева отображаются значения полей "GSS_NAME" справочника ЕРК "DET_OKVED" с учетом ограничения кодов для типа субъекта по справочнику «Тип субъекта по классификации НБРБ». Для выбора доступны значения только нижнего уровня иерархии. Возможен поиск по коду и наименованию
    # :assert: Доступен множественный выбор - выбираются оба варианта
    # :step: Убираем одно из значений "Вид деятельности (код ОКЭД)" - нажимаем на "х" на наименовании вида деятельности с подтверждением кнопкой "Удалить" в модальном окне
    # :assert: на форме остался один вид деятельности
    # :step: Выбираем еще значение "Вид деятельности (код ОКЭД)"
    value = ' 01131 Выращивание картофеля'
    # :assert: "Вид деятельности (код ОКЭД)" дополнился последним выбранным значением - всего два варианта

    # :step: Выбираем "Клиентский блок" из выпадающего списка
    value = 'Корпоративный бизнес'
    # :assert: В списке отображаются значения поля "GSS_NAME" из справочника ЕРК "GC_SPR_SIMPLE_TYPE_TYPE_CUSTBLOCK"

    # :step: Выбираем значение "Объем выручки" из выпадающего списка
    value = 'До 3 млн.USD'
    # :assert: В списке отображаются значения поля "GSS_NAME" из справочника ЕРК "GC_SPR_SIMPLE_TYPE_ANNUAL_REVENUE"

    # :step: Нажимаем "Информация о связанном с ИП физическом лице отсутствует" в разделе "Информация о связанном с ИП физическом лице" блока "Связанные субъекты"

    # :newpage: #######################################################################################################

    # :assert: переход на форму "Поиск карточки связанного физического лица"
    # :step: заполняем личный номер клиента ФЛ
    value = '7218233A979PB9'
    # :step: нажимаем "Поиск Карточки клиента"
    # :step: Выбираем карточку Клиента

    # :newpage: #######################################################################################################

    # :assert: переход на форму "Заведение/актуализация карточки связанного физического лица"
    # :step: нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: В разделе "Информация о связанном с ИП физическом лице" появилась карточка связанного субъекта с отображением ФИО, Даты рождения, Регистрационного номера, данных ДУЛа из карточки клиента ФЛ

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Адрес регистрации" выбираем "Страна" из выпадающего списка
    value =  'БЕЛАРУСЬ'
    # :assert: значения в списке = справочник СКЗ countries "Страны и государства"

    # :step: Вводим "Город или населенный пункт"
    value =  'город Минск'
    # :assert: Выводится сообщение "Нужно выбрать наименование из предлагаемых значений"
    # :step: Выбираем "Город или населенный пункт" из списка
    value =  'МИНСК Г'
    # :assert: список для выбора = справочник СКЗ post_codes "Почтовые коды"
    # :step: Вводим "Улица"
    value =  'улица Советская'
    # :assert: Выводится сообщение "Нужно выбрать наименование из предлагаемых значений"
    # :step: Выбираем "Улицу" из списка = справочник СКЗ post_codes "Почтовые коды"
    value =  'СОВЕТСКАЯ УЛ'
    # :step: Вводим "Дом"
    value =  '99'
    # :assert: Выводится сообщение "Нужно выбрать наименование из предлагаемых значений"
    # :step: Выбираем "Дом"  из списка = справочник СКЗ post_codes "Почтовые коды
    value =  '14'
    # :step: Указываем "Квартира/офис"(Блок Адрес регистрации)
    value =  '22'

    # :step: Отмечаем чекбокс "Нестандартный адрес"
    # :assert: Форма дополняется полями "Область", "Район", "Сельсовет", "Тип населенного пункта", "Тип улицы", "Корпус", "Индекс" и "Примечание"

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Адрес регистрации" заполняем "Область" невалидным значением > 120 символов (1211)
    value =  '1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: значение обрезается до 120 символов
    # :step: Заполняем "Область" невалидным значением c символом "/"
    value =  'область/'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Область"
    value =  'NAMEПРОВЕРКА-1,2.'
    # :step: Заполняем "Район" невалидным значением > 150 символов
    value =  '1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: значение обрезается до 150 символов
    # :step: Заполняем "Район" невалидным значением c символом "/"
    value =  'область/'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Район"
    value =  'NAMEПРОВЕРКА-1,2.'

    # :step: Заполняем "Сельсовет" невалидным значением > 128 символов
    value =  '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: значение обрезается до 128 символов
    # :step: Заполняем "Сельсовет" невалидным значением c символом "/"
    value =  'область/'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Сельсовет"
    value =  'NAMEПРОВЕРКА-1,2.'

    # :step: Выбираем "Тип населенного пункта"
    value =  'ГОРОД'
    # :assert: значения в списке = справочник СКЗ type_town "Типы населенных пунктов"

    # :step: Заполняем "Населенный пункт" невалидным значением > 250 символов (251)
    value =  '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: значение обрезается до 250 символов с переводом в верхний регистр
    # :step: Заполняем "Населенный пункт" невалидным значением c символом "/"
    value =  'область/'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Населенный пункт"
    value =  'NAMEПРОВЕРКА-1,2.'

    # :step: Выбираем "Тип улицы"
    value =  'УЛИЦА'
    # :assert: значения в списке = справочник СКЗ type_street "Типы улиц"

    # :step: Заполняем поле "Улица" невалидным значением > 100 символов (101)
    value =  'Возможность нахождения поисковых ключей в тексте и определения их количества полезна как для написани'
    # :assert: значение обрезается до 100 символов с переводом в верхний регистр
    # :step: Заполняем "Улица" невалидным значением c символом "/"
    value =  'область/'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Улица"
    value =  'NAMEПРОВЕРКА-1,2.'

    # :step: Заполняем поле "Дом" невалидным значением > 50 символов(51)
    value =  'этономердома11внемживутлюдииздругогогородавоттаквот'
    # :assert: значение обрезается до 10 символов с переводом в верхний регистр
    # :step: Заполняем "Дом" невалидным значением c символом "%"
    value =  'NQДОМ12%'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой"
    # :step: Заполняем поле "Дом"
    value =  'NQДОМ12/3'

    # :step: Заполняем поле "Корпус" невалидным значением > 50 символов(51)
    value =  'этономеркорпуса11внемживутлюдииздругогогородавоттак'
    # :assert: значение обрезается до 10 символов с переводом в верхний регистр
    # :step: Заполняем "Корпус" невалидным значением c символом "/"
    value =  'NQДОМ12/'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой"
    # :step: Заполняем поле "Корпус"
    value =  'NQДОМ12'

    # :step: Заполняем поле "Квартира/офис" невалидным значением > 50 символов(51)
    value =  'этономерквартиры11внемживутлюдииздругогогородавотда'
    # :assert: значение обрезается до 10 символов с переводом в верхний регистр
    # :step: Заполняем "Квартира/офис" невалидным значением c символом "/"
    value =  'NQДОМ12/'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой"
    # :step: Заполняем поле "Квартира/офис"
    value =  'NQДОМ12'

    # :step: Заполняем "Индекс" невалидным значением > 20 символов (21)
    value =  'ПQ1 \-/?:()+.,&@№%*"_'
    # :assert:значение обрезается до 20 символов
    # :step: Заполняем "Индекс"
    value =  'ПQ1\-/?:()+.,&@№%*"_'

    # :step: Заполняем текстовое поле "Примечание" невалидным значением > 500 символов (501)
    value =  'Возможность нахождения поисковых ключей в тексте и определения их количества полезна как для написания нового текста, так и для оптимизации уже существующего. Расположение ключевых слов по группам и по частоте сделает навигацию по ключам удобной и быстрой. Сервис также найдет и морфологические варианты ключей, которые выделятся в тексте при нажатии на нужное ключевое слово. Данный параметр отображает процент наличия в тексте стоп-слов, фразеологизмов, а также словесных оборотов, фраз, соединитель'
    # :assert: значение обрезается до 500 символов с переводом в верхний регистр
    # :step: Заполняем "Примечание" значением c невалидными символом "/"
    value =  'ПРИМЕЧАНИЕ/'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой"
    # :step: Заполняем "Примечание"
    value =  'При-ме,ч ание.ZZZ'
    # :assert: значение переводится в верхний регистр

    # :step: Устанавливаем отметку чекбокса "Аналогично месту регистрации" в блоке "Почтовый адрес"
    # :assert: в блоке "Почтовый адрес" не отображаются поля для ввода

    # :step: Снимаем отметку с чекбокса Аналогично месту регистрации
    # :assert: Ображается блок "Почтовый адрес" с полем для ввода "Страна", отмечен чекбокс "Нестандартный адрес"

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Почтовый адрес" выбираем "Страна" из списка
    value =  'БЕЛАРУСЬ'
    # :assert: значения в списке = справочник СКЗ countries "Страны и государства"
    # :step: Снимаем отметку с чекбокса "Нестандартный адрес"
    # :step: Вводим "Город или населенный пункт"
    value =  'город Минск'
    # :assert: Выводится сообщение "Нужно выбрать наименование из предлагаемых значений"
    # :step: Выбираем "Город или населенный пункт" из списка
    value =  'МИНСК Г'
    # :assert: список для выбора = справочник СКЗ post_codes "Почтовые коды"
    # :step: Вводим "Улица"
    value =  'улица Советская'
    # :assert: Выводится сообщение "Нужно выбрать наименование из предлагаемых значений"
    # :step: Выбираем "Улицу" из списка = справочник СКЗ post_codes "Почтовые коды"
    value =  'СОВЕТСКАЯ УЛ'
    # :step: Вводим "Дом"
    value =  '99'
    # :assert: Выводится сообщение "Нужно выбрать наименование из предлагаемых значений"
    # :step: Выбираем "Дом"  из списка = справочник СКЗ post_codes "Почтовые коды
    value =  '14'
    # :step: Указываем "Квартира/офис"(Блок Адрес регистрации)
    value =  '22'

    # :step: Отмечаем чекбокс "Нестандартный адрес"
    # :assert: форма дополняется полями "Область", "Район", "Сельсовет", "Тип населенного пункта", "Тип улицы", "Корпус", "Индекс" и "Примечание"

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Почтовый адрес" заполняем "Область" невалидным значением > 120 символов (121)
    value =  '1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: значение обрезается до 120 символов
    # :step: Заполняем "Область" невалидным значением c символом "/"
    value =  'область/'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Область"
    value =  'NAMEПРОВЕРКА-1,2.'
    # :step: Заполняем "Район" невалидным значением > 150 символов
    value =  '1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: значение обрезается до 150 символов
    # :step: Заполняем "Район" невалидным значением c символом "/"
    value =  'область/'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Район"
    value =  'NAMEПРОВЕРКА-1,2.'

    # :step: Заполняем "Сельсовет" невалидным значением > 128 символов
    value =  '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: значение обрезается до 128 символов
    # :step: Заполняем "Сельсовет" невалидным значением c символом "/"
    value =  'область/'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Сельсовет"
    value =  'NAMEПРОВЕРКА-1,2.'

    # :step: Выбираем "Тип населенного пункта"
    value =  'ГОРОД'
    # :assert: значения в списке = справочник СКЗ type_town "Типы населенных пунктов"

    # :step: Заполняем "Населенный пункт" невалидным значением > 250 символов (251)
    value =  '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
    # :assert: значение обрезается до 250 символов с переводом в верхний регистр
    # :step: Заполняем "Населенный пункт" невалидным значением c символом "/"
    value =  'область/'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Населенный пункт"
    value =  'NAMEПРОВЕРКА-1,2.'

    # :step: Выбираем "Тип улицы"
    value =  'УЛИЦА'
    # :assert: значения в списке = справочник СКЗ type_street "Типы улиц"

    # :step: Заполняем поле "Улица" невалидным значением > 100 символов (101)
    value =  'Возможность нахождения поисковых ключей в тексте и определения их количества полезна как для написани'
    # :assert: значение обрезается до 100 символов с переводом в верхний регистр
    # :step: Заполняем "Улица" невалидным значением c символом "/"
    value =  'область/'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой" с переводом в верхний регистр
    # :step: Заполняем поле "Улица"
    value =  'NAMEПРОВЕРКА-1,2.'

    # :step: Заполняем поле "Дом" невалидным значением > 50 символов(51)
    value =  'этономердома11внемживутлюдииздругогогородавоттаквот'
    # :assert: значение обрезается до 10 символов с переводом в верхний регистр
    # :step: Заполняем "Дом" невалидным значением c символом "%"
    value =  'NQДОМ12%'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой"
    # :step: Заполняем поле "Дом"
    value =  'NQДОМ12/3'

    # :step: Заполняем поле "Корпус" невалидным значением > 50 символов(51)
    value =  'этономеркорпуса11внемживутлюдииздругогогородавоттак'
    # :assert: значение обрезается до 10 символов с переводом в верхний регистр
    # :step: Заполняем "Корпус" невалидным значением c символом "/"
    value =  'NQДОМ12/'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой"
    # :step: Заполняем поле "Корпус"
    value =  'NQДОМ12'

    # :step: Заполняем поле "Квартира/офис" невалидным значением > 50 символов(51)
    value =  'этономерквартиры11внемживутлюдииздругогогородавотда'
    # :assert: значение обрезается до 10 символов с переводом в верхний регистр
    # :step: Заполняем "Квартира/офис" невалидным значением c символом "/"
    value =  'NQДОМ12/'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой"
    # :step: Заполняем поле "Квартира/офис"
    value =  'NQДОМ12'

    # :step: Заполняем "Индекс" невалидным значением > 20 символов (21)
    value =  'ПQ1 \-/?:()+.,&@№%*"_'
    # :assert:значение обрезается до 20 символов
    # :step: Заполняем "Индекс"
    value =  'ПQ1\-/?:()+.,&@№%*"_'

    # :step: Заполняем текстовое поле "Примечание" невалидным значением > 500 символов (501)
    value =  'Возможность нахождения поисковых ключей в тексте и определения их количества полезна как для написания нового текста, так и для оптимизации уже существующего. Расположение ключевых слов по группам и по частоте сделает навигацию по ключам удобной и быстрой. Сервис также найдет и морфологические варианты ключей, которые выделятся в тексте при нажатии на нужное ключевое слово. Данный параметр отображает процент наличия в тексте стоп-слов, фразеологизмов, а также словесных оборотов, фраз, соединитель'
    # :assert: значение обрезается до 500 символов с переводом в верхний регистр
    # :step: Заполняем "Примечание" значением c невалидными символом "/"
    value =  'ПРИМЕЧАНИЕ/'
    # :assert: Выводится сообщение об ошибке ввода "Значение введено с ошибкой"
    # :step: Заполняем "Примечание"
    value =  'При-ме,ч ание.ZZZ'
    # :assert: значение переводится в верхний регистр

    # :step: Отмечаем чекбокс "Аналогично месту регистрации"

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Наименование регистрирующего органа"
    value =  'регистрирующий орган'
    # :step: Выбираем "Наименование документа о регистрации" из списка
    value =  'Устав'
    # :assert: значения в списке =  значения поля "GSS_NAME" из справочника ЕРК "GC_SPR_SIMPLE_TYPE_RDOCS"
    # :step: Пытаемся заполнить "Дату регистрации" выбором в календаре или ручным вводом датой больше текущей
    value =  '10.02.2021'
    # :assert: Дата не устанавливается
    # :step: Заполняем поле "Дата регистрации" датой равной текущей
    value =  '09.02.2021'
    # :step: Заполняем поле "Дата регистрации" датой меньше текущей
    value =  '01.02.2021'
    # :step: Заполняем поле "Регистрационный номер"
    value =  '1111/12'
    # :step: Очищаем поле "Наименование регистрирующего органа"
    # :assert: Выводится сообщение "Значение обязательно для заполнения"
    # :step: Заполняем поле "Наименование регистрирующего органа"
    value =  'регистрирующий орган'

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Сведения о гос.регистрации(последняя)" заполняем поле "Наименование регистрирующего органа"
    value =  'регистрирующий орган 2'
    # :assert: отображается сообщение пользователю "Необходимо заполнить все поля или оставить пустыми"
    # :step: Выбираем "Наименование документа о регистрации" из списка
    value =  'Дополнение к уставу'
    # :assert: значения в списке =  значения поля "GSS_NAME" из справочника ЕРК "GC_SPR_SIMPLE_TYPE_RDOCS"
    # :step: Пытаемся заполнить "Дату регистрации" выбором в календаре или ручным вводом датой больше текущей
    value =  '10.02.2021'
    # :assert: Дата не устанавливается
    # :step: Заполняем поле "Дата регистрации" датой равной текущей
    value =  '09.02.2021'
    # :step: Заполняем поле "Дата регистрации" датой меньше текущей
    value =  '01.02.2021'
    # :step: Заполняем поле "Регистрационный номер"
    value =  '1111/12-01'
    # :assert: удаляется сообщение "Необходимо заполнить все поля или оставить пустыми"

    # :step: На форме "Реквизиты клиента юридического лица" в блоке "Контакты" заполняем поле "Мобильный телефон контактного лица" невалидным значением > 50 символов (51)
    value =  '+29123456789132545678912346587913235468745621345123'
    # :assert: значение обрезается до 50 символов
    # :step: Заполняем поле "Мобильный телефон контактного лица" невалидным значением, начинающимся с "+375" и > 13 символов (14)
    value =  '+3752929295555'
    # :assert: Выводится сообщение об ошибке ввода "Неверный формат"
    # :step: Заполняем поле "Мобильный телефон контактного лица" невалидным значением, начинающимся не с "+"
    value =  '3752929295555'
    # :assert: Выводится сообщение об ошибке ввода "Неверный формат"
    # :step: Заполняем поле "Мобильный телефон контактного лица" валидным значением начинающимся с "+375"
    value =  '+375292929555'
    # :step: Очищаем поле "Мобильный телефон контактного лица"
    # :assert: Выводится сообщение об ошибке "Значение обязательно для заполнения"

    # :step: Заполняем поле "ФИО контактного лица"  невалидным значением > 200 символов (201)
    value =  'Возможность нахождения поисковых ключей в тексте и определения их количества полезна как для написания нового текста, так и для оптимизации уже существующего. Расположение ключевых слов по группам и по'
    # :assert: значение обрезается до 200 символов

    # :step: Заполняем поле "Городской телефон клиента" невалидным значением > 50 символов (51)
    value =  '+29123456789132545678912346587913235468745621345123'
    # :assert: значение обрезается до 50 символов
    # :step: Заполняем поле "Городской телефон клиента" невалидным значением начинающимся с "+375" и > 13 символов
    value =  '+3752929295555'
    # :assert: Выводится сообщение об ошибке ввода "Неверный формат"
    # :step: Заполняем поле "Городской телефон клиента" невалидным значением начинающимся не с "+"
    value =  '3752929295555'
    # :assert: Выводится сообщение об ошибке ввода "Неверный формат"
    # :step: Очищаем поле "Городской телефон клиента"
    # :assert: Выводится сообщение об ошибке "Значение обязательно для заполнения"
    # :step: Заполняем поле "Городской телефон клиента" валидным значением начинающимся с "+375"
    value =  '+375292929555'

    # :step: Заполняем поле "E-mail" невалидным значением
    value = 'Тест'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "E-mail" невалидным значением
    value = 't_e-s.t/te'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "E-mail" невалидным значением
    value = 't_e-s.t/te@s.@t.t'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "E-mail" невалидным значением
    value = 't_e-s.t/te@s.@t.tes1'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "E-mail" невалидным значением
    value = 't_e-s.t/te@s.@t.testt'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "E-mail" невалидным значением > 200 символов (201)
    value = 'Возможностьнахожденияпоисковыхключейвтекстеиопределенияихколичестваполезнакакдлянаписанияновоготекстатакидляоптимизацииужесуществующегорасположениеключевыхсловпогруппамипочастотесделаетнавигациюпокл.рф'
    # :assert: Значение обрезается до 200 символов, выводится сообщение "Неверный формат"
    # :step: Заполняем поле "E-mail" валидным значением
    value = 't_e-s.t/te@s.t.test'

    # :step: Заполняем поле "Иной E-mail" невалидным значением
    value = 'Тест'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "Иной E-mail" невалидным значением
    value = 't_e-s.t/te'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "Иной E-mail" невалидным значением
    value = 't_e-s.t/te@s.@t.t'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "Иной E-mail" невалидным значением
    value = 't_e-s.t/te@s.@t.tes1'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "Иной E-mail" невалидным значением
    value = 't_e-s.t/te@s.@t.testt'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "Иной E-mail" невалидным значением > 200 символов (201)
    value = 'Возможностьнахожденияпоисковыхключейвтекстеиопределенияихколичестваполезнакакдлянаписаниянового@текстатакидляоптимизацииужесуществующегорасположениеключевыхсловпогруппамипочастотесделаетнавигациюпокл.рф'
    # :assert: Значение поля "Иной E-mail" обрезается до 200 символов, выводится сообщение "Неверный формат"
    # :step: Заполняем поле "Иной E-mail" валидным значением
    value = 't_e-s.t/te@s.t.test'

    # :step: Заполняем поле "Адрес сайта в интернете" невалидным значением, без 'www'
    value =  'sait.com'
    # :assert: Выводится ошибка ввода "Неверный формат"
    # :step: Заполняем поле "Адрес сайта в интернете" невалидным значением > 200 символов (201)
    value = 'www.взможностьнахожденияпоисковыхключейвтекстеиопределенияихколичестваполезнакакдлянаписаниянового@текстатакидляоптимизацииужесуществующегорасположениеключевыхсловпогруппамипочастотесделаетнавигациюпокл.рф'
    # :assert: Значение обрезается до 200 символов, отображается сообщение "Неверный формат"
    # :step: заполняем поле "Адрес сайта в интернете"
    value =  'www.sait.бел'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем поле "Дата идентификации ПОД/ФТ"
    value =  '09.02.2021'
    # :assert: Дата выбирается только из календаря и может быть только текущей
    # :step: выбираем "Ответственное подразделение" из списка
    value =  'Управление сопровождения розничных операций'
    # :assert: значения списка = Подразделения обслуживания из справочника ерк GC_SPR_SIMPLE_TYPE (BankDepartment)

    # :assert: Кнопка "Далее" разблокирована

    # :step: На форме "Реквизиты клиента юридического лица" очищаем "Название"
    # :assert: Кнопка "Далее" блокируется
    # :step: Вводим значением "Название"
    value = 'Вот это фирмочка'
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме Подтверждение статуса проверки клиента нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: заявка завершается с созданием клиента ИП в СКЗ, ЕРК

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_58(app, db_credo):
    """
    {#
        :id:                53753_58
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка заполнения полей анкеты клиента юридического лица
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Инициатор заявки пользователь semenov имеет роль msb_front_office
        :precondition:      Тестовый клиент не существует в ЕРК
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :comment:           Текущая дата 09.02.2020
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 15
        :time_of_test:      35
        :count_of_check:    23
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'CorporateFind'
    VARIANT = 'CustomerFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'Беларусь'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '375896412'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем кнопку "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение поля "Организационно-правовая форма клиента"
    value = 'ОТКРЫТОЕ АКЦИОНЕРНОЕ ОБЩЕСТВО'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Название"
    value = 'ОАО СЕЙЧАС ЕЩЁ РАЗ ПРОВЕРИМ ТУТ ВСЁ'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Полное наименование"
    value = 'ОАО ПОСЛЕДНЯЯ ПРОВЕРОЧКА не точно'

    # :step: Выбираем значение из выпадающего списка "Тип субъекта", у которого в справочнике «Тип субъекта» поле «Тип субъекта ЕРК» = «2»
    value = 'лизинговые организации'

    # :step: Выбираем значение из выпадающего списка "Оргструктура"
    value = '21 - Представительства'

    # :step: Выбираем значение из выпадающего списка "Тип сектора экономики (форма собственности)"
    value = 'Частная собственность (210+220+300+400)'

    # :step: Выбираем значение из выпадающего списка "Вид деятельности (код ОКЭД)"
    value = '(01120) Выращивание табака'

    # :step: Выбираем значение из выпадающего списка "Вид деятельности (код ОКЭД)"
    value = '(46350) Оптовая торговля табачными изделиями'

    # :step: Заполняем "Количество сотрудников"
    value = '5'

    # :step: Заполняем "Сумма"
    value = '352342'

    # :step: Выбираем значение из выпадающего списка "Валюты"
    value = 'Белорусский рубль'

    # :step: Выбираем значение из выпадающего списка "Клиентский блок"
    value = 'Малый бизнес'

    # :step: Выбираем значение из выпадающего списка "Объем выручки"
    value = 'До 3 млн.USD'

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Информация о бенефициарных владельцах" нажимаем на кнопку "Добавить бенефициарного владельца"
    # :step: На форме "Информация о бенефициарных владельцах" заполняем поле "Фамилия"
    value = 'Фамилия'
    # :step: На форме "Информация о бенефициарных владельцах" заполняем поле "Имя"
    value = 'Имя'
    # :step: На форме "Информация о бенефициарных владельцах" заполняем поле "Отчество"
    value = 'Отчество'
    # :step: На форме "Информация о бенефициарных владельцах" заполняем поле "Дата рождения"
    value = '11.08.1995'
    # :step: На форме "Информация о бенефициарных владельцах" заполняем поле "Страна гражданства"
    value = 'Беларусь'
    # :step: На форме "Информация о бенефициарных владельцах" нажимаем кнопку "Добавить"

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информацию о руководителе" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: заполняем поле "Личный номер"
    value = '6131183M846PB7'
    # :step: Нажимаем на кнопку "Поиск Карточки клиента"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Заведение/актуализация карточки руководителя" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Устанавливаем чекбокс "Осуществляет руководство бухгалтерским учетом лично"
    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Адрес регистрации" заполняем поле "Страна"
    value =  'БЕЛАРУСЬ'
    # :step: Указываем Город или населенный пункт (Блок Адрес регистрации)
    value =  'МИНСК Г'
    # :step: Указываем Улицу (Блок Адрес регистрации)
    value =  'СОВЕТСКАЯ УЛ'
    # :step: Указываем Дом(Блок Адрес регистрации)
    value =  '14'
    # :step: Указываем Квартира/офис(Блок Адрес регистрации)
    value =  '22'

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Почтовый адрес" заполняем поле "Страна"
    value =  'БЕЛАРУСЬ'
    # :step: Указываем Город или населенный пункт (Блок Адрес регистрации)
    value =  'БРЕСТ Г, БРЕСТСКАЯ ОБЛ'
    # :step: Указываем Улицу (Блок Адрес регистрации)
    value =  'БРЕСТ ЦЕНТРАЛЬНЫЙ УЛ'
    # :step: Указываем Дом(Блок Адрес регистрации)
    value =  '1'
    # :step: Указываем Квартира/офис(Блок Адрес регистрации)
    value =  '2'

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Наименование регистрирующего органа"
    value =  'регистрирующий орган'
    # :step: Выбираем значение из поля "Наименование документа о регистрации"
    value =  'дополнение к уставу'
    # :step: Заполняем поле "Дата регистрации"
    value =  '07.06.2021'
    # :step: Заполняем поле "Регистрационный номер"
    value =  '111'

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (текущая)" заполняем поле "Наименование регистрирующего органа"
    value =  'ну типа орган'
    # :step: Выбираем значение из поля "Наименование документа о регистрации"
    value =  'Изменение в устав'
    # :step: Заполняем поле "Дата регистрации"
    value =  '04.01.2021'
    # :step: Заполняем поле "Регистрационный номер"
    value =  '123'

    # :step: В блоке "Контакты" заполняем поле "Мобильный телефон контактного лица"
    value = '+375889966462'
    # :step: Заполняем поле "ФИО контактного лица"
    value = 'Ф.И. Лица'
    # :step: Заполняем поле "Городской телефон клиента"
    value = '+375294444445'
    # :step: Заполняем поле "E-mail"
    value = 'почта2@почта.бел'
    # :step: Заполняем поле "Иной E-mail"
    value = 'почта@почта.бел'
    # :step: Заполняем поле "Адрес сайта в интернете"
    value = 'www.проверочка-1.бел'
    # :step: Выбираем значение из поля "Дата идентификации ПОД/ФТ"
    value = '13.01.2021'
    # :step: Выбираем значение из поля "Ответственное подразделение"
    value = 'Отдел сопровождения БПК'

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение статуса проверки клиента" нажимаем "Анкета вопросник для клиента – организации"
    # :assert: В пункте 1 анкеты внесено название: "ОАО СЕЙЧАС ЕЩЁ РАЗ ПРОВЕРИМ ТУТ ВСЁ"
    # :assert: В пункте 1.1 анкеты внесено сокращенное название: "ОАО ПОСЛЕДНЯЯ ПРОВЕРОЧКА не точно"
    # :assert: В пункте 3.1 внесено: "регистрирующий орган, 2021-06-07, рег.номер 111"
    # :assert: В пункте 3.2 внесено: ": ну типа орган, 2021-01-04, рег.номер 123"
    # :assert: В пункте 4 внесены данные из блока "Адрес регистрации"
    # :assert: В пункте 4.1 установлен чекбокс "не соответствует юридическому адресу (указать)", данные внесены из блока "Почтовый адрес"
    # :assert: В пункте 5 чекбокс не установлен
    # :assert: В пункте 9 установлен чекбокс "руководителем принято решение вести бухгалтерский учет и составлять отчетность лично"
    # :assert: В пункте 11 внесены номера телефонов:"375889966462; 375294444445"
    # :assert: В пункте 12 внесён адрес электронной почты: "почта2@почта.бел"
    # :assert: В пункте 13 внесён адрес сайта: "www.проверочка-1.бел"
    # :assert: В пункте 15.1 в таблице заполнены следующие столбцы: ФИО, дата рождения и страна гражданства
    # :assert: В пункте 16 внесено значение поля "Сумма" и буквенный код валюты из поля "Валюта" раздела "Размер зарегестрированного УФ": "352342 BYN"
    # :assert: В пункте 17 через запятую внесены коды ОКЭД: "01150, 46350"
    # :assert: В пункте 18 внесено "Количество сотрудников": "5"
    # :assert: В пункте 21 проставлено значение "отсутствуют"
    # :assert: В пункте 22 проставлено значение "отсутствуют"
    # :assert: В пункте 26 проставлено значение "филиалы отсутствуют"
    # :assert: В пункте 27 проставлено значение "дочерние организации отсутствуют"
    # :assert: В пункте 28 проставлено значение "отсутствуют"
    # :assert: В пункте 29 проставлено значение "нет"
    # :assert: В приложении 1 в поле "Сокращенное наименование организации" внесено сокращенное название: "ОАО ПОСЛЕДНЯЯ ПРОВЕРОЧКА не точно"
    # :assert: В приложении 1 в поле дата автоматически проставлена текущая дата: "09.02.2020"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_59(app, db_credo):
    """
    {#
        :id:                53753_59
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка заполнения полей анкеты клиента индивидуального предпринимателя
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Инициатор заявки пользователь semenov имеет роль msb_front_office
        :precondition:      Тестовый клиент не существует в ЕРК
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :comment:           Текущая дата 09.02.2020
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 87 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Mozilla Firefox 83 [Windows 10; openSuSE Linux Leap 42.2]
        :client_env:        Microsoft EDGE 87 [Windows 10]
        :precondition_time: 15
        :time_of_test:      35
        :count_of_check:    15
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'CorporateFind'
    VARIANT = 'CustomerFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'Беларусь'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "Наименование"
    value = '958674956'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Нажимаем кнопку "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" выбираем значение поля "Организационно-правовая форма клиента"
    value = 'ИНДИВИДУАЛЬНЫЙ ПРЕДПРИНИМАТЕЛЬ'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Название"
    value = 'ИП ДОРОШКО ЯИНА АЛЕКСАНДРОВНА'

    # :step: На форме "Реквизиты клиента юридического лица" заполняем текстовым значением "Полное наименование"
    value = 'ИП ДОРОШКО'

    # :step: Выбираем значение из выпадающего списка "Тип субъекта", у которого в справочнике «Тип субъекта» поле «Тип субъекта ЕРК» = «3»
    value = 'ИНДИВИДУАЛЬНЫЕ ПРЕДПРИНИМАТЕЛИ'

    # :step: Выбираем значение из выпадающего списка "Оргструктура"
    value = '10 - Юридические лица'

    # :step: Выбираем значение из выпадающего списка "Тип сектора экономики (форма собственности)"
    value = 'Частная собственность (210+220+300+400)'

    # :step: Выбираем значение из выпадающего списка "Вид деятельности (код ОКЭД)"
    value = '(01120) Выращивание табака'

    # :step: Выбираем значение из выпадающего списка "Клиентский блок"
    value = 'Малый бизнес'

    # :step: Выбираем значение из выпадающего списка "Объем выручки"
    value = 'Более 3 млн.USD'

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информацию о связанном физическом лице" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: заполняем поле "Личный номер"
    value = '6131183M846PB7'
    # :step: Нажимаем на кнопку "Поиск Карточки клиента"
    # :step: Нажимаем на карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Заведение/актуализация карточки связанного физического лица" нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Адрес регистрации" заполняем поле "Страна"
    value =  'БЕЛАРУСЬ'
    # :step: Указываем Город или населенный пункт (Блок Адрес регистрации)
    value =  'МИНСК Г'
    # :step: Указываем Улицу (Блок Адрес регистрации)
    value =  'СОВЕТСКАЯ УЛ'
    # :step: Указываем Дом(Блок Адрес регистрации)
    value =  '14'
    # :step: Указываем Квартира/офис(Блок Адрес регистрации)
    value =  '22'

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Почтовый адрес" устанавливаем чекбокс "Аналогично месту регистрации"

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Сведения о гос.регистрации (первичная)" заполняем поле "Наименование регистрирующего органа"
    value =  'регистрирующий орган'
    # :step: Выбираем значение из поля "Наименование документа о регистрации"
    value =  'дополнение к уставу'
    # :step: Заполняем поле "Дата регистрации"
    value =  '07.06.2021'
    # :step: Заполняем поле "Регистрационный номер"
    value =  '111'

    # :step: В блоке "Контакты" заполняем поле "Мобильный телефон контактного лица"
    value = '+375889966462'

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение статуса проверки клиента" нажимаем "Анкета вопросник для клиента – ИП"
    # :assert: В пункте 1 анкеты внесено название: "ИП ДОРОШКО ЯИНА АЛЕКСАНДРОВН"
    # :assert: В пункте 1.1 анкеты внесено сокращенное название: "ИП ДОРОШКО"
    # :assert: В пункте 3.1 внесено: "регистрирующий орган, 2021-06-07, рег.номер 111"
    # :assert: В пункте 4 внесены данные из блока "Адрес регистрации"
    # :assert: В пункте 4.1 установлен чекбокс "соответствует юридическому адресу"
    # :assert: В пункте 5 установлен чекбокс "более 3,0 млн. долларов США"
    # :assert: В пункте 12 Адрес электронной почты: нет
    # :assert: В пункте 13 Адрес сайта в Интернете: нет
    # :assert: В пункте 17 внесён код ОКЭД: "01120"
    # :assert: В пункте 26 проставлено значение "филиалы отсутствуют"
    # :assert: В пункте 27 проставлено значение "дочерние организации отсутствуют"
    # :assert: В пункте 28 проставлено значение "отсутствуют"
    # :assert: В пункте 29 проставлено значение "нет"
    # :assert: В приложении 1 в поле "Сокращенное наименование организации" внесено сокращенное название: "ИП ДОРОШКО"
    # :assert: В приложении 1 в поле дата автоматически проставлена текущая дата: "09.02.2020"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_53753_60(app, db_credo):
    """
    {#
        :id:                53753_60
        :priority:          Средний
        :module:            ЕФР
        :description:       Параметр «Проверять клиента в KYC» на заявке = «true» - переходить к задаче «Проверка клиента в KYC(Siron)»
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      В ЕРК присутствует тестовый клиент ИП
        :precondition:      На продукте\варианте параметр doKyc ("Проверять клиента в KYC") = "да"
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :source_point:      RM56944
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 99 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 98 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 99 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

    PRODUCT = 'changing_customer'
    VARIANT = 'CorporateFind'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: «Проверять клиента в KYC» на заявке = «да»
    # :step: На продукте/варианте меняем значение параметра doKyc ("Проверять клиента в KYC")
    value = 'нет'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем "Наименование страны регистрации клиента"
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Заполняем поле "Название"
    value = 'ИПЕШНИКС'
    # :step: Нажимаем кнопку "Поиск"
    # :step: В блоке "Выберите необходимую карточку" выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" нажимаем кнопку "Далее"
    # :assert: Осуществляется переход к задаче «Проверка клиента в KYC(Siron)» (В истории выполнения процесса создана задача "Проверка клиента в KYC(Siron)")


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

