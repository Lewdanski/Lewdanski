@pytest.mark.skip(reason="Template")
def (app, credo_db, forpost_db):
    """
    {#
        :id:                54868_1_MP
        :priority:          Нормальный
        :module:            ЕФР/фронт/МП
        :description:       Проверка валидации полей
        :precondition:      Пользователь МП авторизирован и идентифицирован
        :precondition:      Клиент резидент РБ
        :precondition:      В файле itwCredoFront-process.properties для process id="by.itworks.credo.ChangingCustomerDataFront_v2" установлен параметр isEnabledApk="true"
        :precondition:      На варианте "change_front" установлен процесс 'Бизнес процесс "Изменение данных клиентов" v.3'
        :precondition:      Параметр на варианте cabinet_showTasks = да
        :source_point:      RM_54868
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Android 10, iOS 15.5
        :precondition_time: 10
        :time_of_test:      60
        :count_of_check:    208
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'
    VARIANT = 'change_front'

    # :newpage: #######################################################################################################

    # :step: Создаем онлайн-заявку "Заявка на изменение персональных данных"

    # :newpage: #######################################################################################################

    # :step: В блоке "Личные данные" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Фамилия"
    value = 'ЛевLew'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Фамилия"
    value = '1234567890'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Фамилия"
    value = ''
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение обязательно!", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Фамилия"
    value = 'Лев-Лев'
    # :assert: Кнопка "Сохранить" активна
    # :step: Заполняем поле "Фамилия"
    value = 'Lew'Lew'
    # :assert: Кнопка "Сохранить" активна
    # :step: Заполняем поле "Фамилия"
    value = '!@$%^&*()_+=\|/'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Фамилия" значением из 71 символа
    value = 'ЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧ'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Фамилия" значением из 70 символов
    value = 'ЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧ'
    # :assert: Кнопка "Сохранить" активна


    # :step: Заполняем поле "Имя"
    value = 'СаняALEX'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Имя"
    value = '1234567890'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Имя"
    value = ''
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение обязательно!", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Имя"
    value = 'Са-ня'
    # :assert: Кнопка "Сохранить" активна
    # :step: Заполняем поле "Имя"
    value = 'AL'EX'
    # :assert: Кнопка "Сохранить" активна
    # :step: Заполняем поле "Имя"
    value = '!@$%^&*()_+=\|/'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Имя" значением из 71 символа
    value = 'ЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧ'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Имя" значением из 70 символов
    value = 'ЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧ'
    # :assert: Кнопка "Сохранить" активна


    # :step: Заполняем поле "Отчество"
    value = 'КреветCrevet'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Отчество"
    value = '1234567890'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Отчество"
    value = 'Кре-вет'
    # :assert: Кнопка "Сохранить" активна
    # :step: Заполняем поле "Отчество"
    value = 'Cre'vet'
    # :assert: Кнопка "Сохранить" активна
    # :step: Заполняем поле "Отчество"
    value = '!@$%^&*()_+=\|/'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Отчество" значением из 71 символа
    value = 'ЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧ'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Отчество" значением из 70 символов
    value = 'ЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧ'
    # :assert: Кнопка "Сохранить" активна


    # :step: Заполняем поле "Предыдущая фамилия"
    value = 'КреветCrevet'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Предыдущая фамилия"
    value = '1234567890'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Предыдущая фамилия"
    value = 'Кре-вет'
    # :assert: Кнопка "Сохранить" активна
    # :step: Заполняем поле "Предыдущая фамилия"
    value = 'Cre'vet'
    # :assert: Кнопка "Сохранить" активна
    # :step: Заполняем поле "Предыдущая фамилия"
    value = '!@$%^&*()_+=\|/'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Предыдущая фамилия" значением из 71 символа
    value = 'ЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧ'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Предыдущая фамилия" значением из 70 символов
    value = 'ЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧЧ'
    # :assert: Кнопка "Сохранить" активна


    # :step: Заполняем поле "Имя латиницей"
    value = 'Лев'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Имя латиницей"
    value = '1234567890'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Имя латиницей"
    value = '!@$%^&*()_+=\|/'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Имя латиницей" значением из 71 символа
    value = 'GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Имя латиницей" значением из 70 символов
    value = 'GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG'
    # :assert: Кнопка "Сохранить" активна
    # :step: Заполняем поле "Имя латиницей"
    value = 'Mr.Al-e'x'
    # :assert: Кнопка "Сохранить" активна


    # :step: Заполняем поле "Фамилия латиницей"
    value = 'Лев'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Фамилия латиницей"
    value = '1234567890'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Фамилия латиницей"
    value = '!@$%^&*()_+=\|/'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Фамилия латиницей" значением из 71 символа
    value = 'GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Фамилия латиницей" значением из 70 символов
    value = 'GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG'
    # :assert: Кнопка "Сохранить" активна
    # :step: Заполняем поле "Фамилия латиницей"
    value = 'Mr.Al-e'x'
    # :assert: Кнопка "Сохранить" активна


    # :step: Заполняем поле "E-mail"
    value = 'mailмэил@gmail.com'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "E-mail"
    value = 'mail@gmail.com'
    # :assert: Кнопка "Сохранить" активна
    # :step: Заполняем поле "E-mail"
    value = 'lewdanski@bgpb.by'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Использование электронной почты ОАО "Белгазпромбанк" не в служебных целях запрещено. Введите иной адрес электронной почты", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "E-mail"
    value = '.mail@gmail.com'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "E-mail"
    value = 'mail@gmail.com.'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "E-mail"
    value = 'ma..il@gmail.com'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "E-mail"
    value = 'mailgmail.com'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "E-mail"
    value = 'mail!$%^&*(/\')}{][©²+=|@gmail.com'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "E-mail"
    value = 'mAil-13_sanya.proalexmc@gmail.com'
    # :assert: Кнопка "Сохранить" активна
    # :step: Заполняем поле "E-mail"
    value = 'почтасани@маил.ру'
    # :assert: Кнопка "Сохранить" активна


    # :assert: Поле "Мобильный телефон (основной)" не доступно для редактирования
    # :step: Становимся на поле "Домашний телефон"
    # :assert: Поле предзаполнено значением '+375'
    # :step: Стираем все символы на поле "Домашний телефон"
    # :assert: Остаётся символ '+'
    # :step: Заполняем поле "Домашний телефон"
    value = '+3752599999890'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Домашний телефон"
    value = '+37525999998'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Домашний телефон"
    value = '+375259999989'
    # :assert: Кнопка "Сохранить" активна
    # :step: Заполняем поле "Домашний телефон"
    value = '+489999'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Домашний телефон"
    value = '+4899990'
    # :assert: Кнопка "Сохранить" активна
    # :step: Заполняем поле "Домашний телефон"
    value = '+4899990999999990'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Домашний телефон"
    value = '+489999099999999'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Дополнительный телефон"
    # :assert: Поле предзаполнено значением '+375'
    # :step: Стираем все символы на поле "Дополнительный телефон"
    # :assert: Остаётся символ '+'
    # :step: Заполняем поле "Дополнительный телефон"
    value = '+3752599999890'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Дополнительный телефон"
    value = '+37525999998'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Дополнительный телефон"
    value = '+375259999989'
    # :assert: Кнопка "Сохранить" активна
    # :step: Заполняем поле "Дополнительный телефон"
    value = '+489999'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Дополнительный телефон"
    value = '+4899990'
    # :assert: Кнопка "Сохранить" активна
    # :step: Заполняем поле "Дополнительный телефон"
    value = '+4899990999999990'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Дополнительный телефон"
    value = '+489999099999999'
    # :assert: Кнопка "Сохранить" активна
    # :step: Нажимаем кнопку "Сохранить"


    # :step: В блоке "Данные о документе, удостоверяющем личность" нажимаем кнопку "Изменить"
    # :assert: Поле "Идентификационный номер" не доступно для редактирования
    # :step: Становимся на поле "Гражданство"
    # :assert: Появляется выпадающий список из справочника "Страны и государства", с положительным приоритетом отсортированный от меньшего к большему
    # :step: Выбираем значение
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Становимся на поле "Резиденство"
    # :assert: Появляется выпадающий список из справочника "Страны и государства", с положительным приоритетом отсортированный от меньшего к большему
    # :step: Выбираем значение
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'


    # :step: Становимся на поле "Наименование документа
    # :assert: Появляется выпадающий список из справочника "Типы документов удостоверяющих личность", с положительным приоритетом отсортированный от меньшего к большему
    # :assert: Отображаются значения "Паспорт РБ" и "Идентификационная карта"
    # :step: Выбираем значение
    value = 'Паспорт'


    # :step: Становимся на поле "Гражданство"
    # :step: В выпадающем списке выбираем значение
    value = 'Австралия'
    # :step: Становимся на поле "Наименование документа
    # :assert: В выпадающем списке отображаются значения "Вид на жительство", "Биометрический вид на жительство в РБ" и "Биометрический вид на жительство лица без гражданства"
    # :step: Выбираем значение
    value = 'Вид на жительство'


    # :step: Становимся на поле "Резиденство"
    # :step: В выпадающем списке выбираем значение
    value = 'Австралия'
    # :step: Становимся на поле "Наименование документа
    # :assert: В выпадающем списке отображаются значения "Иностранный паспорт" и "Удостоверение беженца"
    # :step: Выбираем значение
    value = 'Иностранный паспорт'


    # :step: Становимся на поле "Серия и номер документа"
    # :step: Вводим значение
    value = '123456789 JYG'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Гражданство"
    # :step: В выпадающем списке выбираем значение
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Становимся на поле "Резиденство"
    # :step: В выпадающем списке выбираем значение
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Становимся на поле "Наименование документа"
    # :step: В выпадающем списке выбираем значение
    value = 'Паспорт'
    # :step: В поле "Серия и номер документа" вводим значение
    value = 'ФИ3214567'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: В поле "Серия и номер документа" вводим значение
    value = 'ФZ3214567'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: В поле "Серия и номер документа" вводим значение
    value = 'Z L3214567'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: В поле "Серия и номер документа" вводим значение
    value = 'ZL321456'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: В поле "Серия и номер документа" вводим значение
    value = 'ZL32145674'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: В поле "Серия и номер документа" вводим значение
    value = '3214567ZL'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: В поле "Серия и номер документа" вводим значение
    value = 'ZL3214567'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Кем выдан"
    # :step: Вводим значение
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Запрет на сочетание букв латиницы и кириллицы", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '!@$%^&*()_+=\|/'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'Про-,е'хал'
    # :assert: Кнопка "Сохранить" активна
    # :step: Вводим значение
    value = 'Pro-,e'hal'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Дата выдачи"
    # :assert: Открывается системный календарь с выбором даты
    # :step: Выбираем значение меньше даты рождения на 1 день
    value = '24.05.1976'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Дата выдачи документа должна быть больше даты рождения", кнопка "Сохранить" неактивна
    # :step: Выбираем значение равное дате рождения
    value = '25.05.1976'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Дата окончания действия"
    # :assert: Открывается системный календарь с выбором даты
    # :assert: Невозможно выбрать дату больше текущей
    # :step: Нажимаем кнопку "Сохранить"


    # :step: В блоке "Информация о рождении" нажимаем кнопку "Изменить"
    # :step: Становимся на поле "Дата рождения"
    # :assert: Открывается системный календарь с выбором даты
    # :assert: Невозможно выбрать дату меньше текущей
    # :step: Выбираем значение больше даты выдачи ДУЛ на 1 день
    value = '26.05.1976'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Дата рождения должна быть меньше даты выдачи документа", кнопка "Сохранить" неактивна
    # :step: Выбираем значение равное дате рождения
    value = '25.05.1976'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Страна рождения"
    # :assert: Появляется выпадающий список из справочника "Страны и государства", с положительным приоритетом отсортированный от меньшего к большему
    # :step: Выбираем значение
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'


    # :step: Становимся на поле "Область рождения"
    # :step: Вводим значение
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Запрет на сочетание букв латиницы и кириллицы", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '!@$%^&,*()_+=\|/'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'П.ро-е'хал'
    # :assert: Кнопка "Сохранить" активна
    # :step: Вводим значение
    value = 'P.ro-e'hal'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Район рождения"
    # :step: Вводим значение
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Запрет на сочетание букв латиницы и кириллицы", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '!@$%^&,*()_+=\|/'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'П.ро-е'хал'
    # :assert: Кнопка "Сохранить" активна
    # :step: Вводим значение
    value = 'P.ro-e'hal'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Тип населённого пункта"
    # :assert: Появляется выпадающий список из справочника "Типы населенных пунктов", с положительным приоритетом отсортированный от меньшего к большему
    # :step: Выбираем значение
    value = 'ГОРОД'


    # :step: Становимся на поле "Населённый пункт рождения"
    # :step: Вводим значение
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Запрет на сочетание букв латиницы и кириллицы", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '!@$%^&*()_+=\|/'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'П.ро-,е'хал'
    # :assert: Кнопка "Сохранить" активна
    # :step: Вводим значение
    value = 'P.ro-,e'hal'
    # :assert: Кнопка "Сохранить" активна
    # :step: Нажимаем кнопку "Сохранить"


    # :step: В блоке "Адресная информация" нажимаем кнопку "Изменить"
    # :step: Становимся на поле "Страна"
    # :assert: Появляется выпадающий список из справочника "Типы населенных пунктов", с положительным приоритетом отсортированный от меньшего к большему
    # :step: Выбираем значение
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Становимся на поле "Город"
    # :step: Вводим значение
    value = 'Брест'
    # :step: Выбираем предлагаемое значение из СОАТО "БРЕСТ Г, БРЕСТКАЯ ОБЛ"


    # :step: Становимся на поле "Улица"
    # :step: Вводим несуществующую улицу
    value = 'Санёчка'
    # :assert: Сообщение об ошибке отсутствуют
    # :step: Становимся на поле "Дом"
    # :step: Вводим несуществующий дом
    value = 'Санёчка'
    # :assert: Сообщение об ошибке отсутствуют
    # :step: Становимся на поле "Квартира"
    # :step: Вводим несуществующую квартиру
    value = 'Санёчка'
    # :assert: Сообщение об ошибке отсутствуют
    # :step: Становимся на поле "Индекс"
    # :step: Вводим несуществующий индекс
    value = '999999'
    # :assert: Сообщение об ошибке отсутствуют


    # :step: Становимся на поле "Улица"
    # :step: Вводим значение
    value = 'Екельчика'
    # :step: Выбираем предлагаемое значение из СОАТО "ЕКЕЛЬЧИКА УЛ"


    # :step: Становимся на поле "Дом"
    # :step: Вводим значение
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '!@$%^&*()_+=|'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'Про-е/хал123'
    # :assert: Кнопка "Сохранить" активна
    # :step: Вводим значение
    value = 'Pro-/ehal123'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Квартира"
    # :step: Вводим значение
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '!@$%^&*()_+=|'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'Про-е/хал123'
    # :assert: Кнопка "Сохранить" активна
    # :step: Вводим значение
    value = 'Pro-/ehal123'
    # :assert: Кнопка "Сохранить" активна


    # :step: В блоке "Адрес пребывания" в поле "Совпадает с адресом регистрации" выбираем значение
    value = 'Нет'
    # :step: Становимся на поле "Страна"
    # :assert: Появляется выпадающий список из справочника "Типы населенных пунктов", с положительным приоритетом отсортированный от меньшего к большему
    # :step: Выбираем значение
    value = 'РЕСПУБЛИКА БЕЛАРУСЬ'
    # :step: Становимся на поле "Город"
    # :step: Вводим значение
    value = 'Брест'
    # :step: Выбираем предлагаемое значение из СОАТО "БРЕСТ Г, БРЕСТКАЯ ОБЛ"


    # :step: Становимся на поле "Улица"
    # :step: Вводим несуществующую улицу
    value = 'Санёчка'
    # :assert: Сообщение об ошибке отсутствуют
    # :step: Становимся на поле "Дом"
    # :step: Вводим несуществующий дом
    value = 'Санёчка'
    # :assert: Сообщение об ошибке отсутствуют
    # :step: Становимся на поле "Квартира"
    # :step: Вводим несуществующую квартиру
    value = 'Санёчка'
    # :assert: Сообщение об ошибке отсутствуют
    # :step: Становимся на поле "Индекс"
    # :step: Вводим несуществующий индекс
    value = '999999'
    # :assert: Сообщение об ошибке отсутствуют


    # :step: Становимся на поле "Улица"
    # :step: Вводим значение
    value = 'Екельчика'
    # :step: Выбираем предлагаемое значение из СОАТО "ЕКЕЛЬЧИКА УЛ"


    # :step: Становимся на поле "Дом"
    # :step: Вводим значение
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '!@$%^&*()_+=|'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'Про-е/хал123'
    # :assert: Кнопка "Сохранить" активна
    # :step: Вводим значение
    value = 'Pro-/ehal123'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Квартира"
    # :step: Вводим значение
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '!@$%^&*()_+=|'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'Про-е/хал123'
    # :assert: Кнопка "Сохранить" активна
    # :step: Вводим значение
    value = 'Pro-/ehal123'
    # :assert: Кнопка "Сохранить" активна


    # :step: В блоке "Адресная информация" в поле страна выбираем значение
    value = 'АВСТРАЛИЯ'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Страна регистрации не соответствует признаку резиденства", кнопка "Сохранить" неактивна
    # :step: В блоке "Данные о документе, удостоверяющем личность" нажимаем кнопку "Изменить"
    # :step: В поле резиденство выбираем значение
    value = 'АВСТРАЛИЯ'
    # :step: Нажимаем кнопку "Сохранить"
    # :step: В блоке "Адресная информация" становимся на поле "Область" и вводим значение
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '!@$%^&*()_+=|'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'П'ро-ех.ал123'
    # :assert: Кнопка "Сохранить" активна
    # :step: Вводим значение
    value = 'P'ro-eh.al123'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Район"
    # :step: Вводим значение
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '!@$%^&*()_+=|'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'П'ро-е.хал123'
    # :assert: Кнопка "Сохранить" активна
    # :step: Вводим значение
    value = 'P'ro-eh.al123'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Тип населённого пункта"
    # :assert: Появляется выпадающий список из справочника "Типы населенных пунктов", с положительным приоритетом отсортированный от меньшего к большему
    # :step: Выбираем значение
    value = 'ГОРОД'


    # :step: Становимся на поле "Населённый пункт"
    # :step: Вводим значение
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '!@$%^&*_+=|'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'П'ро-е,х.а/л(1)23'
    # :assert: Кнопка "Сохранить" активна
    # :step: Вводим значение
    value = 'P'ro-e,h.al123'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Корпус"
    # :step: Вводим значение
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '!@$%^&*()_+=|'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'Про-е/хал123'
    # :assert: Кнопка "Сохранить" активна
    # :step: Вводим значение
    value = 'Pro-/ehal123'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Индекс"
    # :step: Вводим значение
    value = '12345'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '1234567'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'текст'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '123456'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Тип улицы"
    # :assert: Появляется выпадающий список из справочника "Типы улиц", с положительным приоритетом отсортированный от меньшего к большему
    # :step: Выбираем значение
    value = 'УЛИЦА'


    # :step: Становимся на поле "УЛИЦА"
    # :step: Вводим значение
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Запрет на сочетание букв латиницы и кириллицы", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '!@$%^&*_+=|\'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '№П.р,о-е'х(а)л'
    # :assert: Кнопка "Сохранить" активна
    # :step: Вводим значение
    value = 'P.ro-e'hal'
    # :assert: Кнопка "Сохранить" активна


    # :step: В блоке "Адрес пребывания" в поле "Страна" выбираем значение
    value = 'АВСТРАЛИЯ'
    # :step: Становимся на поле "Область" и вводим значение
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '!@$%^&*()_+=|'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'П.ро-е'хал'
    # :assert: Кнопка "Сохранить" активна
    # :step: Вводим значение
    value = 'P.ro-e'hal'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Район"
    # :step: Вводим значение
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '!@$%^&*()_+=|'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'П.ро-е'хал'
    # :assert: Кнопка "Сохранить" активна
    # :step: Вводим значение
    value = 'P.ro-e'hal'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Тип населённого пункта"
    # :assert: Появляется выпадающий список из справочника "Типы населенных пунктов", с положительным приоритетом отсортированный от меньшего к большему
    # :step: Выбираем значение
    value = 'ГОРОД'


    # :step: Становимся на поле "Населённый пункт"
    # :step: Вводим значение
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '!@$%^&*()_+=|'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'П'ро-е,х.а/л(1)23'
    # :assert: Кнопка "Сохранить" активна
    # :step: Вводим значение
    value = 'P'ro-e,h.al123'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Корпус"
    # :step: Вводим значение
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '!@$%^&*()_+=|'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'Про-е/хал123'
    # :assert: Кнопка "Сохранить" активна
    # :step: Вводим значение
    value = 'Pro-/ehal123'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Индекс"
    # :step: Вводим значение
    value = '12345'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '1234567'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'текст'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '123456'
    # :assert: Кнопка "Сохранить" активна


    # :step: Становимся на поле "Тип улицы"
    # :assert: Появляется выпадающий список из справочника "Типы улиц", с положительным приоритетом отсортированный от меньшего к большему
    # :step: Выбираем значение
    value = 'УЛИЦА'


    # :step: Становимся на поле "УЛИЦА"
    # :step: Вводим значение
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Запрет на сочетание букв латиницы и кириллицы", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '!@$%^&*()_+=\|/'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Значение введено с ошибкой!", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '№П.р,о-е'х(а)лд'
    # :assert: Кнопка "Сохранить" активна
    # :step: Вводим значение
    value = 'P.ro-e'hal'
    # :assert: Кнопка "Сохранить" активна
    # :step: Нажимаем кнопку "Сохранить"

    # :assert: Перед названием города добавлено слово "Город", перед названием улицы добавлено слово "Улица", перед номером дома добавлено слово "Дом", перед номером квартиры добавлено слово "Квартира"


    # :step: В блоке "Информация о трудоустройстве" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Наименование компании"
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Запрет на сочетание букв латиницы и кириллицы"
    # :step: Вводим значение
    value = '!@$%^&*()_+=\|/'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = '"Про-е'хал123"'
    # :assert: Сообщение об ошибке отсутствует
    # :step: Вводим значение
    value = '"Pro-e'hal123"'
    # :assert: Сообщение об ошибке отсутствует
    # :step: Нажимаем кнопку "Добавить место работы +"
    # :assert: Поле "Должность" обязательно для заполнения
    # :step: Заполняем поле "Наименование компании"
    value = ''
    # :step: Становимся на поле "Должность"
    # :assert: Появляется выпадающий список из справочника "Справочник должностей", с положительным приоритетом отсортированный от меньшего к большему
    # :step: Выбираем значение
    value = 'IT-специалист'
    # :step: Нажимаем кнопку "Добавить место работы +"
    # :assert: Поле "Наименование компании" обязательно для заполнения
    # :step: Заполняем поле "Наименование компании"
    value = 'ОООХ "Санёк"'

    # :step: Заполняем поле "Адрес компании"
    value = 'ФY'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Запрет на сочетание букв латиницы и кириллицы"
    # :step: Вводим значение
    value = '!@$%^&*()_+=|'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Вводим значение
    value = 'mAil-13sanya.pro/alex\'mc,gmail.com'
    # :assert: Сообщение об ошибке отсутствует
    # :step: Вводим значение
    value = 'мАил-13Саня.Про/алекс\'мс,гмаил.ком'
    # :assert: Сообщение об ошибке отсутствует
    # :step: Нажимаем кнопку "Добавить место работы +"
    # :step: Нажимаем кнопку "Сохранить"

    # :step: В блоке "Дополнительные сведения" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Идентификационный номер налогоплательщика США (SSN)"
    value = '123-45-678'
    # :assert: Поле подсвечивается красным цветом, отображается сообщение "Неверный формат", кнопка "Сохранить" неактивна
    # :step: Заполняем поле "Идентификационный номер налогоплательщика США (SSN)"
    value = '123-45-6789'
    # :assert: Кнопка "Сохранить" активна
    # :step: Нажимаем кнопку "Сохранить"
    # :assert: Строки с изменёнными данными подсвечены
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: ######################################################################################################

    # :assert: Заявка перешла на форму загрузки изображение ДУЛ


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(file)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def (app, credo_db, forpost_db):
    """
    {#
        :id:                54868_2_MP
        :priority:          Нормальный
        :module:            ЕФР/фронт/МП
        :description:       Проверка названия блоков и полей
        :precondition:      Пользователь МП авторизирован и идентифицирован
        :precondition:      Клиент резидент РБ, у клиента есть место работы
        :precondition:      В файле itwCredoFront-process.properties для process id="by.itworks.credo.ChangingCustomerDataFront_v2" установлен параметр isEnabledApk="true"
        :precondition:      На варианте "change_front" установлен процесс 'Бизнес процесс "Изменение данных клиентов" v.3'
        :precondition:      Параметр на варианте cabinet_showTasks = да
        :source_point:      RM_54868
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Android 10, iOS 15.5
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    31
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'
    VARIANT = 'change_front'

    # :newpage: #######################################################################################################

    # :step: Создаем онлайн-заявку "Заявка на изменение персональных данных"

    # :newpage: #######################################################################################################

    # :assert: В блоке "Личные данные" присутствуют поля "ФИО, Пол, Латинские символы, E-mail, Мобильный телефон (основной), Иные телефоны"
    # :assert: В блоке "Данные о документе, удостоверяющем личность" присутствуют поля "Идентификационный номер, Гражданство, Резиденство, Наименование документа, Серия и номер документа, Выдан"
    # :assert: В блоке "Информация о рождении" присутствуют поля "Дата рождения, Место рождения"
    # :assert: В блоке "Адресная информация" присутствуют поля "Адрес регистрации, Адрес пребывания"
    # :assert: В блоке "Информация о трудоустройстве" присутствует поле "Компания, должность"
    # :assert: В блоке "Дополнительные сведения" присутствуют поля "Идентификационный номер налогоплательщика США"(изначально всегда отображается значение "нет данных"), "Наличие Green Card", "Наличие деловой либо рабочей визы в США"


    # :step: В блоке "Личные данные" нажимаем кнопку "Изменить"
    # :assert: Активируется область редактирования для соответствующего блока, при этом каждой значение редактируется в отдельном поле
    # :assert: Убирается кнопка "Изменить" и добавляется кнопка "Сохранить"
    # :assert: В раскрывшемся блоке "Личные данные" присутствуют поля "Фамилия, Имя, Отчество, "Предыдущая фамилия", Имя латиницей, Фамилия латиницей, Пол, E-mail, Мобильный телефон (основной), Домашний телефон, Дополнительный телефон"


    # :step: В блоке "Данные о документе, удостоверяющем личность" нажимаем кнопку "Изменить"
    # :assert: Активируется область редактирования для соответствующего блока, при этом каждой значение редактируется в отдельном поле
    # :assert: Убирается кнопка "Изменить" и добавляется кнопка "Сохранить"
    # :assert: В раскрывшемся блоке "Данные о документе, удостоверяющем личность" присутствуют поля "Идентификационный номер, Гражданство, Резиденство, Наименование документа, Серия и номер документа, Кем выдан, Дата выдачи, Дата окончания действия"


    # :step: В блоке "Информация о рождении" нажимаем кнопку "Изменить"
    # :assert: Активируется область редактирования для соответствующего блока, при этом каждой значение редактируется в отдельном поле
    # :assert: Убирается кнопка "Изменить" и добавляется кнопка "Сохранить"
    # :assert: В раскрывшемся блоке "Информация о рождении" присутствуют поля "Дата рождения, Страна рождения, Область рождения, Район рождения, Тип населённого пункта, Населённый пункт рождения"


    # :step: В блоке "Адресная информация" нажимаем кнопку "Изменить"
    # :assert: Активируется область редактирования для соответствующего блока, при этом каждой значение редактируется в отдельном поле
    # :assert: Убирается кнопка "Изменить" и добавляется кнопка "Сохранить"
    # :assert: В раскрывшемся блоке "Адресная информация" присутствуют поля "Страна, Город или населенный пункт, Улица, Дом, Квартира"
    # :step: В блоке "Адрес пребывания" в чекбоксе "Совпадает с адресом регистрации" выбираем значение
    value = 'Нет'
    # :assert: В раскрывшемся блоке "Адрес пребывания" присутствуют поля "Адресная информация" присутствуют поля "Страна, Город или населенный пункт, Улица, Дом, Квартира"
    # :step: В блоке "Адресная информация" нажимаем кнопку "Изменить"
    # :step: В поле "Страна" выбираем значение
    value = 'Австралия'
    # :assert: В раскрывшемся блоке "Адресная информация" присутствуют поля "Страна, Индекс, Область, Район, Тип населённого пункта, Населённый пункт, Тип улицы, Улица, Дом, Корпус, Квартира"
    # :step: В блоке "Адрес пребывания" в чекбоксе "Совпадает с адресом регистрации" выбираем значение
    value = 'Нет'
    # :step: В поле "Страна" выбираем значение
    value = 'Австралия'
    # :assert: В раскрывшемся блоке "Адрес пребывания" присутствуют поля "Страна, Индекс, Область, Район, Тип населённого пункта, Населённый пункт, Тип улицы, Улица, Дом, Корпус, Квартира"


    # :step: В блоке "Информация о трудоустройстве" нажимаем кнопку "Изменить"
    # :assert: Активируется область редактирования для соответствующего блока, при этом каждой значение редактируется в отдельном поле
    # :assert: Убирается кнопка "Изменить" и добавляется кнопка "Сохранить"
    # :assert: В раскрывшемся блоке "Информация о трудоустройстве" присутствуют
    # :assert: Поля "Компания, должность" с кнопкой "Удалить", "Наименование компании, Должность, Адрес компании"
    # :assert: Текст подсказки "Чтобы добавить новую запись заполните поля и нажмите «Добавить место работы»" и кнопка "Добавить место работы"


    # :step: В блоке "Дополнительные сведения" нажимаем кнопку "Изменить"
    # :assert: Активируется область редактирования для соответствующего блока, при этом каждой значение редактируется в отдельном поле
    # :assert: Убирается кнопка "Изменить" и добавляется кнопка "Сохранить"
    # :assert: В раскрывшемся блоке "Дополнительные сведения" присутствуют поля "Идентификационный номер налогоплательщика США (SSN)"
    # :assert: "Наличие Green Card" с чекбоксами "Да", "Отказываюсь от ответа" и "Нет",
    # :assert: "Наличие деловой либо рабочей визы в США" с чекбоксами "Да", "Отказываюсь от ответа" и "Нет"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(file)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def (app, credo_db, forpost_db):
    """
    {#
        :id:                54868_3_MP
        :priority:          Нормальный
        :module:            ЕФР/фронт/МП
        :description:       Проверка поиска и сохранения данных клиента в ЕРК, СКЗ
        :precondition:      Пользователь МП авторизирован и идентифицирован
        :precondition:      Пользователь СКЗ авторизирован
        :precondition:      Клиент резидент РБ
        :precondition:      В файле itwCredoFront-process.properties для process id="by.itworks.credo.ChangingCustomerDataFront_v2" установлен параметр isEnabledApk="true"
        :precondition:      На варианте "change_front" установлен процесс 'Бизнес процесс "Изменение данных клиентов" v.3'
        :precondition:      Параметр на варианте cabinet_showTasks = да
        :comment:           Запрос в ЕРК отправляем с помощью Postman
        :source_point:      RM_54868
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Android 10, iOS 15.5
        :client_env:        Google Chrome 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 100 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 101 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    10
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'
    VARIANT = 'change_front'

    # :newpage: #######################################################################################################

    # :step: Создаем онлайн-заявку "Заявка на изменение персональных данных"

    # :newpage: #######################################################################################################

    # :assert: Все поля заполнились данными из ЕРК
    # :step: В блоке "Личные данные" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Фамилия"
    value = 'ТестЕРК'
    # :step: Заполняем поле "Имя"
    value = 'ТестЕРК'
    # :step: Заполняем поле "Отчество"
    value = 'ТестЕРК'
    # :step: Заполняем поле "Имя латиницей"
    value = 'TestERK'
    # :step: Заполняем поле "Фамилия латиницей"
    value = 'TestERK'
    # :step: Заполняем поле "Предыдущая фамилия"
    value = 'ТестЕРК'
    # :step: Заполняем поле "Пол" противоположным значением текущему
    value = 'Женский'
    # :step: Заполняем поле "E-mail"
    value = 'testERK@gmail.com'
    # :step: Заполняем поле "Домашний телефон"
    value = '+375162222222'
    # :step: Заполняем поле "Дополнительный телефон"
    value = '+375333333333'
    # :step: Нажимаем кнопку "Сохранить"


    # :step: В блоке "Данные о документе, удостоверяющем личность" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Гражданство"
    value = 'Республика Беларусь'
    # :step: Заполняем поле "Наименование документа"
    value = 'Идентификационная карта'
    # :step: Заполняем поле "Серия и номер документа"
    value = 'ZS7777777'
    # :step: Заполняем поле "Кем выдан"
    value = '(001) МВД'
    # :step: Заполняем поле "Дата выдачи"
    value = '01.01.2010'
    # :step: Заполняем поле "Дата окончания действия"
    value = '03.03.2030'
    # :step: Нажимаем кнопку "Сохранить"


    # :step: В блоке "Информация о рождении" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Дата рождения"
    value = '04.04.1994'
    # :step: Заполняем поле "Страна рождения"
    value = 'Республика Беларусь'
    # :step: Заполняем поле "Область рождения"
    value = 'ТестЕРК'
    # :step: Заполняем поле "Район рождения"
    value = 'ТестЕРК'
    # :step: Заполняем поле "Тип населённого пункта рождения"
    value = 'Город'
    # :step: Заполняем поле "Населённый пункт рождения"
    value = 'Минск'
    # :step: Нажимаем кнопку "Сохранить"


    # :step: В блоке "Адресная информация" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Страна"
    value = 'Республика Беларусь'
    # :step: Заполняем поле "Город или населённый пункт"
    value = 'Минск Г'
    # :step: Заполняем поле "Улица"
    value = 'ТестоваяЕРК'
    # :step: Заполняем поле "Дом"
    value = '777'
    # :step: Заполняем поле "Квартира"
    value = '999'
    # :step: Заполняем поле "Индекс"
    value = '999777'
    # :step: Заполняем поле "Совпадает с адресом регистрации"
    value = 'Нет'
    # :step: Заполняем поле "Город или населённый пункт"
    value = 'Брест Г, Бресткая ОБЛ'
    # :step: Заполняем поле "Улица"
    value = 'ЕРКТестовая'
    # :step: Заполняем поле "Дом"
    value = '666'
    # :step: Заполняем поле "Квартира"
    value = '555'
    # :step: Заполняем поле "Индекс"
    value = '777999'
    # :step: Нажимаем кнопку "Сохранить"


    # :step: В блоке "Информация о трудоустройстве" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Наименование компании"
    value = 'ТестЕрк'
    # :step: Заполняем поле "Должность"
    value = 'IT-специалист'
    # :step: Заполняем поле "Адрес компании"
    value = 'ТестЕрк'
    # :step: Нажимаем кнопку "Добавить место работы +"
    # :step: Нажимаем кнопку "Сохранить"


    # :step: В блоке "Дополнительные сведения" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Идентификационный номер налогоплательщика США (SSN)"
    value = '123-45-6789'
    # :step: Заполняем поле "Наличие Green Card"
    value = 'Отказываюсь от ответа'
    # :step: Заполняем поле "Наличие деловой либо рабочей визы в США"
    value = 'Нет'
    # :step: Нажимаем кнопку "Сохранить"
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Назад"

    # :newpage: #######################################################################################################

    # :assert: Выполнен переход на предыдущую страницу со всеми введёнными ранее данными
    # :step: Нажимаем кнопку "Выбрать файл"
    # :step: В выпадающем списке нажимаем кнопку "Медиатека"
    # :step: Выбираем любое фото и подтверждаем его выбор
    # :step: Нажимаем кнопку "Снять фото"
    # :step: Делаем фото и подтверждаем его отправку
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Назад"

    # :newpage: #######################################################################################################

    # :assert: Выполнен переход на предыдущую страницу с прикреплением файлов
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"
    # :step: Вводим пароль приложения

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Заявка создана в бэк со статусом "Начата обработка" и статус в МП "Заявка отправлена"
    # :assert: В МП отображается идентификатор заявки и кнопка "Отмена"
    # :step: В СКЗ переходим в "Мои задачи"
    # :step: Нажимаем кнопку "Продолжить" на нужной задаче

    # :newpage: #######################################################################################################

    # :assert: Заявка в бэк со статусом "На рассмотрении" и статус в МП "Заявка обрабатывается"
    # :assert: В списке заявок МП около нужной заявки отсутствует кнопка "Отмена"
    # :assert: Все введённые данные в МП присутствуют на форме "Карточка клиента"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Все данные клиента введённые в МП переданы в ЕРК
    # :assert: Все данные клиента введённые в МП переданы и сохранены в ЕРК, СКЗ


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(file)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def (app, credo_db, forpost_db):
    """
    {#
        :id:                54868_4_MP
        :priority:          Нормальный
        :module:            ЕФР/фронт/МП
        :description:       Проверка прикрепления pdf-файлов с id-картой
        :precondition:      Пользователь МП авторизирован и идентифицирован
        :precondition:      Пользователь СКЗ авторизирован
        :precondition:      Клиент резидент РБ
        :precondition:      В файле itwCredoFront-process.properties для process id="by.itworks.credo.ChangingCustomerDataFront_v2" установлен параметр isEnabledApk="true"
        :precondition:      На варианте "change_front" установлен процесс 'Бизнес процесс "Изменение данных клиентов" v.3'
        :precondition:      Параметр на варианте cabinet_showTasks = да
        :source_point:      RM_54868
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Android 10, iOS 15.5
        :client_env:        Google Chrome 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 100 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 101 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    7
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'
    VARIANT = 'change_front'

    # :newpage: #######################################################################################################

    # :step: Создаем онлайн-заявку "Заявка на изменение персональных данных"

    # :newpage: #######################################################################################################

    # :step: В блоке "Личные данные" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Фамилия"
    value = 'ТестКамерыПервый'
    # :step: Нажимаем кнопку "Сохранить"

    # :step: В блоке "Данные о документе, удостоверяющем личность" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Наименование документа"
    value = 'Идентификационная карта'
    # :step: Заполняем поле "Кем выдан"
    value = '(001) МВД'
    # :step: Нажимаем кнопку "Сохранить"
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Выбрать файл"
    # :step: В выпадающем списке нажимаем кнопку "Снять фото"
    # :step: Делаем фото и подтверждаем его отправку

    # :step: Нажимаем кнопку "Выбрать файл"
    # :step: В выпадающем списке нажимаем кнопку "Выбрать файл"
    # :step: Выбираем pdf-файл размером 7.01 Мб
    # :assert: Отобразилось сообщение "Размер файла должен быть не более 7 Мб!"
    # :step: Нажимаем кнопку "ОК"
    # :step: Выбираем pdf-файл из 4 страниц
    # :assert: Отобразилось сообщение "Файл #1 (Файл.pdf) содержит слишком большое кол-во страниц (4). Максимум 3"
    # :step: Нажимаем кнопку "ОК"
    # :step: Выбираем pdf-файл размером 7.0 Мб из 3 страниц
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Отображается форма VASCO-подтверждения
    # :step: Вводим неправильный пароль приложения
    # :assert: Отображается сообщение "Ошибка авторизации. Неверный код доступа."
    # :step: Нажимаем кнопку "ОК"
    # :step: Вводим правильный пароль приложения

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: В СКЗ переходим в "Мои задачи"
    # :step: Нажимаем кнопку "Продолжить" на нужной задаче

    # :newpage: #######################################################################################################

    # :step: В блоке "Копии документов" присутствуют поля "Прикреплённое изображение 1", "Прикреплённое изображение 2" и "Прикреплённые изображения pdf"
    # :step: Нажимаем кнопку "Скачать" возле первого прикреплённого изображения
    # :assert: Скачался прикреплённый файл из МП в формате png
    # :step: Нажимаем кнопку "Скачать" возле второго прикреплённого изображения
    # :assert: Скачался прикреплённый файл из МП в формате pdf
    # :step: Нажимаем кнопку "Скачать" возле pdf-склейки прикреплённых изображений
    # :assert: Скачался файл в формате pdf, состоящий из файлов прикрепленных пользователем МП


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(file)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def (app, credo_db, forpost_db):
    """
    {#
        :id:                54868_5_MP
        :priority:          Нормальный
        :module:            ЕФР/фронт/МП
        :description:       Проверка ключевых полей
        :precondition:      Пользователь МП авторизирован и идентифицирован
        :precondition:      Пользователь СКЗ авторизирован
        :precondition:      Клиент резидент РБ
        :precondition:      В файле itwCredoFront-process.properties для process id="by.itworks.credo.ChangingCustomerDataFront_v2" установлен параметр isEnabledApk="true"
        :precondition:      На варианте "change_front" установлен процесс 'Бизнес процесс "Изменение данных клиентов" v.3'
        :precondition:      Параметр на варианте cabinet_showTasks = да
        :source_point:      RM_54868
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Android 10, iOS 15.5
        :client_env:        Google Chrome 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 100 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 101 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    4
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'
    VARIANT = 'change_front'

    # :newpage: #######################################################################################################

    # :step: Создаем онлайн-заявку "Заявка на изменение персональных данных"

    # :newpage: #######################################################################################################

    # :step: В блоке "Личные данные" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Фамилия"
    value = 'ТестПолей'
    # :step: Заполняем поле "Имя"
    value = 'ТестПолей'
    # :step: Заполняем поле "Имя латиницей"
    value = 'TestPoley'
    # :step: Заполняем поле "Фамилия латиницей"
    value = 'TestPoley'
    # :step: Заполняем поле "Пол" противоположным значением текущему
    value = 'Мужской'
    # :step: Нажимаем кнопку "Сохранить"


    # :step: В блоке "Данные о документе, удостоверяющем личность" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Гражданство"
    value = 'Республика Беларусь'
    # :assert: Поле резиденство недоступно для редактирования
    # :step: Заполняем поле "Наименование документа"
    value = 'Идентификационная карта'
    # :step: Заполняем поле "Серия и номер документа"
    value = 'ZS5555555'
    # :step: Заполняем поле "Кем выдан"
    value = '(001) МВД'
    # :step: Заполняем поле "Дата выдачи"
    value = '01.01.2011'
    # :step: Заполняем поле "Дата окончания действия"
    value = '03.03.2031'
    # :step: Нажимаем кнопку "Сохранить"


    # :step: В блоке "Информация о рождении" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Дата рождения"
    value = '02.02.1992'
    # :step: Заполняем поле "Страна рождения"
    value = 'Республика Беларусь'
    # :step: Заполняем поле "Тип населённого пункта рождения"
    value = 'Город'
    # :step: Заполняем поле "Населённый пункт рождения"
    value = 'Минск'
    # :step: Нажимаем кнопку "Сохранить"


    # :step: В блоке "Адресная информация" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Страна"
    value = 'Республика Беларусь'
    # :step: Заполняем поле "Город или населённый пункт"
    value = 'Минск Г'
    # :step: Заполняем поле "Улица"
    value = 'ТестоваяПолевая'
    # :step: Заполняем поле "Дом"
    value = '333'
    # :step: Заполняем поле "Совпадает с адресом регистрации"
    value = 'Да'
    # :step: Нажимаем кнопку "Сохранить"
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :assert: Пароль приложения не запрашивался
    # :step: Нажимаем кнопку "Выбрать файл"
    # :step: В выпадающем списке нажимаем кнопку "Снять фото"
    # :step: Делаем фото и подтверждаем его отправку

    # :step: Нажимаем кнопку "Выбрать файл"
    # :step: В выпадающем списке нажимаем кнопку "Снять фото"
    # :step: Делаем фото и подтверждаем его отправку
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"
    # :step: Вводим пароль приложения

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: В СКЗ переходим в "Список параметров заявки"
    # :assert: У параметра "Тип изменённых данных клиентом" значение "ключевые"

    # :newpage: #######################################################################################################

    # :step: В списке заявок МП около нужной заявки нажимаем кнопку "Отменить"
    # :assert: Кнопка "Отменить" пропадает, статус заявки в МП "Отменена" и в бэке "Отказ клиента"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(file)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def (app, credo_db, forpost_db):
    """
    {#
        :id:                54868_6_MP
        :priority:          Нормальный
        :module:            ЕФР/фронт/МП
        :description:       Проверка получения ошибки отправки email, отправка сообщения пользователям с ролью admins
        :precondition:      Пользователь МП авторизирован и идентифицирован
        :precondition:      Пользователь СКЗ авторизирован
        :precondition:      Клиент резидент РБ
        :precondition:      В файле itwCredoFront-process.properties для process id="by.itworks.credo.ChangingCustomerDataFront_v2" установлен параметр isEnabledApk="true"
        :precondition:      На варианте "change_front" установлен процесс 'Бизнес процесс "Изменение данных клиентов" v.3'
        :precondition:      Параметр на варианте cabinet_showTasks = да
        :comment:           E-mail "alexander.lewdanski@gmail.comochek" отсутствует в системе
        :comment:           У пользователя levdanskij присутствует роль admins
        :comment:           У пользователя gulevich присутствует роль admins
        :comment:           У пользователя savchuk присутствует роль admins
        :comment:           У пользователя kravchuk присутствует роль admins
        :comment:           У пользователя maslov отсутствует роль admins
        :source_point:      RM_54868
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Android 10, iOS 15.5
        :client_env:        Google Chrome 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 100 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 101 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    4
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'
    VARIANT = 'change_front'

    # :newpage: #######################################################################################################

    # :step: Создаем онлайн-заявку "Заявка на изменение персональных данных"

    # :newpage: #######################################################################################################

    # :step: В блоке "Личные данные" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "E-mail"
    value = 'alexander.lewdanski@gmail.comochek'
    # :step: Нажимаем кнопку "Сохранить"
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"
    # :step: Вводим пароль приложения

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: В СКЗ переходим в "Мои задачи"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Продолжить" на нужной задаче

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме ожидания получения копий документов устанавливаем чек-бокс "Копия документов получена"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме сравнения данных клиента устанавливаем чек-бокс "Данные корректны"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: В СКЗ переходим в "Мои задачи"

    # :newpage: #######################################################################################################

    # :assert: Заявка в статусе "Ошибка выполнения задачи"
    # :step: Нажимаем кнопку "Продолжить" на нужной задаче

    # :newpage: #######################################################################################################

    # :assert: На форме ошибки отправки email отображается сообщение "Ошибка отправки почты по адресу alexander.lewdanski@gmail.comochek: Unable to send email"
    # :assert: Пользователям levdanskij, gulevich, savchuk, kravchuk отправлено письмо об ошибке отправки email с текстом "Ошибка отправки почты по адресу alexander.lewdanski@gmail.com: Unable to send email"
    # :assert: Пользователю maslov не отправлено письмо об ошибке отправки email


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(file)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def (app, credo_db, forpost_db):
    """
    {#
        :id:                54868_7_MP
        :priority:          Нормальный
        :module:            ЕФР/фронт/МП
        :description:       Проверка получения ошибки при отсутствии связи с СКЗ, отображение ошибки и справочника
        :precondition:      Пользователь МП авторизирован и идентифицирован
        :precondition:      Пользователь СКЗ авторизирован
        :precondition:      Клиент резидент РБ
        :precondition:      В файле itwCredoFront-process.properties для process id="by.itworks.credo.ChangingCustomerDataFront_v2" установлен параметр isEnabledApk="true"
        :precondition:      На варианте "change_front" установлен процесс 'Бизнес процесс "Изменение данных клиентов" v.3'
        :precondition:      Параметр на варианте cabinet_showTasks = да
        :comment:           Для получения ошибки об отсутствии связи с СКЗ отключаем бэк-сервер
        :comment:           В справочнике "info_guide_for_ibank" строка "(apk) Не успешное оформление заявки на изменение данных" заполнена текстом "Какая-то ошибка"
        :source_point:      RM_54868
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Android 10, iOS 15.5
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'
    VARIANT = 'change_front'

    # :newpage: #######################################################################################################

    # :step: Создаем онлайн-заявку "Заявка на изменение персональных данных"

    # :newpage: #######################################################################################################

    # :assert: На форме заявки на изменение персональных данных отображается сообщение с текстом "Заявка не может быть оформлена. Попробуйте оформить заявку позже."
    # :step: Запускаем бэк-сервер

    # :newpage: #######################################################################################################

    # :step: Создаем онлайн-заявку "Заявка на изменение персональных данных"

    # :newpage: #######################################################################################################

    # :step: В блоке "Личные данные" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Фамилия"
    value = 'ТестОшибки'
    # :step: Нажимаем кнопку "Сохранить"
    # :step: Нажимаем кнопку "Продолжить"

    # :step: В блоке "Данные о документе, удостоверяющем личность" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Наименование документа"
    value = 'Идентификационная карта'
    # :step: Заполняем поле "Кем выдан"
    value = '(001) МВД'
    # :step: Нажимаем кнопку "Сохранить"
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Выбрать файл"
    # :step: В выпадающем списке нажимаем кнопку "Снять фото"
    # :step: Делаем фото и подтверждаем его отправку

    # :step: Нажимаем кнопку "Выбрать файл"
    # :step: В выпадающем списке нажимаем кнопку "Снять фото"
    # :step: Делаем фото и подтверждаем его отправку
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: Отключаем бэк-сервер
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Вводим пароль приложения

    # :newpage: #######################################################################################################

    # :assert: На форме заявки на изменение персональных данных отображается сообщение с текстом "Какая-то ошибка"


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(file)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def (app, credo_db, forpost_db):
    """
    {#
        :id:                54868_8_MP
        :priority:          Нормальный
        :module:            ЕФР/фронт/МП
        :description:       Проверка получения ошибки связи с ЕРК, отправка сообщения пользователям с ролью admins
        :precondition:      Пользователь МП авторизирован и идентифицирован
        :precondition:      Пользователь СКЗ авторизирован
        :precondition:      Клиент резидент РБ
        :precondition:      В файле itwCredoFront-process.properties для process id="by.itworks.credo.ChangingCustomerDataFront_v2" установлен параметр isEnabledApk="true"
        :precondition:      На варианте "change_front" установлен процесс 'Бизнес процесс "Изменение данных клиентов" v.3'
        :precondition:      Параметр на варианте cabinet_showTasks = да
        :comment:           Для получения ошибки поиска клиента в ЕРК удаляем первые 30 строк из файла SearchClientForEFRInERK_in.xsl
        :comment:           У пользователя levdanskij присутствует роль admins
        :comment:           У пользователя gulevich присутствует роль admins
        :comment:           У пользователя savchuk присутствует роль admins
        :comment:           У пользователя kravchuk присутствует роль admins
        :comment:           У пользователя maslov отсутствует роль admins
        :source_point:      RM_54868
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Android 10, iOS 15.5
        :client_env:        Google Chrome 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 100 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 101 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    4
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'
    VARIANT = 'change_front'

    # :newpage: #######################################################################################################

    # :step: Создаем онлайн-заявку "Заявка на изменение персональных данных"

    # :newpage: #######################################################################################################

    # :step: В блоке "Личные данные" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Фамилия"
    value = 'ТестОшибкиЕРК'
    # :step: Нажимаем кнопку "Сохранить"
    # :step: Нажимаем кнопку "Продолжить"

    # :step: В блоке "Данные о документе, удостоверяющем личность" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Наименование документа"
    value = 'Идентификационная карта'
    # :step: Заполняем поле "Кем выдан"
    value = '(001) МВД'
    # :step: Нажимаем кнопку "Сохранить"
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Выбрать файл"
    # :step: В выпадающем списке нажимаем кнопку "Снять фото"
    # :step: Делаем фото и подтверждаем его отправку

    # :step: Нажимаем кнопку "Выбрать файл"
    # :step: В выпадающем списке нажимаем кнопку "Снять фото"
    # :step: Делаем фото и подтверждаем его отправку
    # :step: Удаляем первые 30 строк из файла SearchClientForEFRInERK_in.xsl
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Вводим пароль приложения
    value = '159487'

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: В СКЗ переходим в "Мои задачи"

    # :newpage: #######################################################################################################

    # :assert: Заявка в статусе "Ошибка выполнения задачи"
    # :step: Нажимаем кнопку "Продолжить" на нужной задаче

    # :newpage: #######################################################################################################

    # :assert: На форме ошибки поиска клиента отображается сообщение "execPutRequest,fireAllRules: Exception executing consequence for rule "Find in erk" in defaultpkg: javax.xml.transform.TransformerConfigurationException: net.sf.saxon.s9api.SaxonApiException: org.xml.sax.SAXParseException; systemId: file:/opt/releases/release_30/back/nodes/node4/standalone/configuration/xsl/SearchClientForEFRInERK_in.xsl; lineNumber: 2; columnNumber: 12; The markup in the document preceding the root element must be well-formed."
    # :assert: Пользователям  levdanskij, gulevich, savchuk, kravchuk отправлено письмо об ошибке поиска клиента с текстом "execPutRequest,fireAllRules: Exception executing consequence for rule "Find in erk" in defaultpkg: javax.xml.transform.TransformerConfigurationException: net.sf.saxon.s9api.SaxonApiException: org.xml.sax.SAXParseException; systemId: file:/opt/releases/release_30/back/nodes/node4/standalone/configuration/xsl/SearchClientForEFRInERK_in.xsl; lineNumber: 2; columnNumber: 12; The markup in the document preceding the root element must be well-formed."
    # :assert: Пользователю maslov не отправлено письмо об ошибке отправки email


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(file)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def (app, credo_db, forpost_db):
    """
    {#
        :id:                54868_9_MP
        :priority:          Нормальный
        :module:            ЕФР/фронт/МП
        :description:       Проверка получения ошибки связи с СОУ, отправка сообщения пользователям с ролью admins
        :precondition:      Пользователь МП авторизирован и идентифицирован
        :precondition:      Пользователь СКЗ авторизирован
        :precondition:      Клиент резидент РБ
        :precondition:      В файле itwCredoFront-process.properties для process id="by.itworks.credo.ChangingCustomerDataFront_v2" установлен параметр isEnabledApk="true"
        :precondition:      На варианте "change_front" установлен процесс 'Бизнес процесс "Изменение данных клиентов" v.3'
        :precondition:      Параметр на варианте cabinet_showTasks = да
        :comment:           Для получения ошибки обновления телефона в СОУ на моменте прикрепления файлов отключали тестовый эмулятор СОУ
        :comment:           У пользователя levdanskij присутствует роль admins
        :comment:           У пользователя gulevich присутствует роль admins
        :comment:           У пользователя savchuk присутствует роль admins
        :comment:           У пользователя kravchuk присутствует роль admins
        :comment:           У пользователя maslov отсутствует роль admins
        :source_point:      RM_54868
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Android 10, iOS 15.5
        :client_env:        Google Chrome 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 100 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 101 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    4
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'
    VARIANT = 'change_front'

    # :newpage: #######################################################################################################

    # :step: Создаем онлайн-заявку "Заявка на изменение персональных данных"

    # :newpage: #######################################################################################################

    # :step: В блоке "Личные данные" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "E-mail"
    value = 'levdanskij@itwlocal.by'
    # :step: Нажимаем кнопку "Сохранить"
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Вводим пароль приложения

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: В СКЗ переходим в "Мои задачи"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Продолжить" на нужной задаче

    # :newpage: #######################################################################################################

    # :step: Отключаем эмулятор СОУ
    # :step: В блоке "Контактные данные" заполняем поле "Мобильный телефон"
    value = '+375250000000'
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме ожидания получения копий документов заполняем чек-бокс "Копия получена"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме сравнения данных клиента заполняем чек-бокс "Данные корректны"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: В СКЗ переходим в "Мои задачи"

    # :newpage: #######################################################################################################

    # :assert: Заявка в статусе "Клиент не найден в СОУ"
    # :step: Нажимаем кнопку "Продолжить" на нужной задаче

    # :newpage: #######################################################################################################

    # :assert: На форме ошибки обновления данных в СОУ отображается сообщение "Connection to http://autotest.itworks.brest:8300 refused"
    # :assert: Пользователям levdanskij, gulevich, savchuk, kravchuk отправлено письмо об ошибке поиска клиента с текстом "execPutRequest,fireAllRules: Exception executing consequence for rule "Find in erk" in defaultpkg: javax.xml.transform.TransformerConfigurationException: net.sf.saxon.s9api.SaxonApiException: org.xml.sax.SAXParseException; systemId: file:/opt/releases/release_30/back/nodes/node4/standalone/configuration/xsl/SearchClientForEFRInERK_in.xsl; lineNumber: 2; columnNumber: 12; The markup in the document preceding the root element must be well-formed."
    # :assert: Пользователю maslov не отправлено письмо об ошибке поиска клиента


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(file)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def (app, credo_db, forpost_db):
    """
    {#
        :id:                54868_10_MP
        :priority:          Нормальный
        :module:            ЕФР/фронт/МП
        :description:       Проверка прикрепления jpg и png-файлов с паспортом
        :precondition:      Пользователь МП авторизирован и идентифицирован
        :precondition:      Пользователь СКЗ авторизирован
        :precondition:      Клиент резидент РБ
        :precondition:      В файле itwCredoFront-process.properties для process id="by.itworks.credo.ChangingCustomerDataFront_v2" установлен параметр isEnabledApk="true"
        :precondition:      На варианте "change_front" установлен процесс 'Бизнес процесс "Изменение данных клиентов" v.3'
        :precondition:      Параметр на варианте cabinet_showTasks = да
        :source_point:      RM_54868
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Android 10, iOS 15.5
        :client_env:        Google Chrome 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 100 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 101 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    9
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'
    VARIANT = 'change_front'

    # :newpage: #######################################################################################################

    # :step: Создаем онлайн-заявку "Заявка на изменение персональных данных"

    # :newpage: #######################################################################################################

    # :step: В блоке "Личные данные" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Фамилия"
    value = 'ТестКамерыВторой'
    # :step: Нажимаем кнопку "Сохранить"

    # :step: В блоке "Данные о документе, удостоверяющем личность" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Наименование документа"
    value = 'Паспорт'
    # :step: Нажимаем кнопку "Сохранить"
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :assert: Отображаются 3 поля выбора файлов
    # :step: Нажимаем кнопку "Выбрать файл"
    # :step: В выпадающем списке нажимаем кнопку "Медиатека"
    # :step: Выбираем jpg-файл размером 7.01 Мб подтверждаем его выбор
    # :assert: Отобразилось сообщение "Размер файла должен быть не более 7 Мб!"
    # :step: Нажимаем кнопку "ОК"
    # :step: Выбираем png-файл размером 7.01 Мб подтверждаем его выбор
    # :assert: Отобразилось сообщение "Размер файла должен быть не более 7 Мб!"
    # :step: Нажимаем кнопку "ОК"

    # :step: Выбираем jpg-файл с разрешением 500х499 подтверждаем его выбор
    # :assert: Отобразилось сообщение "Разрешение изображения должно быть не менее 500 пикселей по ширине или высоте. Размер выбранного изображения: 500х499"
    # :step: Нажимаем кнопку "ОК"
    # :step: Выбираем png-файл с разрешением 500х499 подтверждаем его выбор
    # :assert: Отобразилось сообщение "Разрешение изображения должно быть не менее 500 пикселей по ширине или высоте. Размер выбранного изображения: 500х499"
    # :step: Нажимаем кнопку "ОК"
    # :step: Выбираем jpg-файл размером 7.0 Мб с разрешением 500х500 подтверждаем его выбор

    # :step: Нажимаем кнопку "Выбрать файл"
    # :step: В выпадающем списке нажимаем кнопку "Выбрать файл"
    # :step: Выбираем png-файл размером 7.0 Мб с разрешением 500х500 подтверждаем его выбор
    # :step: Нажимаем кнопку "Продолжить"

    # :step: Нажимаем кнопку "Выбрать файл"
    # :step: В выпадающем списке нажимаем кнопку "Снять фото"
    # :step: Делаем фото и подтверждаем его отправку
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"
    # :step: Вводим пароль приложения

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: В СКЗ переходим в "Мои задачи"
    # :step: Нажимаем кнопку "Продолжить" на нужной задаче

    # :newpage: #######################################################################################################

    # :step: В блоке "Копии документов" присутствуют поля "Прикреплённое изображение 1", "Прикреплённое изображение 2", "Прикреплённое изображение 3" и "Прикреплённые изображения pdf"
    # :step: Нажимаем кнопку "Скачать" возле первого прикреплённого изображения
    # :assert: Скачался прикреплённый файл из МП в формате jpg
    # :step: Нажимаем кнопку "Скачать" возле второго прикреплённого изображения
    # :assert: Скачался прикреплённый файл из МП в формате png
    # :step: Нажимаем кнопку "Скачать" возле третьего прикреплённого изображения
    # :assert: Скачался прикреплённый файл из МП в формате png
    # :step: Нажимаем кнопку "Скачать" возле pdf-склейки прикреплённых изображений
    # :assert: Скачался файл в формате pdf, состоящий из файлов прикрепленных пользователем МП


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(file)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def (app, credo_db, forpost_db):
    """
    {#
        :id:                54868_11_MP
        :priority:          Нормальный
        :module:            ЕФР/фронт/МП
        :description:       Проверка второстепенных полей
        :precondition:      Пользователь МП авторизирован и идентифицирован
        :precondition:      Пользователь СКЗ авторизирован
        :precondition:      Клиент резидент РБ
        :precondition:      В файле itwCredoFront-process.properties для process id="by.itworks.credo.ChangingCustomerDataFront_v2" установлен параметр isEnabledApk="true"
        :precondition:      На варианте "change_front" установлен процесс 'Бизнес процесс "Изменение данных клиентов" v.3'
        :precondition:      Параметр на варианте cabinet_showTasks = да
        :source_point:      RM_54868
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Android 10, iOS 15.5
        :client_env:        Google Chrome 102 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 100 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 101 [Windows 10]
        :precondition_time: 10
        :time_of_test:      10
        :count_of_check:    2
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'
    VARIANT = 'change_front'

    # :newpage: #######################################################################################################

    # :step: Создаем онлайн-заявку "Заявка на изменение персональных данных"

    # :newpage: #######################################################################################################

    # :step: В блоке "Личные данные" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Отчество"
    value = 'ТестоваяПолевая'
    # :step: Заполняем поле "Предыдущая фамилия"
    value = 'ТестПолей'
    # :step: Заполняем поле "E-mail"
    value = 'testPOL@gmail.com'
    # :step: Заполняем поле "Домашний телефон"
    value = '+375164444444'
    # :step: Заполняем поле "Дополнительный телефон"
    value = '+375777777777'
    # :step: Нажимаем кнопку "Сохранить"


    # :step: В блоке "Информация о рождении" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Область рождения"
    value = 'ТестПолей'
    # :step: Заполняем поле "Район рождения"
    value = 'ТестПолей'
    # :step: Нажимаем кнопку "Сохранить"


    # :step: В блоке "Адресная информация" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Квартира"
    value = '999'
    # :step: Заполняем поле "Индекс"
    value = '999777'
    # :step: Заполняем поле "Совпадает с адресом регистрации"
    value = 'Нет'
    # :step: Заполняем поле "Страна"
    value = 'Республика Беларусь'
    # :step: Заполняем поле "Город или населённый пункт"
    value = 'Брест Г, Бресткая ОБЛ'
    # :step: Заполняем поле "Улица"
    value = 'ПоляТестовые'
    # :step: Заполняем поле "Дом"
    value = '666'
    # :step: Заполняем поле "Квартира"
    value = '555'
    # :step: Заполняем поле "Индекс"
    value = '777999'
    # :step: Нажимаем кнопку "Сохранить"


    # :step: В блоке "Информация о трудоустройстве" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Наименование компании"
    value = 'ТестПолей'
    # :step: Заполняем поле "Должность"
    value = 'IT-специалист'
    # :step: Заполняем поле "Адрес компании"
    value = 'ТестПолей'
    # :step: Нажимаем кнопку "Добавить место работы +"
    # :step: Нажимаем кнопку "Сохранить"


    # :step: В блоке "Дополнительные сведения" нажимаем кнопку "Изменить"
    # :step: Заполняем поле "Идентификационный номер налогоплательщика США (SSN)"
    value = '111-11-1111'
    # :step: Заполняем поле "Наличие Green Card"
    value = 'Да'
    # :step: Заполняем поле "Наличие деловой либо рабочей визы в США"
    value = 'Нет'
    # :step: Нажимаем кнопку "Сохранить"
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"
    # :step: Вводим пароль приложения

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: В СКЗ переходим в "Список параметров заявки"
    # :assert: У параметра "Тип изменённых данных клиентом" значение "второстепенные"
    # :step: Переходим в "Мои задачи"
    # :step: Нажимаем кнопку "Продолжить" на нужной задаче

    # :newpage: #######################################################################################################

    # :step: Заполняем поле "Мобильный телефон"
    value = '+375255555555'
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме ожидания получения копий документов устанавливаем чек-бокс "Копия документов получена"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме сравнения данных клиента устанавливаем чек-бокс "Данные корректны"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Заявка завершается исполнением, телефон обновлён в СОУ


    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(file)), method=(sys._getframe().f_code.co_name))
    print(logrecord)
