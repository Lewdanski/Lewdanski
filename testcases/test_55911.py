# :suit_description: #55911 
# :revision_date: 21.12.2022

@pytest.mark.skip(reason="Template")
def test_54213_2(app, credo_db):
    """
    {#
        :id:                54213_2
        :priority:          
        :module:            
        :description:       Проверка сохранения параметров БКИ, ИСС, ОПИ, ФСЗН из основной заявки в заявку по кросс-продаже при использовании нового интерфейса. (55911) Проверка добавления контрольных точек по ходу кредитной заявки продукта CreditCardSales
        :precondition:      Пользователь авторизирован в СКЗ. У пользователя присутствуют все необходимые роли.
        :precondition:      У пользователя параметр useNewCabinet ("Использование нового интерфейса") = "да"
        :precondition:      Клиент существующий, резидент РБ. Клиенту доступно оформление кредитов Быстрые деньги, Карта покупок
        :precondition:      Оформление происходит по варианту кредитования с кредитом на расчетную карту
        :precondition:      На варианте продукта параметр cross_sales = cart_pokup
        :precondition:      На варианта продукта параметр type_open_contract (Тип открытия контрактов) = "Авто"
        :precondition:      На варианта продукта параметр usedBKIparamAuto (Использование параметров БКИ для автоматизации принятия решения) = "нет"
        :precondition:      На варианта продукта параметр usedISSparamAuto (Использование параметров ИСС для автоматизации принятия решения) = "нет"
        :precondition:      На варианта продукта параметр useAutomaticMovementScheme (Использование автоматической схемы движения заявки) = "нет"
        :precondition:      На варианта продукта параметр forms_check_required (Обязательное прохождение через формы перед открытием контракта) = "да"
        :precondition:      На варианта продукта параметр print_contract_needsToBeDone (Необходимость формирования договора) = "да"
        :source_point:      54213, 55911
        :comment:           Файлы BKI - 3280667C051PB4.xml, ИСС - 3280667C051PB4.xml, ОПИ и ФСЗН - 3280667C051PB4.json
        :tc_type:           
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 21.01.2020
        :client_env:        Google Chrome 83.0.4103.116 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 77.0.1 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 44 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSales'

    VARIANT = 'fast_money'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер
    value = '3280667C051PB4'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Предоставление кредита'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Быстрые деньги'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод ключевых данных заявителя" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Тип заявки"
    value = 'Новый кредит'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "ВВОД ДАННЫХ ЗАЯВИТЕЛЯ" заполняем поле "Источник дохода"
    value = 'Справка'
    # :step: Заполняем поле "Регистрационный номер справки"
    value = '1234'
    # :step: Заполняем поле "Дата регистрации справки"
    value = '02.02.2020'
    # :step: Заполняем поле "Запрашиваемая сумма"
    value = '8000'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Формирование и печать документов" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выполняем по текущей заявке задачу "Общая форма кредитного эксперта"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Принятия решения о выдаче кредита" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Запрос кросс-продажи" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод параметров для формирования договоров" выбираем из выпадающего списка код доверенности
    value = 'Доверенность №33, подразделение ORO, FIO200114132234'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Формирование и печать договоров" скачиваем Договор нажатием на ссылку Скачать
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод данных кросс-продажи" заполняем поле "Желаемая сумма кредита"
    value = '1200'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Переходим на форму "Результат создания кросс-продажи"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение подписания договоров" устанавливаем чекбокс документы подписаны
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На кросс-продажи на форме "Формирование и печать документов" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод параметров для формирования договоров" выбираем из выпадающего списка код доверенности
    value = 'Доверенность №33, подразделение ORO, FIO200114132234'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Формирование и печать договоров" скачиваем Договор нажатием на ссылку Скачать
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение подписания договоров" устанавливаем чекбокс документы подписаны
    # :step: Нажимаем кнопку "Завершить"
    # :assert: Количество параметров БКИ, ИСС, ОПИ, ФСЗН и их значения на заявке кросс-продажи совпадают с параметрами основной заявки
    # :assert: Параметры ИСС: "iss_negative_info_text", "administrative_violation_all", "administrative_violation", "criminal_violation", "FSZN_info"
    # :assert: Параметры ОПИ, ФСЗН: "debetInfo", "debetRecords", "debetSumm"
    # :assert: Параметры БКИ: late% параметров в заявке(19), %kbi% параметров в заявке(19), count% параметров в заявке(4), duration% параметров в заявке(5), "credit_limit", "rcmnsInfo1", "criminal_violation_fiveYear", "criminal_violation_year"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_54762_4(app, credo_db):
    """
    {#
        :id:                54762_4
        :priority:          
        :module:            
        :description:       Проверка того, что возможная сумма не ограничивается лимитом под неустойку, если параметр «Необходимость проверки cуммы кредитов под неустойку» (check_aggregate_limit_overdraft) = нет. (55911) Проверка добавления контрольных точек по ходу кредитной заявки продукта CreditCardSalesAgent
        :precondition:      Пользователь авторизирован в СКЗ. У пользователя присутствуют все необходимые роли.
        :precondition:      Клиент существующий, резидент РБ. Клиенту доступно оформление кредита Карта покупок
        :precondition:      У пользователя параметр useNewCabinet ("Использование нового интерфейса") = "Да"
        :precondition:      Лимит кредитов под неустойку строки "Нет условий по низшим приоритетам..." в справочнике "Расчет суммы кредитов под неустойку" = 3000
        :precondition:      На продукте\врианте Предоставление кредита (КА)\Карта Покупок (Приватлизинг) проставляем значение параметра «Необходимость проверки cуммы кредитов под неустойку» (check_aggregate_limit_overdraft) = нет
        :source_point:      55911
        :comment:           
        :tc_type:           
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 80 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 74 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 44 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSalesAgent'

    VARIANT = 'cart_pokup'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер
    value = '3280667C051PB4'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберете продукт" в блоке "Действия с продуктами"
    value = 'Предоставление кредита (КА)'
    # :step: Выбираем значение поля "Выберете вариант"
    value = 'Карта Покупок (Приватлизинг)'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод ключевых данных заявителя" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Тип заявки"
    value = 'Новый кредит'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "ВВОД ДАННЫХ ЗАЯВИТЕЛЯ" заполняем поле "Источник дохода"
    value = 'Справка'
    # :step: Заполняем поле "Регистрационный номер справки"
    value = '1234'
    # :step: Заполняем поле "Дата регистрации справки"
    value = '02.02.2020'
    # :step: Заполняем поле "Запрашиваемая сумма"
    value = '8000'
    # :step: Заполняем поле "Маска карты" заранее найденной незанятой болванки
    value = '530422xxxx295591'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Формирование и печать документов" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выполняем по текущей заявке задачу "Общая форма кредитного эксперта"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Принятия решения о выдаче кредита" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод параметров для формирования договоров" выбираем из выпадающего списка код доверенности
    value = 'Доверенность №33, подразделение ORO, FIO200114132234'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Формирование и печать договоров" скачиваем Договор нажатием на ссылку Скачать
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение подписания договоров" устанавливаем чекбокс документы подписаны
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Формируем отчёт логов оформленной заявки
    # :assert: В логах после блока "id='_32' name='Включение доп. сервисов' action='onEntry'" отрабатывает блок "id='_30' name='Сохранение сессии'" подпроцесса OpenAddServ2. В конце работы подпроцесса OpenAddServ2 отработал блок "id='_31' name='Сохранение сессии'". В обоих случаях сохранение сессии происходит в кредитную очередь "queues/creditRequestQueue", параметр "goToForm: false".
    # :assert: В логах после блока "id='_340' name='Прогрузка карты в SmartVista' action='onEntry'" отрабатывает блок "id='_16' name='Сохранение сессии'" подпроцесса SmartVistaAddCard. В конце работы подпроцесса SmartVistaAddCard отработал блок "id='_15' name='Сохранение сессии'". В обоих случаях сохранение сессии происходит в кредитную очередь "queues/creditRequestQueue", параметр "goToForm: false".
    # :assert: В логах в блоке "id='_342' name='Активация карт в SmartVista' action='onEntry'" внутри блока "id='_3' name='Разблокировка карточек в SV'" подпроцесса UnBlockingCardOnAccnt_v1 запускается подпроцесс SmartVistaCardActivate с блоком "id='_20' name='Сохранение сессии'". В конце работы подпроцесса SmartVistaCardActivate отработал блок "id='_21' name='Сохранение сессии'". В обоих случаях сохранение сессии происходит в кредитную очередь "queues/creditRequestQueue", параметр "goToForm: false".
    # :assert: В логах после  блока "id='_354' name='Активация карточки Forpost' action='onEntry'" отрабатывает блок "id='_17' name='Сохранение сессии'" подпроцесса ForpostCardActivate. В конце работы подпроцесса ForpostCardActivate отработал блок "id='_18' name='Сохранение сессии'". В обоих случаях сохранение сессии происходит в кредитную очередь "queues/creditRequestQueue", параметр "goToForm: false".
    # :assert: В логах после блока "id='_371' name='Установка разрешения на отправку PIN' action='onEntry'" отрабатывает блок "id='_14' name='Сохранение сессии'" подпроцесса SetPermissionSendPin. В конце работы подпроцесса SetPermissionSendPin отработал блок "id='_15' name='Сохранение сессии'". В обоих случаях сохранение сессии происходит в кредитную очередь "queues/creditRequestQueue", параметр "goToForm: false".
    # :assert: В логах после блока "id='_372' name='Запрос на отправку SMS с PIN в СОУ' action='onEntry'" отрабатывает блок "id='_2' name='Сохранение сессии'" подпроцесса RequestToSendPin. Сохранение сессии происходит в кредитную очередь "queues/creditRequestQueue", параметр "goToForm: false".
    # :assert: В логах после блока "id='_100' name='Автоматическое открытие контрактов' action='onEntry'" отрабатывает блок "id='_24' name='Установка режима работы'" подпроцесса OpenContract4, а затем в этом же подпроцессе блок "id='_42' name='Фиксация открытия карточного договора'". В конце работы подпроцесса OpenContract4 отработал блок "id='_43' name='Фиксация открытия овера'".
    # :assert: В логах после блока "id='_460' name='Корректировка мобильного' action='onEntry'" отрабатывает блок "id='_2' name='Сохранение сессии'" подпроцесса UpdateErkPhone. В конце работы подпроцесса UpdateErkPhone отработал блок "id='_21' name='Сохранение сессии'". В обоих случаях сохранение сессии происходит в кредитную очередь "queues/creditRequestQueue", параметр "goToForm: false".
    # :assert: В логах после блока "id='_453' name='Перед обновлением телефона в СОУ'" отрабатывает блок "id='_10' name='Сохранение сессии'" подпроцесса SOUEditClient. Сохранение сессии происходит в кредитную очередь "queues/creditRequestQueue", параметр "goToForm: false".
    # :assert: В логах после блока "id='_357' name='СМС уведомление клиента' action='onEntry'" отрабатывает блок "id='_2' name='Анализ необходимости отправки СМС'" подпроцесса SMSNotification, а затем в этом же подпроцессе блок "id='_26' name='Фиксация действий по отправке уведомлений'".
    # :assert: ФОРПОСТ: договора карточный INSTANT_ISSUE_2014/PS_MC_ST_NFC, кредитный на сумму 8000 OVERDRAFT/OV_BD_18

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_54762_6(app, credo_db):
    """
    {#
        :id:                54762_6
        :priority:          
        :module:            
        :description:       Проверка того, что возможная сумма не ограничивается лимитом под неустойку, если параметр «Необходимость проверки cуммы кредитов под неустойку» (check_aggregate_limit_overdraft) = нет. (55911) Проверка добавления контрольных точек по ходу кредитной заявки продукта CreditCardSalesAuto
        :precondition:      Пользователь авторизирован в СКЗ. У пользователя присутствуют все необходимые роли.
        :precondition:      Пользователь СКЗ является Агентом банка (см. "Список пользователей" -> "Редактировать" в строке пользователя -> поле "Группа")
        :precondition:      Клиент существующий, резидент РБ.
        :precondition:      У пользователя параметр useNewCabinet ("Использование нового интерфейса") = "да"
        :precondition:      Лимит кредитов под неустойку строки "Нет условий по низшим приоритетам..." в справочнике "Расчет суммы кредитов под неустойку" = 3000
        :precondition:      На продукте\врианте Автокредитование (КА)\Автомобиль с пробегом POS (Амико) проставляем значение параметра «Необходимость проверки cуммы кредитов под неустойку» (check_aggregate_limit_overdraft) = нет
        :source_point:      55911
        :comment:           
        :tc_type:           
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 17.04.2020
        :client_env:        Google Chrome 80 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 74 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 44 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSalesAuto'

    VARIANT = 'auto_credit_pos_credit_Amiko_60'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер
    value = '3280667C051PB4'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберете продукт" в блоке "Действия с продуктами"
    value = 'Автокредитование (КА)'
    # :step: Выбираем значение поля "Выберете вариант"
    value = 'Автомобиль с пробегом POS (Амико)'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод ключевых данных заявителя" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Тип заявки"
    value = 'Новый кредит'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "ВВОД ДАННЫХ ЗАЯВИТЕЛЯ" заполняем поле "Источник дохода"
    value = 'Справка'
    # :step: Заполняем поле "Регистрационный номер справки"
    value = '1234'
    # :step: Заполняем поле "Дата регистрации справки"
    value = '02.02.2020'
    # :step: Заполняем поле "Запрашиваемая сумма"
    value = '80000'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Формирование и печать документов" нажимаем кнопку "Завершить"

	# :newpage: ###########################################Рассмотрение############################################################

    # :step: Выполняем задачу "Общая форма кредитного эксперта" на тестовой заявке
    # :assert: На странице "Общая форма кредитного эксперта" отсутствует поле "Стоимость автомобиля по договору*"
    # :step: Нажимаем кнопку "Завершить" на форме "Общая форма кредитного эксперта"

    # :newpage: #######################################################################################################

    # :assert: На странице "Принятие решения о выдаче кредита" отсутствует поле "Стоимость автомобиля по договору*"
    # :step: Нажимаем "Завершить" на форме "Принятие решения о выдаче кредита"

    # :newpage: ###########################################Ввод параметров для формирования договоров############################################################

    # :step: Выполняем задачу "Подтверждение открытия контрактов" на тестовой заявке
    # :step: выбираем "Код доверенности" на форме "Подтверждение открытия контрактов"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: указываем "Номер кузова" на форме "Ввод параметров для формирования договоров"
    value = '644401010202WERTY'
    # :step: указываем "Номер договора купли-продажи"
    value = '123456789'
    # :step: указываем "Дата договора купли-продажи"
    value = '02.12.2019'
    # :step: указываем "Стоимость автомобиля по договору"
    value = '5000,90'
    # :step: указываем "Марка автомобиля"
    value = 'ауди 8'
    # :step: указываем "Модель автомобиля"
    value = 'ауди'
    # :step: указываем "Цвет автомобиля"
    value = 'серый'
    # :step: указываем "Год выпуска"
    value = '2015'
    # :step: Нажимаем "Завершить"

    # :newpage: #######################################################################################################

    # :step: Нажимаем "Скачать" на форме "Формирование и печать договоров"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: отмечаем чекбокс "Документы подписаны"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Формируем отчёт логов оформленной заявки
    # :assert: В логах после блока "id='_100' name='Автоматическое открытие контрактов' action='onEntry'" отрабатывает блок "id='_24' name='Установка режима работы'" подпроцесса OpenContract4, а затем ПЕРЕД блоком "id='_4' name='Открытие овердрафтного контракта'" в этом же подпроцессе блок "id='_42' name='Фиксация открытия карточного договора'". В конце работы подпроцесса OpenContract4 ПОСЛЕ блока "id='_4' name='Открытие овердрафтного контракта'" отработал блок "id='_43' name='Фиксация открытия овера'".
    # :assert: В логах после блока "id='_460' name='Корректировка мобильного' action='onEntry'" отрабатывает блок "id='_2' name='Сохранение сессии'" подпроцесса UpdateErkPhone. В конце работы подпроцесса UpdateErkPhone отработал блок "id='_21' name='Сохранение сессии'". В обоих случаях сохранение сессии происходит в кредитную очередь "queues/creditRequestQueue", параметр "goToForm: false".
    # :assert: В логах после блока "id='_456' name='Перед обновлением телефона в СОУ'" отрабатывает блок "id='_10' name='Сохранение сессии'" подпроцесса SOUEditClient. Сохранение сессии происходит в кредитную очередь "queues/creditRequestQueue", параметр "goToForm: false".
    # :assert: В логах после блока "id='_357' name='СМС уведомление клиента' action='onEntry'" отрабатывает блок "id='_2' name='Анализ необходимости отправки СМС'" подпроцесса SMSNotification, а затем в этом же подпроцессе блок "id='_26' name='Фиксация действий по отправке уведомлений'".
    # :assert: В логах после блока "id='_306' name='Оприходывание залога' action='onEntry'" происходит инициализация подпроцесса CallGateService "id='_17' name='Инициализация процесса'" с параметрами для помещения в очередь и далее отрабатывает подпроцесс CompleteSession с блоком "id='_8' name='Помещение в очередь'". Сохранение сессии происходит в кредитную очередь "queues/creditRequestQueue", параметр "goToForm: false".
    # :assert: В логах после блока "id='_309' name='Перечисление денежных ср-в' action='onEntry'" происходит инициализация подпроцесса CallGateService "id='_17' name='Инициализация процесса'" с параметрами для помещения в очередь и далее отрабатывает подпроцесс CompleteSession с блоком "id='_8' name='Помещение в очередь'". Сохранение сессии происходит в кредитную очередь "queues/creditRequestQueue", параметр "goToForm: false".
    # :assert: В логах после блока "id='_21' name='Завершение' action='onEntry'" подпроцесса CallGateService отрабатывает подпроцесс CompleteSession с блоком "id='_8' name='Помещение в очередь'".
    # :assert: ФОРПОСТ: договора карточный INSTANT_ISSUE_PURCHASE/PS_MC_ST_NFC, кредитный на сумму 80000 OVERDRAFT_PURCHASES/OV_PS_2

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_55911_1(app, credo_db):
    """
    {#
        :id:                55911_1
        :priority:          
        :module:            
        :description:       Проверка добавления контрольных точек по ходу кредитной заявки продукта CreditCardSales
        :precondition:      Пользователь авторизирован в СКЗ. У пользователя присутствуют все необходимые роли.
        :precondition:      У пользователя параметр useNewCabinet ("Использование нового интерфейса") = "да"
        :precondition:      Клиент существующий, резидент РБ. Клиенту доступно оформление кредита Быстрые деньги
        :precondition:      На варианте продукта параметр cross_sales = cart_pokup
        :precondition:      На варианте продукта параметр forms_check_required значение = "да"
        :precondition:      На варианте продукта параметр useAutomaticMovementScheme значение = "нет"
        :precondition:      В точке продаж для выдачи есть только карты с CRD_PIN=YES.
        :precondition:      В файле подпроцесса UpdateErkPhone в конце блока кода с id="_2" перед строками  </tns:script></tns:onExit-script> вставляем строку 'throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса UpdateErkPhone в конце блока кода с id="_21" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса SOUEditClient в конце блока кода с id="_10" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса OpenContract4 в конце блока кода с id="_42" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса OpenContract4 в конце блока кода с id="_43" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса SMSNotification в конце блока кода с id="_26" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса SmartVistaAddCard в конце блока кода с id="_16" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса SmartVistaAddCard в конце блока кода с id="_15" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса OpenAddServ2 в конце блока кода с id="_30" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса SetPermissionSendPin в конце блока кода с id="_14" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса SetPermissionSendPin в конце блока кода с id="_15" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса OpenAddServ2 в конце блока кода с id="_31" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса RequestToSendPin в конце блока кода с id="_2" перед строками  </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса ForpostCardActivate в конце блока кода с id="_17" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса SmartVistaCardActivate в конце блока кода с id="_20" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса ForpostCardActivate в конце блока кода с id="_18" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса SmartVistaCardActivate в конце блока кода с id="_21" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      Клиент существующий, резидент РБ. В учетной системе есть вся информация для автоматического заполнения полей формы "ВВОД ДАННЫХ ЗАЯВИТЕЛЯ"
        :precondition:      Должно выполняться условие одобрения начала оформления кросс-продажи.
        :source_point:      55911
        :comment:           После изменения в файлах с контрольными точками, дожидаться обновления "KnowledgeBase".
        :tc_type:           
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.04.2021
        :client_env:        Google Chrome 91 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 89 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 91 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSales'

    VARIANT = 'fast_money'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер
    value = '3280667C051PB4'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Предоставление кредита'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Быстрые деньги'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод ключевых данных заявителя" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Тип заявки"
    value = 'Новый кредит'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод данных заявителя" заполняем поле "Источник дохода"
    value = 'Справка'
    # :step: Заполняем поле "Регистрационный номер справки"
    value = '1234'
    # :step: Заполняем поле "Дата регистрации справки"
    value = '02.02.2020'
    # :step: Заполняем поле "Запрашиваемая сумма"
    value = '200'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Формирование и печать документов" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выполняем по текущей заявке задачу "Общая форма кредитного эксперта"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Принятия решения о выдаче кредита" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_2" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса UpdateErkPhone в конце блока кода с id="_2" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди  повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_21" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса UpdateErkPhone в конце блока кода с id="_21" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди  повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до задачи "Запрос кросс-продажи"

    # :newpage: #######################################################################################################

    # :step: Выполнить действие "Продолжить" по тестовой заявке в профиле клиента
    # :step: На форме "Запрос кросс-продажи" заполняем чек-бокс "Отказ от оформления"
    # :step: Заполняем поле "Комментарий сотрудника"
    value = 'слово'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: ##################################################

    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_10" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса SOUEditClient в конце блока кода с id="_10" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_42" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса OpenContract4 в конце блока кода с id="_42" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_43" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса OpenContract4 в конце блока кода с id="_43" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до задачи "Ввод параметров для формирования договоров"
    # :step: Выполнить действие "Продолжить" по тестовой заявке в профиле клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод параметров для формирования договоров" выбираем из выпадающего списка код доверенности
    value = 'Доверенность №33, подразделение ORO, FIO200114132234'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Формирование и печать договоров" скачиваем Договор нажатием на ссылку "Скачать"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение подписания договоров" устанавливаем чекбокс документы подписаны
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_26" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса SMSNotification в конце блока кода с id="_26" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_16" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса SmartVistaAddCard в конце блока кода с id="_16" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_15" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса SmartVistaAddCard в конце блока кода с id="_15" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_30" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса OpenAddServ2 в конце блока кода с id="_30" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_14" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса SetPermissionSendPin находим в конце блока кода с id="_14" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_15" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса SetPermissionSendPin в конце блока кода с id="_15" удаляем строку вызова ошибки

    # :newpage: #######################################################################################################

    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки
    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_31" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса OpenAddServ2 в конце блока кода с id="_31" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_2" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса RequestToSendPin в конце блока кода с id="_2" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_17" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса ForpostCardActivate в конце блока кода с id="_17" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_20" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса SmartVistaCardActivate в конце блока кода с id="_20" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_18" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса ForpostCardActivate в конце блока кода с id="_18" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_21" выполнился до места установленной контрольной точки (см. История выполнения процесса)

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_55911_2(app, credo_db):
    """
    {#
        :id:                55911_2
        :priority:          
        :module:            
        :description:       Проверка добавления контрольных точек по ходу кредитной заявки продукта CreditCardSalesAuto
        :precondition:      Пользователь авторизирован в СКЗ. У пользователя присутствуют все необходимые роли.
        :precondition:      Пользователь СКЗ является Агентом банка (см. "Список пользователей" -> "Редактировать" в строке пользователя -> поле "Группа")
        :precondition:      Клиент существующий, резидент РБ.
        :precondition:      У пользователя параметр useNewCabinet ("Использование нового интерфейса") = "да"
        :precondition:      Лимит кредитов под неустойку строки "Нет условий по низшим приоритетам..." в справочнике "Расчет суммы кредитов под неустойку" = 3000
        :precondition:      В точке продаж для выдачи есть только карты с CRD_PIN=YES.
        :precondition:      В параметре логины пользователей для задачи 'Подтверждение подписания договоров' = инициатор заявки
        :precondition:      На продукте\врианте Автокредитование (КА)\Автомобиль с пробегом POS (Амико) проставляем значение параметра «Необходимость проверки cуммы кредитов под неустойку» (check_aggregate_limit_overdraft) = нет
        :precondition:      В файле подпроцесса UpdateErkPhone в конце блока кода с id="_2" перед строками </tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса UpdateErkPhone в конце блока кода с id="_21" перед строками </tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса SOUEditClient в конце блока кода с id="_10" перед строками </tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса OpenContract4 в конце блока кода с id="_42" перед строками </tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса OpenContract4 в конце блока кода с id="_43" перед строками </tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса CallGateService в конце блока кода с id="_17" перед строками </tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса SMSNotification в конце блока кода с id="_26" перед строками </tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      Клиент существующий, резидент РБ. В учетной системе есть вся информация для автоматического заполнения полей формы "ВВОД ДАННЫХ ЗАЯВИТЕЛЯ"
        :source_point:      55911
        :comment:           
        :tc_type:           
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.04.2021
        :client_env:        Google Chrome 91 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 89 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 91 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSalesAuto'

    VARIANT = 'auto_credit_pos_credit_Amiko_60'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер
    value = '3280667C051PB4'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберете продукт" в блоке "Действия с продуктами"
    value = 'Автокредитование (КА)'
    # :step: Выбираем значение поля "Выберете вариант"
    value = 'Автомобиль с пробегом POS (Амико)'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод ключевых данных заявителя" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Тип заявки"
    value = 'Новый кредит'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "ВВОД ДАННЫХ ЗАЯВИТЕЛЯ" заполняем поле "Источник дохода"
    value = 'Справка'
    # :step: Заполняем поле "Регистрационный номер справки"
    value = '1234'
    # :step: Заполняем поле "Дата регистрации справки"
    value = '02.02.2020'
    # :step: Заполняем поле "Запрашиваемая сумма"
    value = '500'
    # :step: Заполняем поле "Стоимость автомобиля по договору"
    value = '1000'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Формирование и печать документов" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Общая форма кредитного эксперта" нажимаем на ссылку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: На форме "Общая форма кредитного эксперта" нажимаем на кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Принятие решения о выдаче кредита" нажимаем на кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_2" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса UpdateErkPhone в конце блока кода с id="_2" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди  повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_21" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса UpdateErkPhone в конце блока кода с id="_21" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди  повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_10" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса SOUEditClient в конце блока кода с id="_10" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди  повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки
    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_42" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса OpenContract4 в конце блока кода с id="_42" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди  повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_43" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса OpenContract4 в конце блока кода с id="_43" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до задачи "Ввод параметров для формирования договоров"

    # :newpage: #######################################################################################################

    # :step: Выполняем задачу "Подтверждение открытия контрактов" на тестовой заявке
    # :step: выбираем "Код доверенности" на форме "Подтверждение открытия контрактов"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выполняем задачу "Ввод параметров для формирования договоров" на тестовой заявке
    # :step: указываем "Номер кузова" на форме "Ввод параметров для формирования договоров"
    value = '644401010202WERTY'
    # :step: указываем "Номер договора купли-продажи"
    value = '123456789'
    # :step: указываем "Дата договора купли-продажи"
    value = '02.12.2019'
    # :step: указываем "Стоимость автомобиля по договору"
    value = '5000,90'
    # :step: указываем "Марка автомобиля"
    value = 'ауди'
    # :step: указываем "Модель автомобиля"
    value = 'а6'
    # :step: указываем "Цвет автомобиля"
    value = 'серый'
    # :step: указываем "Год выпуска"
    value = '2015'
    # :step: Нажимаем "Завершить"

    # :newpage: #######################################################################################################

    # :step: Нажимаем "Скачать" на форме "Формирование и печать договоров"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: отмечаем чекбокс "Документы подписаны"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :step: После обновления страницы появляется запись
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :step: В списке заявок переходим в историю выполнения процесса
    # :assert: Блок с id="_17" выполнился до места установленной контрольной точки
    # :step: В файле подпроцесса CallGateService в конце блока кода с id="_17" удаляем строку вызова ошибки
    # :assert: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :step: После обновления страницы появляется запись
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :step: В списке заявок переходим в историю выполнения процесса
    # :assert: Блок с id="_26" выполнился до места установленной контрольной точки

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_55911_3(app, credo_db):
    """
    {#
        :id:                55911_3
        :priority:          
        :module:            
        :description:       Проверка добавления контрольных точек по ходу кредитной заявки продукта CreditCardSalesAgent
        :precondition:      Пользователь авторизирован в СКЗ. У пользователя присутствуют все необходимые роли.
        :precondition:      Клиент существующий, резидент РБ. Клиенту доступно оформление кредита Карта покупок
        :precondition:      У пользователя параметр useNewCabinet ("Использование нового интерфейса") = "Да"
        :precondition:      Лимит кредитов под неустойку строки "Нет условий по низшим приоритетам..." в справочнике "Расчет суммы кредитов под неустойку" = 3000
        :precondition:      На варианте продукта параметр forms_check_required значение = "да"
        :precondition:      На варианте продукта параметр useAutomaticMovementScheme значение = "нет"
        :precondition:      В точке продаж для выдачи есть только карты с CRD_PIN=YES.
        :precondition:      На продукте\врианте Предоставление кредита (КА)\Карта Покупок (Приватлизинг) проставляем значение параметра «Необходимость проверки cуммы кредитов под неустойку» (check_aggregate_limit_overdraft) = нет
        :precondition:      В файле подпроцесса UpdateErkPhone в конце блока кода с id="_2" перед строками  </tns:script></tns:onExit-script> вставляем строку 'throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса UpdateErkPhone в конце блока кода с id="_21" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса SOUEditClient в конце блока кода с id="_10" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса OpenContract4 в конце блока кода с id="_42" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса OpenContract4 в конце блока кода с id="_43" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса SMSNotification в конце блока кода с id="_26" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса SmartVistaAddCard в конце блока кода с id="_16" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса SmartVistaAddCard в конце блока кода с id="_15" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса OpenAddServ2 в конце блока кода с id="_30" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса SetPermissionSendPin в конце блока кода с id="_14" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса SetPermissionSendPin в конце блока кода с id="_15" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса OpenAddServ2 в конце блока кода с id="_31" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса RequestToSendPin в конце блока кода с id="_2" перед строками  </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса ForpostCardActivate в конце блока кода с id="_17" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса SmartVistaCardActivate в конце блока кода с id="_20" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса ForpostCardActivate в конце блока кода с id="_18" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса SmartVistaCardActivate в конце блока кода с id="_21" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      Клиент существующий, резидент РБ. В учетной системе есть вся информация для автоматического заполнения полей формы "ВВОД ДАННЫХ ЗАЯВИТЕЛЯ"
        :source_point:      55911
        :comment:           После изменения в файлах с контрольными точками, дожидаться обновления "KnowledgeBase".
        :tc_type:           
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.04.2021
        :client_env:        Google Chrome 91 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 89 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 91 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSalesAgent'

    VARIANT = 'cart_pokup'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер
    value = '3280667C051PB4'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберете продукт" в блоке "Действия с продуктами"
    value = 'Предоставление кредита (КА)'
    # :step: Выбираем значение поля "Выберете вариант"
    value = 'Карта Покупок (Приватлизинг)'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод ключевых данных заявителя" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Тип заявки"
    value = 'Новый кредит'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "ВВОД ДАННЫХ ЗАЯВИТЕЛЯ" заполняем поле "Источник дохода"
    value = 'Справка'
    # :step: Заполняем поле "Регистрационный номер справки"
    value = '1234'
    # :step: Заполняем поле "Дата регистрации справки"
    value = '02.02.2020'
    # :step: Заполняем поле "Запрашиваемая сумма"
    value = '8000'
    # :step: Заполняем поле "Маска карты" заранее найденной незанятой болванки
    value = '530422xxxx295591'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Формирование и печать документов" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выполняем по текущей заявке задачу "Общая форма кредитного эксперта"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Принятия решения о выдаче кредита" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_2" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса UpdateErkPhone в конце блока кода с id="_2" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди  повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_21" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса UpdateErkPhone в конце блока кода с id="_21" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди  повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до задачи "Запрос кросс-продажи"

    # :newpage: #######################################################################################################

    # :step: Выполнить действие "Продолжить" по тестовой заявке в профиле клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Запрос кросс-продажи" заполняем чек-бокс "Отказ от оформления"
    # :step: Заполняем поле "Комментарий сотрудника"
    value = 'слово'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_10" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса SOUEditClient в конце блока кода с id="_10" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_42" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса OpenContract4 в конце блока кода с id="_42" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_43" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса OpenContract4 в конце блока кода с id="_43" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до задачи "Ввод параметров для формирования договоров"
    # :step: Выполнить действие "Продолжить" по тестовой заявке в профиле клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод параметров для формирования договоров" выбираем из выпадающего списка код доверенности
    value = 'Доверенность №33, подразделение ORO, FIO200114132234'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Формирование и печать договоров" скачиваем Договор нажатием на ссылку "Скачать"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение подписания договоров" устанавливаем чекбокс документы подписаны
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_26" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса SMSNotification в конце блока кода с id="_26" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_16" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса SmartVistaAddCard в конце блока кода с id="_16" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_15" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса SmartVistaAddCard в конце блока кода с id="_15" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_30" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса OpenAddServ2 в конце блока кода с id="_30" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_14" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса SetPermissionSendPin находим в конце блока кода с id="_14" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_15" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса SetPermissionSendPin в конце блока кода с id="_15" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_31" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса OpenAddServ2 в конце блока кода с id="_31" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_2" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса RequestToSendPin в конце блока кода с id="_2" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_17" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса ForpostCardActivate в конце блока кода с id="_17" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_20" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса SmartVistaCardActivate в конце блока кода с id="_20" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_18" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса ForpostCardActivate в конце блока кода с id="_18" удаляем строку вызова ошибки
    # :step: В списке удалённых сообщений в очереди повторяем отправку заявки

    # :newpage: #######################################################################################################

    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)
    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue
    # :assert: Блок с id="_21" выполнился до места установленной контрольной точки (см. История выполнения процесса)

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_55911_4(app, credo_db):
    """
    {#
        :id:                55911_4
        :priority:          
        :module:            
        :description:       Проверка добавления контрольных точек по ходу кредитной заявки продукта CreditCardSales
        :precondition:      Пользователь авторизирован в СКЗ. У пользователя присутствуют все необходимые роли.
        :precondition:      В точке продаж для выдачи есть только карты с CRD_PIN=YES.
        :precondition:      В файле подпроцесса UpdateErkPhone в конце блока кода с id="_2" перед строками  </tns:script></tns:onExit-script> вставляем строку 'throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В файле подпроцесса UpdateErkPhone в конце блока кода с id="_21" перед строками </tns:script></tns:onExit-script> вставляем строку "throw new RuntimeException("Тестирование контрольной точки!!!");"
        :precondition:      В системе есть заявка Предоставление кредита/Под потребности - 5 в статусе "Начата обработка" c пустым параметром guarantee (ИД заявки = 207002302 на сумму 500 бел.руб.)
        :precondition:      Клиент существующий, резидент РБ. В учетной системе есть вся информация для автоматического заполнения полей формы "ВВОД ДАННЫХ ЗАЯВИТЕЛЯ"
        :precondition:      В справочнике names_organizations есть предприятие, зарплатное соглашение (SD%) которого привязано к зарплатному контракту Клиента
        :source_point:      55911
        :comment:           После изменения в файлах с контрольными точками, дожидаться обновления "KnowledgeBase".
        :tc_type:           
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.04.2021
        :client_env:        Google Chrome 91 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 89 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 91 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSales'

    VARIANT = 'forneeds_5_guarantee'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер
    value = '4290878B045PB8'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Предоставление кредита'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Под потребности - 5(поручитель)'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод ключевых данных заявителя"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Тип заявки"
    value = 'Новый кредит'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Заполняем "Телефон контактного лица" на форме "ВВОД ДАННЫХ ЗАЯВИТЕЛЯ" при необходимости
    value = '+375297575757'
    # :step: Заполняем "ФИО контактного лица и отношение к заявителю"
    value = 'ФИО, брат'
    # :step: Заполняем "Кодовое слово"
    value = 'брат'
    # :step: Выбираем "Место проживания"
    value = 'Собственная квартира'
    # :step: Выбираем "Семейное положение"
    value = 'Женат (замужем)'
    # :step: Заполняем "Количество иждивенцев"
    value = '0'
    # :step: Отмечаем все "Объекты недвижимости"
    # :step: Отмечаем "Наличие транспортных средств"
    # :step: Заполняем поле "Фамилия супруга"
    value = 'СУПРУГ'
    # :step: Заполняем поле "Имя супруга"
    value = 'ОН'
    # :step: Заполняем поле "Отчество супруга"
    value = 'МОЙ'
    # :step: Заполняем поле "Среднемесячный доход супруга"
    value = '2800'
    # :step: Заполняем поле "Мобильный телефон супруга"
    value = '+375297568923'
    # :step: Выбираем "Вид занятости"
    value = 'По найму'
    # :step: Выбираем "Источник дохода"
    value = 'Выписка'
    # :step: Выбираем "Зарплатный контракт"
    value = 'SL/101374'
    # :step: Выбираем "Форма трудоустройства"
    value = 'Контракт'
    # :step: Выбираем "Образование"
    value = 'Высшее'
    # :step: Заполняем поле "Стаж на последнем месте работы (годы)"
    value = '10'
    # :step: Заполняем поле "Стаж на последнем месте работы (месяцы)"
    value = '2'
    # :step: Выбираем "Поручитель по заявке"
    value = '207002302...'
    # :step: Заполняем поле "Запрашиваемая сумма"
    value = '500'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: На форме "Формирование и печать документов" нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Выполняем "Продолжить" на тестовой заявке по задаче "Общая форма кредитного эксперта"
    # :assert: на форме "Общая форма кредитного эксперта" нет поля "Обнаруженный стоп-фактор"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Завершить" на форме принятия решения

    # :newpage: ######################################################################################################

    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue

    # :newpage: #######################################################################################################

    # :assert: Блок с id="_2" выполнился до места установленной контрольной точки (см. История выполнения процесса)
    # :step: В файле подпроцесса UpdateErkPhone в конце блока кода с id="_2" удаляем строку вызова ошибки

    # :newpage: #######################################################################################################

    # :step: В списке удалённых сообщений в очереди  повторяем отправку заявки
    # :assert: Заявка продолжается до следующей контрольной точки (сохранение сессии)

    # :newpage: #######################################################################################################

    # :assert: Заявка останавливается (отсутствует действие "Продолжить" по тестовой заявке), в списке удалённых сообщений в очереди появилась запись по текущей заявке
    # :assert: В записи по текущей заявке отображается название исходной очереди creditRequestQueue

    # :newpage: #######################################################################################################

    # :assert: Блок с id="_21" выполнился до места установленной контрольной точки (см. История выполнения процесса)

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


