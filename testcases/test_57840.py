# :suit_description: #57840 
# :revision_date: 21.10.2022

@pytest.mark.skip(reason="Template")
def test_49057_34_4(app, credo_db):
    """
    {#
        :id:                49057_34_4
        :priority:          Средний
        :module:            ЕФР/фронт
        :description:       Выпуск перс. расчетной карточки с выдачей в Банке доверенному лицу, который есть в учетной системе (ЕРК). (56006)Проверка блока "Подключение к ДБО" на форме "Реквизиты клиента". (57840) Проверка отсутствия блока "Подключение к ДБО" на форме реквизитов третьего лица
        :precondition:      Клиент СДБО авторизирован и идентифицирован
        :precondition:      Пользователь СКЗ авторизирован
        :precondition:      В СКЗ у пользователя параметр useNewCabinet "Использование нового интерфейса" = "да".
        :precondition:      Оформляем персонифицированную карточку без взымания платы за выпуск.
        :precondition:      Получатель карточки "Доверенное лицо". Доверенное лицо существует в СКЗ и ЕРК, не подключен к СДБО
        :source_point:      56006, 57840
        :comment:           
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 106 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 106 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'ClientNewCardInner'

    VARIANT = 'new_card_v2'


    # :newpage: ######################################################################################################

    # :step: Создаем онлайн-заявку "Заявка на выпуск платежной карточки"
    # :step: Нажимаем кнопку "Продолжить" на форме с ознакомлением

    # :newpage: #######################################################################################################

    # :step: Выбираем карточку для оформления
    value = 'Visa CashAlot PayWave'
    # :step: Выбираем валюту
    value = 'Белорусский рубль'
    # :step: Заполняем поле Пароль (например, девичья фамилия матери)
    value = 'CODEWORD'
    # :step: Выбираем способ получения карточки
    value = 'В Банке'
    # :step: Выбираем Местонахождение офиса банка
    value = 'Минск'
    # :step: Выбираем Офис выдачи карточки
    value = 'Отдел розничных операций / г.Минск ул.Притыцкого 60/2'
    # :step: Заполняем радиобаттон раздела "Информирование по операциям"
    value = 'Отказаться от информирования'
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: На форме "Условия договора об использовании карточки" устанавливаем чекбокс "Настоящим подтверждаю, что с существенными условиями договора об использовании карточки ознакомлен и согласен, Условия об использовании карточек мною прочитаны"
    # :step: На форме "Условия договора об использовании карточки" устанавливаем чекбокс "Подтверждаю предоставление вышеуказанных согласий"
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: На форме "Форма договора" устанавливаем чекбокс "Договор на использование банковской платежной карточки мною полностью прочитан и его условия понятны."
    # :step: Нажимаем кнопку "Продолжить"

    # :newpage: #######################################################################################################

    # :step: На форме завершения выпуска карточки нажимаем кнопку "Завершить"
    # :assert: Отображается форма списка заявок клиента, где появилась заявка в статусе "Заявка обрабатывается" на выпуск расчетной карточки с номером заявки в СКЗ

    # :newpage: #######################################################################################################

    # :step: В бэке на форме "Поиск клиента" заполняем поле "Личный номер"
    value = '6240382K513GB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем карточку клиента

    # :newpage: #######################################################################################################

    # :step: В профиле клиента в списке активных заявок по заявке созданной из ДБО нажимаем "Продолжить"

    # :newpage: #######################################################################################################

    # :step: На форме "Выбор получателя платежной карточки" указываем получателя платежной карточки
    value = 'Доверенное лицо'
    # :step: Вносим № доверенности
    value = '3'
    # :step: Вносим Дату выдачи
    value = '06.03.2019'
    # :step: Вносим Срок действия
    value = '06.03.2023'
    # :step: Нажимаем кнопку "Поиск клиента"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск третьего лица в учетной системе Банка" вводим личный номер клиента
    value = '3050996C005PB7'
    # :step: Выбираем карточку клиента

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента" сверяем подтянувшиеся из ЕРК параметры.
    # :assert: На форме отсутствует блок "Подключение к ДБО"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Выдача платежной карточки" чекбоксом отмечаем, что Копия нотариальной доверенности изготовлена
    # :step: С формы "Выдача платежной карточки" распечатываем расписку о получении платежной карточки
    # :step: На форме "Выдача платежной карточки" чекбоксом отмечаем, что расписка оформлена
    # :step: Нажимаем кнопку "Завершить выдачу карточки"

    # :newpage: #######################################################################################################

    # :step: На форме "Подготовка документов к передаче на хранение" чекбоксом отмечаем, что Документы по заявке подготовлены
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Заявка переходит в статус "Карточка выдана"
    # :assert: В форпосте создался контракт соответствующий параметру заявки crt_mnemo
    # :assert: В форпосте создалась карточка соответствующая параметру заявки crd_code

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_49057_36_2(app, credo_db):
    """
    {#
        :id:                49057_36_2
        :priority:          Средний
        :module:            ЕФР/фронт
        :description:       Перевыпуск основной расчетной карточки с неперсонифицированной на персонифицированную карточку, получатель доверенное лицо. (56006)Проверка блока "Подключение к ДБО" на форме "Реквизиты клиента". (57840) Проверка отсутствия блока "Подключение к ДБО" на форме реквизитов третьего лица
        :precondition:      Клиент СДБО авторизирован и идентифицирован
        :precondition:      Пользователь СКЗ авторизирован
        :precondition:      Клиент существует в ЕРК
        :precondition:      Получатель карточки - неподключенный к СДБО существующий Клиент (третье лицо)
        :precondition:      В СКЗ у пользователя параметр useNewCabinet "Использование нового интерфейса" = "Да".
        :precondition:      В справочнике cart_for_variant на картах настроена возможность перевыпуска для карт
        :precondition:      У клиента есть неперсонифицированная расчетная карточка
        :source_point:      56006, 57840
        :comment:           
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 106 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 106 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'ClientNewCardInner'

    VARIANT = 'reissue_maincard'


    # :newpage: #######################################################################################################

    # :step: Создаем онлайн-заявку "Заявка на перевыпуск (замену) платежной карточки"
    # :step: Нажимаем кнопку "Продолжить" на форме с ознакомлением

    # :newpage: #######################################################################################################

    # :step: Выбираем карточку для перевыпуска
    value = 'Расчетная карточка "Классическая" Visa Classic'
    # :step: Выбираем новую карточку
    value = 'Расчетная Visa Platinum'
    # :step: Заполняем поле Пароль (например, девичья фамилия матери)
    value = 'CODEWORD'
    # :step: Выбираем способ получения карточки
    value = 'В Банке'
    # :step: Выбираем местонахождение офиса банка
    value = 'Минск'
    # :step: Выбираем офис выдачи карточки
    value = 'Отдел розничных операций / г.Минск ул.Притыцкого 60/2'
    # :assert: Расчет комиссии за перевыпуск составит 22 бел.руб., поэтому внизу появляется сообщение "вознаграждение за перевыпуск составит - 22 белорусских рублей"
    # :step: Заполняем радиобаттон раздела "Информирование по операциям"
    value = 'Отказаться от информирования'
    # :step: Заполняем поле "Сеансовый пароль" полученным при авторизации значением
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Отображается форма завершения перевыпуска платежной карточки
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Отображается форма списка заявок клиента, где появилась заявка на перевыпуск карточки с номером заявки в СКЗ

    # :newpage: #######################################################################################################

    # :step: В бэке на форме "Поиск клиента" заполняем поле "Личный номер"
    value = '6240382K513GB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем карточку клиента

    # :newpage: #######################################################################################################

    # :step: В профиле клиента в списке активных заявок по заявке созданной из ДБО нажимаем "Продолжить"

    # :newpage: #######################################################################################################

    # :step: Выбрать значение "Доверенное лицо"
    # :step: Ввести значение "№ доверенности"
    value = '123УК56-1'
    # :step: Ввести значение "Дата выдачи"
    value = '10.05.2019'
    # :step: Ввести значение "Срок действия"
    value = '10.05.2023'
    # :step: Нажимаем кнопку "Поиск клиента"

    # :newpage: #######################################################################################################

    # :assert: Отображается форма с "Поиск третьего лица в учетной системе Банка"
    # :step: Ввести значение "Личный номер"
    value = '7881160A992PB7'
    # :step: Нажимаем кнопку Поиск
    # :step: Выбираем карточку клиента

    # :newpage: #######################################################################################################

    # :assert: Отображается форма личных данных получателя
    # :assert: На форме отсутствует блок "Подключение к ДБО"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Отображается форма "Выдача платежной карточки"
    # :step: Отмечаем чекбокс
    # :step: Нажимаем кнопку "Завершить" выдачу карточки

    # :newpage: #######################################################################################################

    # :assert: Отображается форма "Подготовка документов к передаче на хранение"
    # :step: Отмечаем чекбокс
    # :step: Нажимаем кнопку "Далее"
    # :assert: Заявка переходит в статус "Карточка выдана"
    # :assert: В ИБ заявка переходит в статус "Одобрена"
    # :assert: На Клиенте (третье лицо) в СКЗ сохраняется параметр sou_id с id клиента в СОУ
    # :assert: В форпосте создалась карточка соответствующая параметру заявки crd_code

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_51465_14(app, credo_db):
    """
    {#
        :id:                51465_14
        :priority:          Средний
        :module:            ЕФР
        :description:       (51465_14) Проверка отсутствия дубликатов и отсутствия корректировки моб. телефонов-дубликатов на других Клиентах, если на форме реквизитов клиентов - Владелец карт-счета, Третье лицо (пользователь карточки), Получатель карточки - производилось редактирование моб. телефона. Проверка отражения в логах заявки новых блока поиска дубликатов и блока изменения приоритетов дубликатов номера моб. телефона в ЕРК. (53345_2) Проверка обновления значения поля EMAIL в ЕРК при актуализаии существующей карточки клиента Владельца карт-счета, Третьего лица и Доверенного лица, если в СКЗ поле E-mail заполнено пустым значением. (57657)Проверка клиента в KYC(Siron) - проверяются Клиент -владелец счета(check_status = inconspic) и Клиент - третье лицо(check_status = check/pending/inconspic). Обновление результатов - автоматически, по кнопке "Обновить". (57840) Проверка отсутствия блока "Подключение к ДБО" на форме реквизитов третьего лица
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      заявка оформляется в рабочее время роли из параметра workingTimeRole в itwCredo-kyc.properties
        :precondition:      Тестовые клиенты - Владелец карт-счета, Третье лицо, на кого оформляется карточка, и Получатель карточки - существуют в ЕРК, все ключевые данные присутствуют. Поле "EMAIL" у всех клиентов заполнено.
        :precondition:      В справочнике close_card_acc_text_block "Информационные блоки ЕФР" для "Уведомления о совпадении со списками в Siron KYC" заполнен "Текст уведомления"
        :precondition:      в Siron KYC тестовый Клиент со статусом check_status = inconspic
        :precondition:      в Siron KYC тестовый Клиент -третье лицо со статусом check_status = check
        :precondition:      На варианте параметр doKyc ("Проверять клиента в KYC") = да
        :precondition:      На варианте параметр needPreActualization ("Необходима предварительная актуализация клиента") = "нет"
        :precondition:      На варианте заполнен параметр kycEmailTemplate "[KYC] Текст уведомления УФМ(Siron)"
        :precondition:      В itwCredo-kyc.properties внесены соответствующие настройки (kyc.url, emails, timeout, workingTimeRole)
        :precondition:      У клиента есть карточный счёт, к которому возможно выпустить дополнительную карточку
        :source_point:      51465, 53345, 57112, 57657, 57840
        :comment:           Для полного прохождения заявки выполняется апдейт по выпущенной карточке в ФОРПОСТ с установкой  crd_embossed = 'YES' и  crd_prod_status = 'M'
        :comment:           Siron KYC: для установки статусов / получения ответов по Клиенту использовался эмулятор - бот для сайрона @itwAssistantBot, в itwCredo-kyc.properties kyc.url=http://autotest.itworks.brest:8301/siron
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 106 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 106 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'EFR'

    VARIANT = 'P3_A3AdditionalCard3'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный (идентификационный) номер"
    value = '3050996C005PB7'
    # :step: нажать кнопку "Искать"
    # :step: выбрать Клиента - кликнуть по отображенной карточке тестового Клиента

    # :newpage: #######################################################################################################

    # :step: выбрать продукт на форме "Профиль клиента"
    value = 'Платежные карточки'
    # :step: выбрать вариант
    value = 'Оформление дополнительной карточки'
    # :step: нажать кнопку "Выполнить"
    # :assert: создается заявка, параметр заявки doKyc = "да"

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента" изменяем Имя
    value = 'АНДРЕЙКАА'
    # :step: редактируем поле "Мобильный телефон" уникальным значением, по которому в ЕРК НЕ будут найдены дубликаты
    value = '+375295189592'
    # :step: Очищаем поле "E-mail"
    value = ''
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Выбор счёта" заполняем радиобаттон выбранного карт-счета
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод параметров дополнительной карточки" заполняем поле "Держатель карточки"
    value = 'Совершеннолетнее третье лицо'
    # :step: Заполняем поле "Тип карточки" выбором значения из выпадающего списка (перс.карта)
    value = 'MasterCard Standard PayPass'
    # :step: Заполняем поле "Способ получения ПИН-кода" выбором значения из выпадающего списка
    value = 'ПИН-конверт'
    # :step: Заполняем поле "Регион выдачи" выбором значения из выпадающего списка (несовпадающим с точкой продаж пользователя)
    value = 'Брест, Брестская область'
    # :step: Заполняем поле "Точка выдачи" выбором значения из выпадающего списка
    value = 'Отдел розничного бизнеса Брестской ОД / г.Брест ул.Московская, 174А'
    # :step: Нажимаем кнопку "Рассчитать стоимость оформления"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск третьего лица в учетной системе Банка" вводим личный номер клиента
    value = '5200464C569GB0'
    # :step: Нажимаем на кнопку "Поиск карточки клиента"
    # :step:  На форме "Поиск третьего лица по реквизитам" нажимаем на найденную краткую карточку клиента

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента" отсутствует блок "Подключение к ДБО"
    # :step: Рредактируем поле "Мобильный телефон" уникальным значением, по которому в ЕРК НЕ будут найдены дубликаты
    value = '+375291918598'
    # :step: Очищаем поле "E-mail"
    value = ''
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод иных параметров дополнительной платежной карточки" заполняем поле "Кодовое слово клиента"
    value = 'кодкод'
    # :step: Заполняем поле "Источник получения информации о продукте"
    value = 'Радиореклама'
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Оформление заявления-анкеты" по ссылке "Печать Заявления-анкеты" формируем и проверяем документ заявление-анкету по владельцу счета
    # :step: По ссылке "Печать анкеты" формируем и проверяем документ анкету третьего лица
    # :step: Заполняем чекбокс "Заявление-анкета оформлено"
    # :step: Заполняем чекбокс "Анкета оформлена"
    # :step: Заполняем чекбокс "Копия документа, удостоверяющего личность владельца счета, изготовлена"
    # :step: Заполняем чекбокс "Копия документа, удостоверяющего личность третьего лица, изготовлена"
    # :step: Нажимаем кнопку "Подтвердить"
    # :assert: В ЕРК не найдены клиенты с моб. телефонами дубликатами обновленного моб. телефона клиента Владельца счета
    # :assert: В логах заявки request.log перед блоком сохранения данных "id='_18' name='Сохранение данных клиента' action='onEntry'" отображаются логи блока поиска дубликатов номера моб. телефона в ЕРК "id='_5' name='Поиск дублирования Мобильного телефона'", с параметрами запроса к ЕРК. В блоке отображается пустой список ЕРК кодов клиентов с дубликатами моб. номера клиента Владельца карточки ("dubilcateErkCodes="). Логи блока корректировки дубликатов не отображаются.
    # :assert: В ЕРК у клиента Владельца карточки значение параметра "Мобильный телефон" (sprCode = "PHONE_MOBILE") обновилось (PhoneNumber = "375336810762", в соответствии с ранее введеным значением на форме реквизитов клиента Владельца счета, приоритет параметра Priority = "0"
    # :assert: В ЕРК не найдены клиенты с моб. телефонами дубликатами обновленного моб. телефона клиента Третьего лица - владельца карточки
    # :assert: В логах заявки request.log перед блоком сохранения данных "id='_18' name='Сохранение данных клиента' action='onEntry'" отображаются логи блока поиска дубликатов номера моб. телефона в ЕРК "id='_5' name='Поиск дублирования Мобильного телефона'", с параметрами запроса к ЕРК. В блоке отображается пустой список ЕРК кодов клиентов с дубликатами моб. номера клиента Третьего лица ("dubilcateErkCodes="). Логи блока корректировки дубликатов не отображаются.
    # :assert: В ЕРК у клиента Третьего лица значение параметра "Мобильный телефон" (sprCode = "PHONE_MOBILE") обновилось ( PhoneNumber = "375257929919"), в соответствии с ранее введеным значением на форме реквизитов клиента Третьего лица, приоритет параметра Priority = "0"
    # :assert: В ЕРК у клиента Владельца карт-счета значение параметра "Электронный почтовый ящик" (sprCode = "EMAIL") с наименьшим приоритетом изменилось на значение Value = "Не определено"
    # :assert: В ЕРК у клиента Третьего лица значение параметра "Электронный почтовый ящик" (sprCode = "EMAIL") с наименьшим приоритетом изменилось на значение Value = "Не определено"
    # :assert: Создается задача "Проверка клиента в KYC(Siron)" после Сохранения клиентов.
    # :assert: Статус заявки "Отправлена на дополнительную проверку"
    # :assert: задача назначена на инициатора заявки и пользователей с ролью admins
    # :assert: Перешли на форму "Проверка клиента в KYC(Siron)", на которой отображаются:
    # :assert: ИД заявки,
    # :assert: в блоке "Результат проверки" отображаются результаты по обоим Клиентам:
    # :assert: "Клиент [ФИО Клиента] Совпадений нет после проверки"
    # :assert: "Клиент [ФИО Клиента третьего лица] На проверке УФМ (произошло совпадение"),
    # :assert: текст из справочника "Информационные блоки ЕФР" для "Уведомления о совпадении со списками в Siron KYC"
    # :assert: активные кнопки "Обновить" и "Отмена", неактивная кнопка "Завершить".
    # :assert: На заявке созданы параметры kycCompleted = "нет", kycId = ID для проверки в Siron ("EFR2456090_3e785" - сгенерирован по маске «EFR[№ заявки]_[N рандомных символов]», общая длина не превышает 16 символов), kycStatus = "inconspic",  kycComment = "Статус inconspic успешно установлен", kycDate = [дата_время] выполнения проверки,
    # :assert: kycId_thirdperson = ID для проверки в Siron по третему лицу("EFR2456090_5ee4e" - сгенерирован по маске «EFR[№ заявки]_[N рандомных символов]», общая длина не превышает 16 символов), kycStatus_thirdperson = "check",  kycComment_thirdperson = "Статус check успешно установлен", kycDate_thirdperson = [дата_время] выполнения проверки
    # :assert: на пользователей с ролью admins и email-адреса из itwCredo-kyc.properties отправлено уведомление с темой "Совпадение в ЕФР со списками по заявке [№заявки]" и текстом из параметра на варианте параметр kycEmailTemplate
    # :assert: происходит автоматическое обновление проверки результата обработки УФМ учетом рабочего времени роли и интервала из itwCredo-kyc.properties
    # :step: Меняем статус проверки Siron у Клиента-третьего лица на "Отложен УФМ" (pending)
    # :assert: Пользователь находится на форме задачи, по таймеру (timeout из itwCredo-kyc.properties)результат обновился на форме автоматически, без обновления страницы браузера пользователем
    # :assert: форма обновилась: по третему лицу результат проверки изменяется на "Отложен УФМ", текст с уведомлением убирается
    # :assert: активируется кнопка "Завершить"
    # :assert: изменяются параметры заявки kycStatus_thirdperson = "pending",  kycComment_thirdperson = "Статус pending успешно установлен", kycDate_thirdperson
    # :assert: автоматическое обновление проверки результата обработки УФМ учетом рабочего времени роли и интервала из itwCredo-kyc.properties продолжается
    # :step: Меняем статус проверки Siron у Клиента-третьего лица на "Совпадений нет после проверки" (inconspic) в период между автоматическими проверками
    # :assert: Результат проверки на форме по третьему лицу становится "Совпадений нет после проверки" - конечный статус KYC inconspic
    # :assert: Кнопка "Обновить" становится неактивной
    # :assert: изменяются параметры заявки: kycStatus_thirdperson = "inconspic",  kycComment_thirdperson = "Статус inconspic успешно установлен", kycDate_thirdperson
    # :step: Нажимаем кнопку "Завершить"
    # :assert: автоматическое обновление проверки результата обработки УФМ прекращается

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод параметров для формирования договоров" выбираем "Код доверенности"
    value = 'Доверенность №1...'
    # :step: Нажимаем кнопку "Завершить'

    # :newpage: #######################################################################################################

    # :step: На форме "Завершение оформления дополнительной карточки" по ссылке "Печать доверенности" скачиваем документ
    # :step: Устанавливаем чекбокс "Доверенность оформлена"
    # :step: Устанавливаем чекбокс "Документы по заявке подготовлены"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: В профиле клиента Продолжаем заявку (задача "Выбор получателя платежной карточки")

    # :newpage: #######################################################################################################

    # :step: На форме "Выбор получателя платежной карточки" выбираем "Получатель"
    value = 'Доверенное лицо'
    # :step: Заполняем "№ доверенности"
    value = '123УК56-1'
    # :step: Нажимаем кнопку "Поиск клиента"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск третьего лица в учетной системе Банка" заполняем поле "Личный номер"
    value = '7905456A553PB1'
    # :step: Нажимаем кнопку "Поиск карточки клиента"
    # :step: Нажимаем на найденную карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента" редактируем поле "Мобильный телефон" уникальным значением, по которому в ЕРК НЕ будут найдены дубликаты
    value = '+375338710926'
    # :step: Очищаем поле "E-mail"
    value = ''
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Выдача платежной карточки", устанавливаем чекбокс "Копия документа, удостоверяющего личность доверенного лица, изготовлена"
    # :step: Устанавливаем чекбокс "Копия нотариальной доверенности изготовлена"
    # :step: Печатаем расписку по ссылке на форме
    # :step: Устанавливаем чекбокс "Расписка оформлена"
    # :step: Нажимаем кнопку "Завершить выдачу карточки"

    # :newpage: #######################################################################################################

    # :step: На форме "Подготовка документов к передаче на хранение", устанавливаем чекбокс "Документы по заявке подготовлены"
    # :step: Нажимаем кнопку "Далее"
    # :assert: заявка завершается исполнением, статус "Окончена обработка"
    # :assert: В ЕРК не найдены клиенты с моб. телефонами дубликатами обновленного моб. телефона клиента Получателя карточки
    # :assert: В логах заявки request.log перед блоком сохранения данных "id='_18' name='Сохранение данных клиента' action='onEntry'" отображаются логи блока поиска дубликатов номера моб. телефона в ЕРК "id='_5' name='Поиск дублирования Мобильного телефона'", с параметрами запроса к ЕРК. В блоке отображается пустой список ЕРК кодов клиентов с дубликатами моб. номера клиента Получателя карточки ("dubilcateErkCodes="). Логи блока корректировки дубликатов не отображаются.
    # :assert: В ЕРК у клиента Получателя карточки значение параметра "Мобильный телефон" (sprCode = "PHONE_MOBILE") обновилось, PhoneNumber = "375254319293", в соответствии с ранее введеным значением на форме реквизитов клиента Получателя карточки, приоритет параметра Priority = "0"
    # :assert: В ЕРК у клиента Получателя карточки значение параметра "Электронный почтовый ящик" (sprCode = "EMAIL") с наименьшим приоритетом изменилось на значение Value = "Не определено"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_53610_65(app, credo_db):
    """
    {#
        :id:                53610_65
        :priority:          Средний
        :module:            Пенсии (пособия)
        :description:       Форма «Выбор счета для оформления заявления о перечислении пенсии (пособия)». Проверка кнопок "Оформить базовый счет" и "Обновить таблицу". Проверка клиента в KYC(Siron), если статус клиента в Siron KYC равен inconspic, статус доверенного лица в Siron KYC равен check/pending/«block» + текст «permit». Проверка статуса на заявке, если результат проверки = «check». Проверка отправки уведомлений. Проверка кнопки "Обновить" на форме «Проверка клиента в KYC(Siron)», если check_status = pending. Проверка автоматического обновления результата на форме задачи «Проверка клиента в KYC(Siron)», если check_status = check. Проверка автоматического обновления результата в нерабочее время на форме задачи «Проверка клиента в KYC(Siron)», если check_status = check. (57840) Проверка отсутствия блока "Подключение к ДБО" на форме реквизитов третьего лица
        :precondition:      Клиент существует в учетной системе банка
        :precondition:      Данные клиента совпадают с данными Мин. труда
        :precondition:      Заявление оформляет представитель получателя пенсии (пособия)
        :precondition:      Доверенное лицо существует в учетной системе банка
        :precondition:      Пользователь авторизован в системе, параметр  useNewCabinet "Использование нового интерфейса" = да
        :precondition:      У клиента имеется карточный контракт не с базовым счётом в BYN (RS/269843, счет BY05OLMP30140900000602822716)
        :precondition:      В справочнике Варианты продукта (card_variant) для "Базовый счет" поле "Продукты для карт"= "Карточки для БС"
        :precondition:      В справочнике Типы карт для вариантов (card_for_variant) с вариантом продукта "Базовый счет" только "БЕЛКАРТ_ПРЕМИУМ"
        :precondition:      В справочнике Типы платежных карт (type_card) для "БЕЛКАРТ-ПРЕМИУМ": "Персонифицированная" = "Да", "Продукт для PriorityPass в Forpost" и "Вариант для PriorityPass в Forpost" пустые, "Дополнительные сервисы/услуги"="SMS-управление SMS-информирование"
        :precondition:      В справочнике Типы карт для вариантов (card_for_variant) для строки "БЕЛКАРТ-ПРЕМИУМ": "Варианты продукта"= "Базовый счет", "Срок действия карт"="5 лет", "Продукт в Forpost"= "Базовый счет"(BASE_ACCNT_CARD), "Вариант в Forpost"="Расчетная карточка "Пенсионная" БЕЛКАРТ_ПРЕМИУМ"(RS_VIP_BELCART_PREMIUM), "Отображение карточки в процессах"= "Возможность открытия базового счёта", "Валюта счет"="Белорусский рубль", "Срок действия"="5 лет"
        :precondition:      Статус клиента в Siron KYC равен inconspic
        :precondition:      Статус доверенного лица в Siron KYC равен check
        :precondition:      В списке параметров продукта "BasicAccounts" присутствует параметр needPreActualization ("Необходима предварительная актуализация клиента") со значением "нет"
        :precondition:      На продукте параметр doKyc = Да
        :precondition:      В itwCredo-kyc.properties внесены соответствующие настройки (kyc.url, emails=credospam@itworks.by, timeout=300, workingTimeRole=front_office)
        :precondition:      Пользователь maslova (адрес эл.почты maslova@itwlocal.by) имеет роль admins
        :precondition:      В файле itwcredo-kyc.properties параметр emails=credospam@itworks.by
        :precondition:      В файле itwcredo-kyc.properties параметр timeout=300
        :precondition:      В файле itwcredo-kyc.properties параметр workingTimeRole=front_office
        :precondition:      Для роли front_office установлено начало рабочего времени = 13:00
        :precondition:      Системное время = 12:30
        :precondition:      В справочнике close_card_acc_text_block «Информационные блоки ЕФР» для "Уведомления о совпадении со списками в Siron KYC" "Текст уведомления" = "Ожидайте результат проверки УФМ. Тестирование"
        :source_point:      53610, 57657, 57840, 58045
        :comment:           Для возможности завершения заявки (активации карточки) выполняется апдейт карточки по номеру crd_code c установкой crd_embossed = 'YES', crd_prod_status = 'M'
        :comment:           Siron KYC: для установки статусов / получения ответов по Клиенту использовался эмулятор - бот для сайрона @itwAssistantBot, в itwCredo-kyc.properties kyc.url=http://autotest.itworks.brest:8301/siron
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 106 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 106 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'Pension'

    VARIANT = 'pensionApplicationRequest'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный (идентификационный) номер"
    value = '7169916A359PB8'
    # :step: Нажимаем кнопку "Искать"
    # :step: Нажимаем на краткую карточку клиента

    # :newpage: #######################################################################################################

    # :step: Выбрать продукт на форме "Профиль клиента"
    value = 'Пенсии (Пособия)'
    # :step: Выбрать вариант на форме "Профиль клиента"
    value = 'Оформление заявления о перечислении пенсии (пособия)'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #####################################################################################################

    # :assert: На параметрах заявки присутствуют параметры doKyc ([KYC] Проверять клиента в KYC) со значением "да"
    # :step: На форме "Ввод параметров заявки" нажимаем кнопку "Поиск назначений"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #####################################################################################################

    # :step: На форме «Заведение/актуализация карточки клиента – получателя пенсии (пособия)» нажимаем кнопку "Далее"

    # :newpage: #####################################################################################################

    # :step: На форме «Определение порядка оформления заявления о перечислении пенсии (пособия)» отмечаем радиобаттоном «Заявление оформляет представитель получателя пенсии (пособия)»
    # :step: Заполняем поле "Номер доверенности"
    value = '123'
    # :step: Заполняем поле "Дата выдачи доверенности"
    value = '08.04.2020'
    # :step: Заполняем поле "Кем выдана доверенность"
    value = 'Нотариус'
    # :step: Заполняем поле "Срок действия (ДД.ММ.ГГГГ)"
    value = '08.04.2023'
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #####################################################################################################

    # :step: На форме «Поиск карточки доверенного лица» заполняем поле "Личный номер"
    value = '7725338A114PB7'
    # :step: Нажимаем кнопку "Поиск карточки клиента"
    # :step: Выбираем карточку клиента

    # :newpage: #####################################################################################################

    # :assert: На форме "Реквизиты клиента" отсутствует блок "Подключение к ДБО"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #####################################################################################################

    # :assert: На форме "Выбор счета для оформления заявления о перечислении пенсии (пособия)" таблица "Доступные счета Клиента" пустая (карточный счет BY05OLMP30140900000602822716 не отображается)
    # :assert: Над кнопкой "Оформить базовый счет" отображается текст "Для оформления базового счета нажмите «Оформить базовый счет»:"
    # :step: Нажимаем кнопку "Оформить базовый счет"
    # :assert: Под кнопкой "Оформить базовый счет" отображается текст "Была оформлена заявка 228002184" (создалась новая заявка «Операции с базовым счетом»)
    # :assert: Инициируется заявка "Операции с базовым счетом". Осуществляется переход на новую вкладку с формой "Выбор операции с базовым счётом"
    # :assert: На форме «Выбор счета для оформления заявления о перечислении пенсии (пособия)» кнопка "Оформить базовый счет" становится недоступна

    # :newpage: #####################################################################################################

    # :step: На форме "Выбор операции с базовым счётом" выбираем тип операции
    value = 'Открытие базового счета'
    # :step: нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Поле "Продукт" предзаполнено значением "Карточки для БС"
    # :step: На форме "Ввод параметров расчетной карточки" заполняем поле "Вариант продукта"
    value = 'Базовый счет'
    # :step: Заполняем поле "Способ получения ПИН-кода"
    value = 'ПИН-конверт'
    # :step: Заполняем поле "Регион выдачи"
    value = 'Минск'
    # :step: Заполняем поле "Точка выдачи"
    value = 'Отдел розничных операций / г.Минск ул.Притыцкого 60/2'
    # :step: Нажимаем кнопку "Рассчитать стоимость оформления"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step:  На форме "ВВОД ИНЫХ ПАРАМЕТРОВ ПЛАТЕЖНОЙ КАРТОЧКИ" заполняем поле "Кодовое слово клиента"
    value = 'код'
    # :step: Заполняем поле "Источник получения информации о продукте"
    value = 'прочее'
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "ОФОРМЛЕНИЕ ЗАЯВЛЕНИЯ-АНКЕТЫ" устанавливаем флаг "Заявления оформлены"
    # :step: Нажимаем кнопку "Подтвердить"

    # :newpage: #######################################################################################################

    # :step: На форме "ПЕЧАТЬ УВЕДОМЛЕНИЯ" устанавливаем флаг Заявление оформлено
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На заявке выполнить задачу "Выбор получателя платежной карточки"

    # :newpage: #######################################################################################################

    # :step: На форме "Выбор получателя платежной карточки" выбираем значение из списка
    value = 'Владелец счета'
    # :step: Нажимаем на кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: на форме "Выдача платежной карточки", устанавливаем флаг "Выдача платежной карточки оформлена в заявлении-анкете"
    # :step: Нажимаем на кнопку "Завершить выдачу карточки"

    # :newpage: #######################################################################################################

    # :step: на форме "Подготовка документов к передаче на хранение" устанавливаем флаг "Документы по заявке подготовлены"
    # :step: Нажимаем на кнопку "Далее"
    # :assert: ФОРПОСТ. Открылся контракт BS/269851 на продукте/Варианте BASE_ACCNT_CARD_INSTANT/RS_VIP_BELCART_PREMIUM

    # :newpage: #######################################################################################################

	# :step: переходим на вкладку с формой «Выбор счета для оформления заявления о перечислении пенсии (пособия)» и нажимаем кнопку "Обновить таблицу"
	# :assert: Повторяется поиск счетов клиента и обновляются данные в таблице (подтянулся базовый счет BY51OLMP30340000000100000188 Расчетная карточка "Пенсионная" БЕЛКАРТ-ПРЕМИУМ)
    # :step: Выбираем счет
    value = 'BY51OLMP30340000000100000188'
	# :step: Нажимаем кнопку "Далее"

	# :newpage: #####################################################################################################

	# :step: На форме "Оформление документов" нажимаем кнопку "Печать документов"
    # :step: Устанавливаем чекбокс "Документы подписаны, отметки мною проставлены"
    # :step: Нажимаем кнопку "Завершить"
    # :assert: На параметрах заявки создаются параметры kycId ([KYC] ID для проверки в Siron) = EFR2456403_1056f, kycStatus ([KYC] Статус проверки клиента в KYC) = inconspic, kycDate ([KYC] Время проверки клиента в KYC) = 2022-07-18T16:51:05, kycComment ([KYC] Комментарий к проверке клиента в KYC) = Статус inconspic успешно установлен
    # :assert: На параметрах заявки создаются параметры kycId_thirdperson ([KYC] ID для проверки в Siron (третье лицо)) = EFR2456403_385b3, kycStatus_thirdperson ([KYC] Статус проверки клиента в KYC (третье лицо) = check, kycDate_thirdperson ([KYC] Время проверки клиента в KYC (третье лицо) = 2022-07-18T16:51:05, kycComment_thirdperson ([KYC] Комментарий к проверке клиента в KYC (третье лицо) = Статус check успешно установлен

    # :newpage: #######################################################################################################

    # :assert: Отобразилась форма «Проверка клиента в KYC(Siron)»
    # :assert: На форме «Проверка клиента в KYC(Siron)» в поле «Результат проверки» отображаются результаты по обоим Клиентам: "Клиент [ФИО Клиента] Совпадений нет после проверки", "Клиент [ФИО Клиента третьего лица] На проверке УФМ (произошло совпадение)"
    # :assert: На форме «Проверка клиента в KYC(Siron)» отображается текст из справочника «Информационные блоки ЕФР» "Ожидайте результат проверки УФМ. Тестирование"
    # :assert: Кнопка "Завершить" не доступна для нажатия
    # :assert: На пользователей с ролью admins и на адресс credospam@itworks.by пришло письмо с темой "Совпадение в ЕФР со списками по заявке 2455865" и текстом "Произошло совпадение в ЕФР со списками [наименование ЮЛ/ ФИО ФЛ/ИП] (ID [ kycId]]) при оформлении заявки [№заявки] по варианту [(Продукт) Вариант].Работник банка: [ФИО сотрудника, оформлявшего заявку]. Телефон: [телефон сотрудника]"
    # :assert: На заявке установился статус «Отправлена на дополнительную проверку»
    # :step: В Siron KYC устанавливаем статус «pending» для доверенного лица
    # :step: Ожидаем 300 секунд (timeout=300)
    # :assert: Результат не обновляется на форме автоматически
    # :step: Ожидаем наступления рабочего времени
    # :assert: Результат обновился на форме автоматически, без обновления страницы браузера
    # :assert: На параметрах заявки изменяются параметры параметры kycId_thirdperson ([KYC] ID для проверки в Siron (третье лицо)) = EFR2456403_385b3, kycStatus_thirdperson ([KYC] Статус проверки клиента в KYC (третье лицо) = pending, kycDate_thirdperson ([KYC] Время проверки клиента в KYC (третье лицо) = 2022-07-18T17:06:19, kycComment_thirdperson ([KYC] Комментарий к проверке клиента в KYC (третье лицо) = Статус pending успешно установлен

    # :newpage: #######################################################################################################

    # :assert: На форме «Проверка клиента в KYC(Siron)» в поле «Результат проверки» отображаются результаты по обоим Клиентам: "Клиент [ФИО Клиента] Совпадений нет после проверки", "Клиент [ФИО Клиента третьего лица] Отложен УФМ"
    # :step: В Siron KYC устанавливаем статус «block» + текст «permit»
    # :step: Нажимаем кнопку "Обновить" на форме «Проверка клиента в KYC(Siron)»

    # :newpage: #######################################################################################################

    # :assert: На форме «Проверка клиента в KYC(Siron)» в поле «Результат проверки» отображаются результаты по обоим Клиентам: "Клиент [ФИО Клиента] Совпадений нет после проверки", "Клиент [ФИО Клиента третьего лица] Произошло совпадение УФМ (Установление договорных отношений разрешено)"
    # :assert: На параметрах заявки изменяются параметры параметры kycId_thirdperson ([KYC] ID для проверки в Siron (третье лицо)) = EFR2456403_385b3, kycStatus_thirdperson ([KYC] Статус проверки клиента в KYC (третье лицо) = block, kycDate_thirdperson ([KYC] Время проверки клиента в KYC (третье лицо) = 2022-07-18T17:11:54, kycComment_thirdperson ([KYC] Комментарий к проверке клиента в KYC (третье лицо) = PeRmIt state successfully set. Статус успешно установлен.
	# :step: Нажимаем кнопку "Завершить"
    # :assert: Статус на заявке «Окончена обработка»

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_53753_6(app, credo_db):
    """
    {#
        :id:                53753_6
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка заведения карточки клиента ФЛ в СКЗ и ЕРК в ходе изменения связанного субъекта  - руководителя юридического лица. (57840) Проверка отсутствия блока "Подключение к ДБО" на форме реквизитов третьего лица
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      Тестовый клиент (Юридическое лицо) существует в ЕРК
        :precondition:      На варианте параметр mandatory_login_dbo "Обязательность создания учётной записи в ДБО" = "Да"
        :source_point:      53753, 56006, 56307, 56944, 57840
        :comment:           Запрос поиска юридического лица в ЕРК аналогичен поиску физического лица
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 106 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 106 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'

    VARIANT = 'CorporateFind'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "УНП/Идент. номер нерез."
    value = '321121123'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Выбираем карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в блоке "Информация о руководителе" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: Производим поиска карточки клиента по Личному номеру
    value = '4240267E020PB7'
    # :assert: Отображается сообщение "Карточка данного клиента отсутствует в учетной системе банка."
    # :step: Нажимаем "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :assert: Отображается форма "Заведение/актуализация карточки руководителя"
    # :assert: На форме "Заведение/актуализация карточки руководителя" отсутствует блок "Подключение к ДБО"
    # :step: указываем Фамилия (валидные символы А-ЯЁІЎ-‘')
    value = 'СІУП ЕРУ-МЕН'
    # :step: указываем Имя (валидные символы А-ЯЁІЎ-‘')
    value = 'В У-МЎІЕН'
    # :step: указываем Отчество (при наличии) (валидные символы А-ЯЁІЎ-‘')
    value = 'ЛЕІЎТ-АЮЎ ЩИЙ'
    # :step: указываем Пол
    value = 'Мужской'
    # :step: указываем Имя латинскими буквами
    value = 'WOMAN'
    # :step: указываем Фамилия латинскими буквами
    value = 'SUPER-PUPER'
    # :step: указываем Гражданство
    value = 'БЕЛАРУСЬ'
    # :assert: значение поля Резидентство = БЕЛАРУСЬ
    # :assert: значение поля Тип документа = Паспорт
    # :assert: значение поля Страна выдачи документа = БЕЛАРУСЬ
    # :step: указываем Дата рождения
    value = '20.04.1987'
    # :step: указываем Личный номер
    value = '4240267E020PB7'
    # :step: указываем Серия и номер документа
    value = 'AB1233677'
    # :step: указываем Кем выдан документ
    value = 'СЫН МАМИНОЙ ПОДРУГИ'
    # :step: указываем Дата выдачи
    value = '20.01.2000'
    # :step: указываем Срок действия документа
    value = '20.10.2029'
    # :step: указываем Страна рождения(Блок Место рождения)
    value = 'BLR БЕЛАРУСЬ'
    # :step: указываем Область(Блок Место рождения)
    value = 'ОБЛАСТЬ'
    # :step: указываем Район(Блок Место рождения)
    value = 'РАЙОН'
    # :step: указываем Тип населенного пункта(Блок Место рождения)
    value = 'Город'
    # :step: указываем Населенный пункт(Блок Место рождения)
    value = 'БРЕСТ'
    # :step: указываем Страна(Блок Место регистрации)
    value = 'БЕЛАРУСЬ'
    # :step: указываем Город или населенный пункт(Блок Место регистрации)
    value = 'МИНСК Г'
    # :step: указываем Улица(Блок Место регистрации)
    value = 'ЛЕНИНА ул'
    # :step: указываем Дом(Блок Место регистрации)
    value = '10'
    # :step: указываем Квартира(Блок Место регистрации)
    value = '18'
    # :step: снимаем отметку с чекбокса Аналогично месту регистрации
    # :assert: отображается блок Место проживания
    # :step: указываем Страна(Блок Место проживания)
    value = 'БЕЛАРУСЬ'
    # :step: указываем Город или населенный пункт(Блок Место проживания)
    value = 'БРЕСТ г, БРЕСТСКАЯ обл'
    # :step: указываем Улица(Блок Место проживания)
    value = 'ЛЕНИНА ул'
    # :step: указываем Дом(Блок Место проживания)
    value = '11'
    # :step: указываем Квартира(Блок Место проживания)
    value = '33'
    # :step: указываем Мобильный телефон
    value = '+375251231234'
    # :step: указываем Домашний  телефон
    value = '+375162434315'
    # :step: указываем Иной телефон
    value = '+375251231236'
    # :step: указываем Иной телефон
    value = '+375251231237'
    # :step: указываем Номер факса
    value = '+375162434318'
    # :step: указываем E-mail
    value = 'CREDOSPAM@ITWORKS.BY'
    # :step: указываем Место работы
    value = 'ОАО РОГАиКОПЫТА'
    # :step: указываем Занимаемая должность
    value = 'Бухгалтер'
    # :step: указываем Адрес места работы
    value = 'советская 13-15'
    # :step: Нажимаем "Добавить место работы"
    # :assert: отобразился блок #1, с указанными данными о работе
    # :assert: напротив блока с работой #1 отображается кнопка "Удалить"
    # :step: Нажимаем "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента юридического лица" в блоке "Информация о руководителе" появилась карточка связанного физического лица
    # :assert: На форме "Реквизиты клиента юридического лица" все внесенная информация сохранилась и отобразилась на карточке связанного физического лица
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение статуса проверки клиента" нажимаем "Анкета вопросник для клиента – организации"
    # :assert: В анкете в пункте 8 выбран первый чекбокс, в таблице внесены данные которые указывали на форме "Заведение/актуализация карточки руководителя"
    # :assert: В анкете в пункте 29.2 в графе "(инициалы, фамилия)" проставлена фамилия и инициалы руководителя
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: В СКЗ создался новый клиент с данным, которые указывали на форме "Заведение/актуализация карточки руководителя""
    # :assert: В ЕРК создался новый клиент с данным, которые указывали на форме "Заведение/актуализация карточки руководителя""
    # :step: Отправляем запрос через Postman на поиск ЮЛ в ЕРК
    # :assert: в ЕРК у юридического лицп в тэге <Link> существует клиент с параметром sprValue="Руководитель" с данным, которые указывали на форме "Заведение/актуализация карточки руководителя"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_53753_8(app, credo_db):
    """
    {#
        :id:                53753_8
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка заведения карточки физического лица в СКЗ и ЕРК в ходе изменения связанного ФЛ для индивидуального предпринимателя. (57840) Проверка отсутствия блока "Подключение к ДБО" на форме реквизитов третьего лица
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      Тестовый клиент (Индивидуальный предприниматель) существует в ЕРК и СКЗ
        :precondition:      На варианте параметр mandatory_login_dbo "Обязательность создания учётной записи в ДБО" = "Да"
        :source_point:      53753, 56006, 56307, 57840
        :comment:           Запрос поиска юридического лица в ЕРК аналогичен поиску физического лица
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 106 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 106 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'

    VARIANT = 'CorporateFind'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "УНП/Идент. номер нерез."
    value = '903239547'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Выбираем карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в разделе "Информация о связанном физическом лице" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки связанного физического лица" производим поиска карточки клиента по Личному номеру
    value = '4240267E020PB7'
    # :assert: отображается сообщение "Карточка данного клиента отсутствует в учетной системе банка."
    # :step: Нажимаем "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :assert: Отображается форма "Заведение/актуализация карточки связанного физического лица"
    # :assert: На форме "Заведение/актуализация карточки связанного с ИП физического лица" отсутствует блок "Подключение к ДБО"
    # :step: Указываем Фамилия (валидные символы А-ЯЁІЎ-‘')
    value = 'СІУП ЕРУ-МЕН'
    # :step: Указываем Имя (валидные символы А-ЯЁІЎ-‘')
    value = 'В У-МЎІЕН'
    # :step: Указываем Отчество (при наличии) (валидные символы А-ЯЁІЎ-‘')
    value = 'ЛЕІЎТ-АЮЎ ЩИЙ'
    # :step: Указываем Пол
    value = 'Мужской'
    # :step: Указываем Имя латинскими буквами
    value = 'WOMAN'
    # :step: Указываем Фамилия латинскими буквами
    value = 'SUPER-PUPER'
    # :step: Указываем Гражданство
    value = 'БЕЛАРУСЬ'
    # :assert: Значение поля Резидентство = БЕЛАРУСЬ
    # :assert: Значение поля Страна выдачи документа = БЕЛАРУСЬ
    # :step: Указываем Дата рождения
    value = '20.04.1987'
    # :step: Выбираем Тип документа
    value = 'Паспорт'
    # :step: Указываем Личный номер
    value = '4240267E020PB7'
    # :step: Указываем Серия и номер документа
    value = 'AB1233677'
    # :step: Указываем Кем выдан документ
    value = 'СЫН МАМИНОЙ ПОДРУГИ'
    # :step: Указываем Дата выдачи
    value = '20.01.2000'
    # :step: Указываем Срок действия документа
    value = '20.10.2029'
    # :step: Указываем Страна рождения(Блок Место рождения)
    value = 'BLR БЕЛАРУСЬ'
    # :step: Указываем Область(Блок Место рождения)
    value = 'ОБЛАСТЬ'
    # :step: Указываем Район(Блок Место рождения)
    value = 'РАЙОН'
    # :step: Указываем Тип населенного пункта(Блок Место рождения)
    value = 'Город'
    # :step: Указываем Населенный пункт(Блок Место рождения)
    value = 'БРЕСТ'
    # :step: Указываем Страна(Блок Место регистрации)
    value = 'БЕЛАРУСЬ'
    # :step: Указываем Город или населенный пункт(Блок Место регистрации)
    value = 'МИНСК Г'
    # :step: Указываем Улица(Блок Место регистрации)
    value = 'ЛЕНИНА ул'
    # :step: Указываем Дом(Блок Место регистрации)
    value = '10'
    # :step: Указываем Квартира(Блок Место регистрации)
    value = '18'
    # :step: Снимаем отметку с чекбокса Аналогично месту регистрации
    # :assert: Отображается блок Место проживания
    # :step: Указываем Страна(Блок Место проживания)
    value = 'БЕЛАРУСЬ'
    # :step: Указываем Город или населенный пункт(Блок Место проживания)
    value = 'БРЕСТ г, БРЕСТСКАЯ обл'
    # :step: Указываем Улица(Блок Место проживания)
    value = 'ЛЕНИНА ул'
    # :step: Указываем Дом(Блок Место проживания)
    value = '11'
    # :step: Указываем Квартира(Блок Место проживания)
    value = '33'
    # :step: Указываем Мобильный телефон
    value = '+375251231234'
    # :step: Указываем Домашний  телефон
    value = '+375162434315'
    # :step: Указываем Иной телефон
    value = '+375251231236'
    # :step: Указываем Иной телефон
    value = '+375251231237'
    # :step: Указываем Номер факса
    value = '+375162434318'
    # :step: Указываем E-mail
    value = 'CREDOSPAM@ITWORKS.BY'
    # :step: Указываем Место работы
    value = 'ОАО РОГАиКОПЫТА'
    # :step: Указываем Занимаемая должность
    value = 'Бухгалтер'
    # :step: Указываем Адрес места работы
    value = 'советская 13-15'
    # :step: Нажимаем "Добавить место работы"
    # :assert: отобразился блок #1, с указанными данными о работе
    # :assert: напротив блока с работой #1 отображается кнопка "Удалить"
    # :step: Нажимаем "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента юридического лица" в разделе "Информация о связанном физическом лице" появилась карточка связанного физического лица
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение статуса проверки клиента" нажимаем "Анкета вопросник для клиента – организации"
    # :assert: В анкете в пункте 8 выбран первый чекбокс, в таблице внесены данные которые указывали на форме "Заведение/актуализация карточки связанного физического лица"
    # :assert: В анкете в пункте 29.2 в графе "(инициалы, фамилия)" проставлена фамилия и инициалы связанного физического лица
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: в СКЗ создался новый клиент с данным, которые указывали на форме "Заведение/актуализация карточки связанного физического лица"
    # :assert: в ЕРК создался новый клиент с данным, которые указывали на форме "Заведение/актуализация карточки связанного физического лица"
    # :step: Отправляем запрос через Postman на поиск ЮЛ в ЕРК
    # :assert: В ЕРК у юридического лица в тэге <SoloIdentity/PersonCode> записан ЕРК код связанного ФЛ

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_53753_9(app, credo_db):
    """
    {#
        :id:                53753_9
        :priority:          Средний
        :module:            ЕФР
        :description:       Проверка заведения карточки физического лица в СКЗ , ЕРК, при изменении связанного субъекта -  лица, осуществляющего руководство бухгалтерским учетом. (57840) Проверка отсутствия блока "Подключение к ДБО" на форме реквизитов третьего лица
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      Пользователь имеет роль msb_front_office
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса ЕФР" = да
        :precondition:      Тестовый клиент (Юридическое лицо) существует в ЕРК
        :precondition:      На варианте параметр mandatory_login_dbo "Обязательность создания учётной записи в ДБО" = "Да"
        :source_point:      53753, 56006, 56307, 57840
        :comment:           Запрос поиска юридического лица в ЕРК аналогичен поиску физического лица
        :comment:           Тестирование осуществляется на заявке Продукт\Вариант "Регистрация/изменение данных клиента"\"Регистрация/изменение данных юридического лица"
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 106 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 106 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'changing_customer'

    VARIANT = 'CorporateFind'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" указываем личный (идентификационный) номер клиента ФЛ, существующего в учетной системе
    value = '6131183M846PB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Регистрация/изменение данных клиента'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Регистрация/изменение данных юридического лица'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки клиента в учетной системе Банка" выбираем значение из поля "Наименование страны регистрации клиента"
    value = 'БЕЛАРУСЬ'
    # :step: На форме "Поиск карточки клиента в учетной системе Банка" заполняем поле "УНП/Идент. номер нерез."
    value = '321121123'
    # :step: Нажимаем кнопку "Поиск"
    # :step: Выбираем карточку клиента

    # :newpage: #######################################################################################################

    # :step: На форме "Реквизиты клиента юридического лица" на блоке "Связанные субъекты" в разделе "Информация о лице, осуществляющем руководство бухгалтерским учетом" нажимаем "Изменить связь"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск карточки связанного физического лица" производим поиска карточки клиента по Личному номеру
    value = '4240267E020PB7'
    # :assert: отображается сообщение "Карточка данного клиента отсутствует в учетной системе банка."
    # :step: Нажимаем "Заведение карточки клиента"

    # :newpage: #######################################################################################################

    # :assert: отображается форма "Заведение/актуализация карточки лица, осуществляющем руководство бухгалтерским учетом"
    # :assert: На форме "Заведение/актуализация карточки лица, осуществляющем руководство бухгалтерским учетом" отсутствует блок "Подключение к ДБО"
    # :step: указываем Фамилия (валидные символы А-ЯЁІЎ-‘')
    value = 'СІУП ЕРУ-МЕН'
    # :step: указываем Имя (валидные символы А-ЯЁІЎ-‘')
    value = 'В У-МЎІЕН'
    # :step: указываем Отчество (при наличии) (валидные символы А-ЯЁІЎ-‘')
    value = 'ЛЕІЎТ-АЮЎ ЩИЙ'
    # :step: указываем Пол
    value = 'Мужской'
    # :step: указываем Имя латинскими буквами
    value = 'WOMAN'
    # :step: указываем Фамилия латинскими буквами
    value = 'SUPER-PUPER'
    # :step: указываем Гражданство
    value = 'БЕЛАРУСЬ'
    # :assert: значение поля Резидентство = БЕЛАРУСЬ
    # :assert: значение поля Страна выдачи документа = БЕЛАРУСЬ
    # :step: указываем Дата рождения
    value = '20.04.1987'
    # :step: Выбираем Тип документа
    value = 'Паспорт'
    # :step: указываем Личный номер
    value = '4240267E020PB7'
    # :step: указываем Серия и номер документа
    value = 'AB1233677'
    # :step: указываем Кем выдан документ
    value = 'СЫН МАМИНОЙ ПОДРУГИ'
    # :step: указываем Дата выдачи
    value = '20.01.2000'
    # :step: указываем Срок действия документа
    value = '20.10.2029'
    # :step: указываем Страна рождения(Блок Место рождения)
    value = 'BLR БЕЛАРУСЬ'
    # :step: указываем Область(Блок Место рождения)
    value = 'ОБЛАСТЬ'
    # :step: указываем Район(Блок Место рождения)
    value = 'РАЙОН'
    # :step: указываем Тип населенного пункта(Блок Место рождения)
    value = 'Город'
    # :step: указываем Населенный пункт(Блок Место рождения)
    value = 'БРЕСТ'
    # :step: указываем Страна(Блок Место регистрации)
    value = 'БЕЛАРУСЬ'
    # :step: указываем Город или населенный пункт(Блок Место регистрации)
    value = 'МИНСК Г'
    # :step: указываем Улица(Блок Место регистрации)
    value = 'ЛЕНИНА ул'
    # :step: указываем Дом(Блок Место регистрации)
    value = '10'
    # :step: указываем Квартира(Блок Место регистрации)
    value = '18'
    # :step: снимаем отметку с чекбокса Аналогично месту регистрации
    # :assert: отображается блок Место проживания
    # :step: указываем Страна(Блок Место проживания)
    value = 'БЕЛАРУСЬ'
    # :step: указываем Город или населенный пункт(Блок Место проживания)
    value = 'БРЕСТ г, БРЕСТСКАЯ обл'
    # :step: указываем Улица(Блок Место проживания)
    value = 'ЛЕНИНА ул'
    # :step: указываем Дом(Блок Место проживания)
    value = '11'
    # :step: указываем Квартира(Блок Место проживания)
    value = '33'
    # :step: указываем Мобильный телефон
    value = '+375251231234'
    # :step: указываем Домашний  телефон
    value = '+375162434315'
    # :step: указываем Иной телефон
    value = '+375251231236'
    # :step: указываем Иной телефон
    value = '+375251231237'
    # :step: указываем Номер факса
    value = '+375162434318'
    # :step: указываем E-mail
    value = 'CREDOSPAM@ITWORKS.BY'
    # :step: указываем Место работы
    value = 'ОАО РОГАиКОПЫТА'
    # :step: указываем Занимаемая должность
    value = 'Бухгалтер'
    # :step: указываем Адрес места работы
    value = 'советская 13-15'
    # :step: Нажимаем "Добавить место работы"
    # :assert: отобразился блок #1, с указанными данными о работе
    # :assert: напротив блока с работой #1 отображается кнопка "Удалить"
    # :step: Нажимаем "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента юридического лица" в разделе "Информация о лице, осуществляющем руководство бухгалтерским учетом" появилась карточка связанного физического лица
    # :assert: в СКЗ создался новый клиент с данным, которые указывали на форме "Заведение/актуализация карточки лица, осуществляющем руководство бухгалтерским учетом"
    # :assert: в ЕРК создался новый клиент с данным, которые указывали на форме "Заведение/актуализация карточки лица, осуществляющем руководство бухгалтерским учетом"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Подтверждение статуса проверки клиента" нажимаем "Анкета вопросник для клиента – организации"
    # :assert: В анкете в пункте 9 выбран первый чекбокс, в таблице внесены данные которые указывали на форме "Заведение/актуализация карточки лица, осуществляющем руководство бухгалтерским учетом"
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :step: Отправляем запрос через Postman на поиск юридического лица в ЕРК
    # :assert: В ЕРК у юридического лица присутствует лицо, осуществляющее руководство бухгалтерским учетом в тэге "<gc:Links>" с sprCode="ChiefAccountant"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_54557_1(app, credo_db):
    """
    {#
        :id:                54557_1
        :priority:          Средний
        :module:            Депозиты
        :description:       Оформление доп. взноса на "TERM%" вклад, наличными через Кассу третьим лицом, если сумма взноса больше 1000 б. в. с проверкой формирования приходного кассового ордера. (56006)Проверка блока "Подключение к ДБО" на форме "Реквизиты клиента". (56634) Проверка установки запрета на использование эл.почты @bgpb.by. (57840) Проверка отсутствия блока "Подключение к ДБО" на форме реквизитов третьего лица
        :precondition:      Пользователь авторизирован в СКЗ.
        :precondition:      В справочнике base_economic_parameters (Базовые экономические параметры) устанавливаем значение параметра base_value (Базовая величина) = 27
        :precondition:      У пользователя СКЗ параметр useNewCabinet ("Использование нового интерфейса") = "Да"
        :precondition:      Владелец вклада - подключенный к ДБО Клиент
        :precondition:      Вноситель денежных средств (третье лицо) - неподключенный к ДБО существующий Клиент со всеми обязательными параметрами (для заполнения формы Реквизиты клиента)
        :precondition:      На Продукте\Варианте "Банковские вклады"\"Оформление дополнительного взноса" заполняем значение параметра cashOrderText (Шаблон приходного кассового ордера для поля "Назначение платежа") = "Приходной кассовый ордер. Дополнительный взнос во вклад согласно договору № <depositCrtMnemo> от <depositDtFrom>"
        :precondition:      Для формирования отчета "Приходный кассовый ордер" на Продукте\Варианте "Банковские вклады"\"Оформление дополнительного взноса" заполняем параметр "cashOrderReportMnemo" = "DP_CASH_ORDER"
        :precondition:      На тестового клиента оформлены вклады в национальной валюте и соответствующие следующим условиям: - Контракт вклада в статусе 'EXECUTE' или 'WORK'; - Возможно пополнение вклада (ITW_EFR_DP.REPLENISHABLE_DEP): для новых вкладов TERM% (- доп. условие 'REPLENISHABLE_MODE' контракта/варианта/продукта имеет значение 'YES' или 'MANUAL'; - не наступила дата с которой пополнение запрещено согласно доп. условия 'ADD_END_FROM_MONTHS' контракта/варианта/продукта (текущая дата + ADD_END_FROM_MONTHS < даты окончания вклада)).
        :precondition:      На варианте параметр needPreActualization ("Необходима предварительная актуализация клиента") = "нет"
        :precondition:      На варианте параметр mandatory_login_dbo = да
        :source_point:      54557, 56006, 56634, 57840
        :comment:           Касса 1030
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 106 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 106 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'Deposits'

    VARIANT = 'RefillDeposit'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный (идентификационный) номер"
    value = '5151161M990GB7'
    # :step: нажать кнопку "Искать"
    # :step: выбрать Клиента - кликнуть по отображенной карточке тестового Клиента

    # :newpage: #######################################################################################################

    # :step: выбрать продукт на форме "Профиль клиента"
    value = 'Банковские вклады'
    # :step: выбрать вариант
    value = 'Оформление дополнительного взноса'
    # :step: нажать кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :assert: на форме "Реквизиты клиента" отображается блок "Подключение к ДБО" - заполненное поле "Логин в ДБО", кнопка "Отправить пароль повторно"
    # :step: заполняем поле E-mail
    value = 'NOVYI@BGPB.BY'
    # :step: нажимаем кнопку "Далее"
    # :assert: Выводится ошибка -"На форме имеются ошибки".
    # :step: На форме "Ошибка" Нажимаем кнопку "Закрыть".
    # :assert: Напротив поля E-mail выводится сообщение - "Использование электронной почты ОАО "Белгазпромбанк" не в служебных целях запрещено. Введите иной адрес электронной почты"
    # :assert: Кнопка "Далее" недоступна, отсутствует возможность завершить заявку.
    # :step: Заполняем поле E-mail
    value = 'C1R_E-DOSPAM@local.BY'
    # :step: нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На параметрах Клиента Владельца вклада сохраняется параметр sou_id = SDBONum из ответа ЕРК
    # :step: Выбираем вклад (радиобатон), который необходимо пополнить на форме "ВЫБОР СЧЕТА ДЛЯ ЗАЧИСЛЕНИЯ ДЕНЕЖНЫХ СРЕДСТВ"
    value = 'BY94OLMP34140000000800324099'
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Заполняем поле "Сумма дополнительного взноса" на форме "ОПРЕДЕЛЕНИЕ УСЛОВИЙ ОСУЩЕСТВЛЕНИЯ ДОПОЛНИТЕЛЬНОГО ВЗНОСА"
    value = '95485'
    # :step: Заполняем радиобаттон выбранной Кассы
    value = '1030'
    # :step: отметить чекбокс "Документ, удостоверяющий личность, предоставлен"
    # :step: отметить чекбокс "Третьим лицом:" на форме "Вноситель денежных средств является:"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Осуществляется переход на форму "ПОИСК ТРЕТЬЕГО ЛИЦА В УЧЕТНОЙ СИСТЕМЕ БАНКА".
    # :step: вводим личный номер тестового Клиента
    value = '7695519A870PB9'
    # :step: нажать кнопку "Искать"
    # :step: выбрать Клиента - кликнуть по отображенной карточке тестового Клиента

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента" отсутствует блок "Подключение к ДБО"
    # :step: Нажимаем кнопу "Далее"

    # :newpage: #######################################################################################################

    # :assert: Поле "Дополнить назначение платежа" заполнено значением из параметра cashOrderText (Шаблон приходного кассового ордера для поля "Назначение платежа") Продукта\Варианта (см. Предусловие). Теги, если есть, заполнены данными вклада.
    # :step: Отмечаем чекбокс "Заявление на изменение персональных данных физического лица оформлено"
    # :step: Отмечаем чекбокс "Копия документа, удостоверяющего личность Клиента, изготовлена"
    # :step: Нажимаем копку "Далее" на форме "НАЗНАЧЕНИЕ ПЛАТЕЖА"

    # :newpage: #######################################################################################################

    # :assert: На форме "Оформление документов при дополнительном взносе" над кнопками формирования документов отображается текст "Распечатайте необходимые документы, передайте Клиенту на проверку и подпись, затем оформите и передайте на дополнительный контроль:"
    # :assert: На форме над чекбоксом "Документы оформлены" отображается текст "Подтвердите оформление документов и осуществление дополнительного контроля:"
    # :assert: На форме отображается кнопка для формирования отчета "Печать приходного кассового ордера"
    # :step: Формируем (по нажатию кнопок) и проверяем сформированные документы: по кнопке "Печать приходного кассового ордера"
    # :assert: Сформированы ожидаемые документы, без ошибок. Документы содержат корректные значения в соответствии с параметрами текущей заявки.
    # :assert: Данные отчета "ПРИХОДНЫЙ КАССОВЫЙ ОРДЕР" корректны и совпадают с введенными ранее: содержат ФИО третьего лица (вносителя средств) (поле "От кого:") и назначение платежа с формы "НАЗНАЧЕНИЕ ПЛАТЕЖА", дату формирования отчета - дату филиала Forpost, счет Дебет - счет кассы выбранный ранее, счет Кредит - счет вклада для пополнения, номер договора вклада и сумму взноса (в т.ч. и прописью)
    # :step: Заполняем чекбокс "Документы оформлены"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На форме "Завершение оформления дополнительного взноса" вверху формы отображается текст "Передайте Клиенту документ, удостоверяющий личность, направьте его в кассу Банка для внесения суммы дополнительного взноса и передайте в кассу Банка оба экземпляра приходного кассового/валютного ордера."
    # :assert: Над кнопками навигации отображается текст "Завершите оформление операции:"
    # :step: Нажимаем кнопку "Завершить оформление"

    # :newpage: #######################################################################################################

    # :assert: заявка завершается, переход на форму "Профиль клиента"
    # :assert: В БИС Forpost присутствует не акцептованная приходная кассовая операция на сумму взноса в валюте вклада указанной ранее на форме "Определение условий осуществления дополнительного взноса". Сумма взноса отражена в «BOOK остатке».
    # :step: Акцептуем кассовую операцию.
    # :assert: Пополнение успешно произведено, остаток по вкладу увеличен на сумму взноса. По контракту вклада создались акция пополнения вклада «PRINCIPAL_IN» на сумму взноса и привязанная к ней транзакция со счета выбранной в заявке СКЗ Кассы. Сумма и валюта пополнения корректны.
    # :assert: В параметрах заявки СКЗ присутствуют корректные основные данные осуществленной операции пополнения (тип клиента пополнения, параметры вносителя, параметры пополняемого вклада, параметры перечисления (тип, сумма, валюта, счет списания, назначение платежа)) - параметры sClientOwner, depositAccountNumber, depositCrtMnemo, depositDtFrom, depositDtTill, isNotCash, refillAccntOrCassa, depositRefillAmount, depositCurrency, isDocProvided, isUndefinedPayer, thirdPersonCustCode, paymentPurpose, third_face, fromCabinet

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_54557_2(app, credo_db):
    """
    {#
        :id:                54557_2
        :priority:          Средний
        :module:            Депозиты
        :description:       Оформление НЕ "TERM%" вклада, наличными через Кассу третьим лицом (существующий клиент), в наличной форме пополнения, в иностранной валюте. (56006) Проверка блока "Подключение к ДБО" на форме "Реквизиты клиента". (56634) Проверка установки запрета на использование эл.почты @bgpb.by. (57567) Проверка клиента в KYC(Siron) (check - pending - release). (57840) Проверка отсутствия блока "Подключение к ДБО" на форме реквизитов третьего лица
        :precondition:      Пользователь авторизирован в СКЗ
        :precondition:      У пользователя СКЗ параметр useNewCabinet ("Использование нового интерфейса") = "Да"
        :precondition:      Владелец вклада - подключенный к ДБО Клиент. Клиент не числится в списках Siron (статус = inconspic (Совпадений нет после проверки)
        :precondition:      Клиент третье лицо - неподключенный к ДБО существующий Клиент. Клиент числится в списках Siron (статус = check (На проверке УФМ (произошло совпадение))
        :precondition:      На продукте\варианте "Банковские вклады"\"Оформление вклада" параметр needPreActualization ("Необходима предварительная актуализация клиента") = "нет", параметр doKyc ([KYC] Проверять клиента в KYC) = "да"
        :precondition:      На продукте\варианте "Банковские вклады"\"Оформление вклада" параметр mandatory_login_dbo = да
        :precondition:      Справочник "Варианты вкладов" заполнен, в справочнике присутствуют вклады в иностранной валюте с параметром "Оформление договора вклада на имя третьего лица" = Да
        :precondition:      В itwCredo-kyc.properties внесены настройки: kyc.url, emails=credospam@itworks.by, timeout=300
        :precondition:      Значение параметра kycEmailTemplate на варианте OpenDeposit - "ТЕСТ - Произошло совпадение в ЕФР со списками [ФИО] (ID [ kycId]]) при оформлении заявки [№заявки] по варианту [(Продукт) Вариант]. Вклад: [depositVariants] ([depositCurrency]) Работник банка: [ФИО сотрудника, оформлявшего заявку]. Телефон: [телефон сотрудника]"
        :precondition:      Текст записи "Уведомления о совпадении со списками в Siron KYC" из справочника «Информационные блоки ЕФР» - "ТЕСТ - Ожидайте результат проверки УФМ. Режим работы УФМ: Пн-Чт: 08:30 – 17:30* Пт: 08:30 – 16:15*. Сб-Вскр – выходные. *в предпраздничные дни режим работы сокращен на 1 час."
        :source_point:      51465, 52812, 53345, 53597, 54355, 54557, 55008, 56006, 56105, 56162, 56564, 56634, 56792, 56953, 57355, 57657, 57840, 58037
        :comment:           Вклад "На 3 года безотзывный-стабильный" USD
        :comment:           Siron KYC: для установки статусов / получения ответов по Клиенту использовался эмулятор - бот для сайрона @itwAssistantBot, в itwCredo-kyc.properties kyc.url=http://autotest.itworks.brest:8301/siron
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 106 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 106 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'Deposits'

    VARIANT = 'OpenDeposit'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный (идентификационный) номер" тестового Клиента
    value = '5151161M990GB7'
    # :step: Нажимаем кнопку "Искать"
    # :step: Нажимаем на найденную краткую карточку клиента

    # :newpage: #######################################################################################################

    # :step: В профиле клиента в разделе "Действия с продуктами" заполняем поле "Продукт"
    value = 'Банковские вклады'
    # :step: В профиле клиента в разделе "Действия с продуктами" заполняем поле "Вариант"
    value = 'Оформление вклада'
    # :step: Нажимаем кнопку "Выполнить"
    # :assert: На заявке создан параметр doKyc = "да"
    # :step: На варианте "Оформление вклада" продукта "Банковские вклады" параметр doKyc устанавливаем = "нет"

    # :newpage: #######################################################################################################

    # :step: на форме "Реквизиты клиента" заполняем поле E-mail
    value = 'NOVYI@BGPB.BY'
    # :step: нажимаем кнопку "Далее"
    # :assert: Выводится ошибка -"На форме имеются ошибки".
    # :step: На форме "Ошибка" Нажимаем кнопку "Закрыть".
    # :assert: Напротив поля E-mail выводится сообщение - "Использование электронной почты ОАО "Белгазпромбанк" не в служебных целях запрещено. Введите иной адрес электронной почты"
    # :assert: Кнопка "Далее" недоступна, отсутствует возможность завершить заявку.
    # :step: Заполняем поле E-mail
    value = 'N1_V-YI@local.BY'
    # :step: нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: На параметрах Клиента Владельца вклада сохраняется параметр sou_id = SDBONum из ответа ЕРК
    # :step: На форме "Подбор вклада" выставляем фильтр подбора "Оформление договора вклада на имя третьего лица"
    value = 'Да'
    # :step: Нажимаем кнопку "Подобрать"
    # :step: В таблице "Перечень вкладов" выбираем активный вклад (См. комментарий)
    # :step: Заполняем поле "Источник информирования"
    value = 'Радиореклама'
    # :step: Заполняем чекбокс "Клиент является Вносителем денежных средств на имя третьего лица"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск третьего лица в учетной системе Банка" заполняем поле "Личный номер" тестового Клиента
    value = '7689438A748PB0'
    # :step: Нажимаем кнопку "Поиск карточки клиента"
    # :step: Нажимаем на найденную краткую карточку клиента

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента" отсутствует блок "Подключение к ДБО"
    # :step: Нажимаем кнопу "Далее"

    # :newpage: #######################################################################################################

    # :assert: Осуществляется переход на форму "Определение способа внесения первоначального взноса на вклад"
    # :step: На форме "Определение способа внесения первоначального взноса на вклад" из списка касс выбираем радиобаттон кассы Банка
    value = '1010'
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :assert: Переходим на форму "Проверка клиента в KYC(Siron)"
    # :assert: При оформлении заявки используется значение параметра doKyc на заявке
    # :assert: На форме выводитсян ИД заявки, Результат проверки - Клиент ГУПОЛОВИЧ ЗАРДАР ВАЛЕРЬЕВИЧ На проверке УФМ (произошло совпадение), Клиент ГОРИН ЛИДИЙ ЕФИМОВИЧ Совпадений нет после проверки, активные кнопки "Обновить" и "Отмена", кнопка "Завершить" - неактивна. Выведен текст из справочника «Информационные блоки ЕФР» записи "Уведомления о совпадении со списками в Siron KYC")
    # :assert: Создается задача "Проверка клиента в KYC(Siron)"
    # :assert: В истории выполнения процесса после окончания сохранения клиента создались задачи "Проверка KYC", "Запуск процесса KycChecker"
    # :assert: Заявка находится в статусе "Отправлена на дополнительную проверку"
    # :assert: Задача назначена на инициатора заявки и пользователей с ролью admins (См. Служебная информация о заявке "Performers: sychevskaya, admins.")
    # :assert: На пользователей с ролью admins и email-адреса из itwCredo-kyc.properties разосланы email с темой "Совпвдение в ЕФР со списками по заявке 2455927" и с текстом "ТЕСТ - Произошло совпадение в ЕФР со списками ГУПОЛОВИЧ ЗАРДАР ВАЛЕРЬЕВИЧ (ID EFR2456121_de4c7) при оформлении заявки 2456121 по варианту (Банковские вклады) Оформление вклада. Вклад: На 3 года безотзывный-стабильный (USD) Работник банка: Сычевская Анна Степановна. Телефон: +3754471552233". Текст сообщения = значение параметра kycEmailTemplate на варианте OpenDeposit (см.комментарий)
    # :assert: На заявке созданы параметры: doKyc = "да", kycId = EFR2456121_39c45, kycStatus = inconspic, kycComment = Статус inconspic успешно установлен, kycDate = 2022-07-13T16:31:09, kycId = kycId_thirdperson = EFR2456121_de4c7, kycStatus_thirdperson = check, kycComment_thirdperson = Статус check успешно установлен, kycDate_thirdperson = 2022-07-13T16:31:09
    # :step: Меняем статус проверки в Siron по клиенту ГУПОЛОВИЧ ЗАРДАР ВАЛЕРЬЕВИЧ на "Отложен УФМ (pending)"
    # :assert: По истечении таймера результат обновился на форме автоматически, без обновления страницы браузера: Результат проверки - Клиент ГУПОЛОВИЧ ЗАРДАР ВАЛЕРЬЕВИЧ Отложен УФМ, Клиент ГОРИН ЛИДИЙ ЕФИМОВИЧ Совпадений нет после проверки, активные кнопки "Обновить", "Завершить" и "Отмена"
    # :assert: Обновлены параметры на заявке: doKyc = "да", kycId = EFR2456121_39c45, kycStatus = inconspic, kycComment = Статус inconspic успешно установлен, kycDate = 2022-07-13T16:31:09, kycId = kycId_thirdperson = EFR2456121_de4c7, kycStatus_thirdperson = pending, kycComment_thirdperson = Статус pending успешно установлен, kycDate_thirdperson = 2022-07-13T16:47:36
    # :step: Меняем статус проверки в Siron по клиенту ГУПОЛОВИЧ ЗАРДАР ВАЛЕРЬЕВИЧ на "Совпадений нет по результатам проверки УФМ (release)"
    # :step: Нажимаем кнопку "Обновить"
    # :assert: Результат на форме обновился: Результат проверки - Клиент ГУПОЛОВИЧ ЗАРДАР ВАЛЕРЬЕВИЧ Совпадений нет по результатам проверки УФМ, Клиент ГОРИН ЛИДИЙ ЕФИМОВИЧ Совпадений нет после проверки, активные кнопки "Завершить" и "Отмена", кнопка "Обновить" - неактивна
    # :assert: Обновлены параметры на заявке: doKyc = "да", kycId = EFR2456121_39c45, kycStatus = inconspic, kycComment = Статус inconspic успешно установлен, kycDate = 2022-07-13T16:53:12, kycId = kycId_thirdperson = EFR2456121_de4c7, kycStatus_thirdperson = release, kycComment_thirdperson = Статус release успешно установлен, kycDate_thirdperson = 2022-07-13T16:53:12
    # :step: Нажимаем кнопку "Завершить"
    # :assert: Осуществляется переход на форму "Оформление документов при открытии вклада"

    # :newpage: #######################################################################################################

    # :step: На форме "Оформление документов при открытии вклада" по кнопке "Печать договора вклада" формируем и проверяем договор
    # :step: по кнопке "Печать приходного валютного ордера" формируем и проверяем ордер
    # :step: Заполняем чекбокс "Документы оформлены"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На фороме "Завершение оформления вклада" заполняем чекбокс "Приходный ордер проверен"
    # :step: Заполняем чекбокс "Документы переданы клиенту"
    # :step: Нажимаем кнопку "Завершить оформление"
    # :assert: Заявка завершается исполнением, статус "Окончена обработка".
    # :assert: В БИС Forpost произошло открытие договора вклада, договор в состоянии «WAIT», сумма взноса отражена в «BOOK остатке», приходная кассовая операция не акцептована. Договор вклада в валюте выбранного ранее в заявке вклада. Договор оформлен на третье лицо.
    # :step: Для проверки дальнейшего открытия на стороне Forpost акцептуем кассовую операцию. На договоре выполняем акцию CHECK (Контроль ожидания поступления средств на счет контракта) или сервис ручной активации контракта.
    # :assert: Договор вклада в состоянии «EXECUTE», пристуствуют транзакция (со счета Кассы на основной счет контракта) и акция «PRINCIPAL_IN» на сумму взноса. График акций расчитан до конца срока.
    # :assert: Доп. условия на договоре добавлены в соответствии с вариантом вклада (Forpost). В доп. условиях договора присутствует APPL_ID (Номер заявки СКЗ). Значения доп. условий соответствуют выбранным Клиентом настройкам вклада в заявке СКЗ. По текущим проверкам тест-кейса присутствуют следующие доп. условия: AMOUNT_SOURCE (Способ внесения средств) = "CASH", AMOUNT_SOURCE_TXT = "Вносим сразу через кассу", PAYER_DOC (Требование предъявлено?) = "NO", PAYER_DOC_TXT = "Требование НЕ предъявлено"
    # :step: На договоре вклада в БИС Forpost выполняем сервис "Доверенные лица контракта"
    # :assert: В списке доверенностей на управлени присутствует оформитель вклада (ФИО) с типом документа «Оформитель вклада на третье лицо» и датами начала/окончания, которые соответствуют сроку действия вклада
    # :step: В БИС Forpost переходим на форму (107) клиента оформителя вклада
    # :assert: Среди документов клиента оформителя присутствует документ "ОФОРМИТЕЛЬ_ВКЛАДА" со сроком равным сроку действия договора контракта

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)

@pytest.mark.skip(reason="Template")
def test_57840_3(app, credo_db):
    """
    {#
        :id:                57840_3
        :priority:          Средний
        :module:            Депозиты
        :description:       Оформление переоформления вклада на третье лицо (проверка отсутствия блока "Подключение к ДБО" на форме реквизитов третьего лица)
        :precondition:      Пользователь авторизирован в СКЗ со всеми правами
        :precondition:      У пользователя параметр useNewCabinet "Использование нового интерфейса" = "да"
        :precondition:      На варианте параметр needPreActualization ("Необходима предварительная актуализация клиента") = "нет"
        :precondition:      У клиента есть вклад доступный для переоформления
        :source_point:      57840
        :comment:           
        :tc_type:           +
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.12.2021
        :client_env:        Google Chrome 108 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 106 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 106 [Windows 10]
    }#
        :param: app: фикстура приложения
        :param: db_credo: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'Deposit'

    VARIANT = 'ReopenDeposit'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '4030987A091PB3'
    # :step: Нажимаем кнопку "Искать"
    # :step: Нажимаем на краткую карточку клиента

    # :newpage: #######################################################################################################

    # :step: Выбираем продукт на форме "Профиль клиента"
    value = 'Банковские вклады'
    # :step: Выбираем вариант
    value = 'Оформление переоформления вклада'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Выбираем счёт, по списанию денежных средств
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Устанавливаем чек-бокс "Заявление на досрочный возврат банковского вклада оформлено"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: Устанавливаем чек-бокс "Оформление нового вклада"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "ПОДБОР ВКЛАДА" устанавливаем "Оформление договора вклада на имя третьего лица"
    value = 'Да'
    # :step: Нажимаем кнопку "Подобрать"
    # :step: Выбираем подходящий вклад
    # :step: Выбираем источник информирования
    value = 'Сайт банка'
    # :step: Устанавливаем чек-бокс "Клиент является Вносителем денежных средств на имя третьего лица"
    # :step: Нажимаем кнопку "Далее"

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск третьего лица в учетной системе Банка" вводим личный номер
    value = '7689438A748PB0'
    # :step: Нажимаем кнопку "Поиск Карточки клиента"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :assert: На форме "Реквизиты клиента" отсутствует блок "Подключение к ДБО"

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


