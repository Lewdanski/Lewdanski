@pytest.mark.skip(reason="Template")
def test_567773_1(app, credo_db, forpost_db):
    """
    {#
        :id:                56773_1
        :priority:          Средний
        :module:            ЕФР
        :description:       Предоставление кредита Скоро новоселье. Проверка контроля личного номера Клиента резидента РБ.
        :precondition:      У пользователя СКЗ параметр useNewCabinet ("Использование нового интерфейса") = "да"
        :precondition:      Клиент есть в ЕРК с ошибкой в ЛН (по ключу, = 6180263B259GB9), паспорт AC2645470, ISPPM1661411
        :precondition:      На варианте fast_money_novoselie, параметр useExtendedForms (Использовать формы с доп. полями) = "нет"
        :precondition:      У Клиента отсутствуют договора и заявки
        :source_point:      RM56773
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.04.2021
        :client_env:        Google Chrome 93 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 92 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 93 [Windows 10]
        :time_of_test:      30
        :precondition_time: 10
        :count_of_check:    3
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSales'
    VARIANT = 'fast_money_novoselie'

    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '6180263B259GB9'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Предоставление кредита'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Скоро новоселье'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод ключевых данных заявителя" нажимаем кнопку "Завершить"
    # :assert: Отображается ошибка "Личный номер неверен!"
    # :step: Меняем значение личного номера на корректный
    value = '6180263B259GB6'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Переходим на форму "Ввод данных заявителя" с незаполненными полями (как для нового клиента)
    # :step: Заполняем фамилию
    value = 'Кривой'
    # :step: Заполняем имя
    value = 'Клиент'
    # :step: Заполняем отчество
    value = 'Проверка'
    # :step: Заполняем имя латинскими буквами
    value = 'Krivoy'
    # :step: Заполняем фамилию латинскими буквами
    value = 'Klient'
    # :step: Заполняем пол
    value = 'Женский'
    # :step: Заполняем номер документа
    value = 'AC2645470'
    # :step: Заполняем кем выдан
    value = 'РОВД'
    # :step: Заполняем дату выдачи
    value = '02.02.2020'
    # :step: Заполняем дату окончания действия
    value = '02.02.2025'
    # :step: Заполняем дату рождения
    value = '02.02.1970'
    # :step: Заполняем населённый пункт
    value = 'Брест'
    # :step: Заполняем домашний телефон
    value = '+375162789654'
    # :step: Заполняем мобильный телефон
    value = '+375294561237'
    # :step: Заполняем телефон контактного лица
    value = '+375332789347'
    # :step: Заполняем фио контактного лица и отношение к заявителю
    value = 'Кривой родственник'
    # :step: Заполняем кодовое слово
    value = 'КОТ'
    # :step: Заполняем индекс
    value = '224000'
    # :step: Заполняем страну регистрации
    value = 'Беларусь'
    # :step: Заполняем населённый пункт
    value = 'Брест'
    # :step: Заполняем место проживания
    value = 'Собственный дом'
    # :step: Устанавливаем флаг "Совпадает с адресом регистрации"
    # :step: Заполняем семейное положение
    value = 'Холост (не замужем)'
    # :step: Заполняем количество иждивенцев
    value = '0'
    # :step: Заполняем источник дохода
    value = 'справка'
    # :step: Заполняем среднемесячный доход к выдаче
    value = '80000'
    # :step: Заполняем регистрационный номер справки
    value = '1234'
    # :step: Заполняем дату регистрации справки
    value = '02.02.2020'
    # :step: Заполняем наименование предприятия
    value = 'Сustomer'
    # :step: Заполняем форму трудоустройства
    value = 'Контракт'
    # :step: Заполняем образование
    value = 'Высшее'
    # :step: Заполняем должность
    value = 'Автомаляр'
    # :step: Заполняем стаж на последнем месте работы (годы)
    value = '5'
    # :step: Заполняем стаж на последнем месте работы (месяцы)
    value = '6'
    # :step: Заполняем УНП организации
    value = '456987123'
    # :step: Заполняем запрашиваемую сумму
    value = '500'
    # :step: Нажимаем на кнопку "Завершить"
    # :assert: Отображается ошибка "Существует Клиент с такими же серией и номером документа - 6180263B259GB9 КРИВОЙ КЛИЕНТ ISPPM1661411", заявку завершить невозможно.

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


@pytest.mark.skip(reason="Template")
def test_567773_2(app, credo_db, forpost_db):
    """
    {#
        :id:                56773_2
        :priority:          Средний
        :module:            ЕФР
        :description:       Предоставление кредита Скоро новоселье - поручитель. Проверка контроля личного номера Клиента резидента РБ.
        :precondition:      У пользователя СКЗ параметр useNewCabinet ("Использование нового интерфейса") = "да"
        :precondition:      Клиент есть в ЕРК с ошибкой в ЛН (по ключу, = 6180263B259GB9), паспорт AC2645470, ISPPM1661411
        :precondition:      В системе есть заявка 10605 Скоро новоселье в статусе Начата обработка
        :precondition:      На варианте fast_money_novoselie_guarantee, параметр useExtendedForms (Использовать формы с доп. полями) = "нет"
        :precondition:      Пользователь авторизирован в СКЗ
        :source_point:      RM56773
        :db_env:            База FORPOST: forp_d3; Тестовая дата: 09.04.2021
        :client_env:        Google Chrome 93 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Mozilla Firefox 92 [Windows 10; openSuSE Linux Leap 15.1]
        :client_env:        Microsoft EDGE 93 [Windows 10]
        :time_of_test:      30
        :precondition_time: 10
        :count_of_check:    3
    }#
        :param: app: фикстура приложения
        :param: credo_db: фикстура базы данных
    """

    value = ''
    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)


    PRODUCT = 'CreditCardSales'
    VARIANT = 'fast_money_novoselie_guarantee'


    # :newpage: #######################################################################################################

    # :step: На форме "Поиск клиента" заполняем поле "Личный номер"
    value = '6180263B259GB9'
    # :step: Нажимаем кнопку "Искать"
    # :step: Выбираем необходимую карточку

    # :newpage: #######################################################################################################

    # :step: Выбираем значение поля "Выберите продукт" в блоке "Действия с продуктами"
    value = 'Предоставление кредита'
    # :step: Выбираем значение поля "Выберите вариант"
    value = 'Скоро новоселье - поручитель'
    # :step: Нажимаем кнопку "Выполнить"

    # :newpage: #######################################################################################################

    # :step: На форме "Ввод ключевых данных заявителя" нажимаем кнопку "Завершить"
    # :assert: Отображается ошибка "Личный номер неверен!"
    # :step: Меняем значение личного номера на корректный
    value = '6180263B259GB6'
    # :step: Нажимаем кнопку "Завершить"

    # :newpage: #######################################################################################################

    # :assert: Переходим на форму "Ввод данных заявителя" с незаполненными полями (как для нового клиента)
    # :step: Заполняем фамилию
    value = 'Кривой'
    # :step: Заполняем имя
    value = 'Клиент'
    # :step: Заполняем отчество
    value = 'Проверка'
    # :step: Заполняем имя латинскими буквами
    value = 'Krivoy'
    # :step: Заполняем фамилию латинскими буквами
    value = 'Klient'
    # :step: Заполняем пол
    value = 'Женский'
    # :step: Заполняем номер документа
    value = 'AC2645470'
    # :step: Заполняем кем выдан
    value = 'РОВД'
    # :step: Заполняем дату выдачи
    value = '02.02.2020'
    # :step: Заполняем дату окончания действия
    value = '02.02.2025'
    # :step: Заполняем дату рождения
    value = '02.02.1970'
    # :step: Заполняем населённый пункт
    value = 'Брест'
    # :step: Заполняем домашний телефон
    value = '+375162789654'
    # :step: Заполняем мобильный телефон
    value = '+375294561237'
    # :step: Заполняем телефон контактного лица
    value = '+375332789347'
    # :step: Заполняем фио контактного лица и отношение к заявителю
    value = 'Кривой родственник'
    # :step: Заполняем кодовое слово
    value = 'КОТ'
    # :step: Заполняем индекс
    value = '224000'
    # :step: Заполняем страну регистрации
    value = 'Беларусь'
    # :step: Заполняем населённый пункт
    value = 'Брест'
    # :step: Заполняем место проживания
    value = 'Собственный дом'
    # :step: Устанавливаем флаг "Совпадает с адресом регистрации"
    # :step: Заполняем семейное положение
    value = 'Холост (не замужем)'
    # :step: Заполняем количество иждивенцев
    value = '0'
    # :step: Заполняем источник дохода
    value = 'справка'
    # :step: Заполняем среднемесячный доход к выдаче
    value = '80000'
    # :step: Заполняем регистрационный номер справки
    value = '1234'
    # :step: Заполняем дату регистрации справки
    value = '02.02.2020'
    # :step: Заполняем наименование предприятия
    value = 'Сustomer'
    # :step: Заполняем форму трудоустройства
    value = 'Контракт'
    # :step: Заполняем образование
    value = 'Высшее'
    # :step: Заполняем должность
    value = 'Автомаляр'
    # :step: Заполняем стаж на последнем месте работы (годы)
    value = '5'
    # :step: Заполняем стаж на последнем месте работы (месяцы)
    value = '6'
    # :step: Заполняем УНП организации
    value = '456987123'
    # :step: Заполняем поручителя по заявке
    value = '10605, Скоро новоселье, На рассмотрении, сумма 500 руб.'
    # :step: Заполняем запрашиваемую сумму
    value = '500'
    # :step: Нажимаем на кнопку "Завершить"
    # :assert: Отображается ошибка "Существует Клиент с такими же серией и номером документа - 6180263B259GB9 КРИВОЙ КЛИЕНТ ISPPM1661411", заявку завершить невозможно.

    logrecord = "{time} [{module}] -- [{method}]".format(time=datetime.now().strftime("%H:%M:%S,%f"), module=(os.path.basename(__file__)), method=(sys._getframe().f_code.co_name))
    print(logrecord)
